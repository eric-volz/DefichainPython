Search.setIndex({"docnames": ["api/exceptions", "api/node/accounts", "api/node/blockchain", "api/node/control", "api/node/evm", "api/node/generating", "api/node/index", "api/node/loan", "api/node/masternodes", "api/node/mining", "api/node/network", "api/node/node", "api/node/oracles", "api/node/poolpair", "api/node/proposals", "api/node/rawMethodsOverview", "api/node/rawtransactions", "api/node/spv", "api/node/stats", "api/node/tokens", "api/node/util", "api/node/vault", "api/node/wallet", "api/node/zmq", "api/ocean/address", "api/ocean/blocks", "api/ocean/consortium", "api/ocean/fee", "api/ocean/governance", "api/ocean/index", "api/ocean/loan", "api/ocean/masternodes", "api/ocean/ocean", "api/ocean/oracles", "api/ocean/poolpair", "api/ocean/prices", "api/ocean/rawTx", "api/ocean/rpc", "api/ocean/stats", "api/ocean/tokens", "api/ocean/transactions", "guides/example/chainedTransactions", "guides/example/extractPrivateKeys", "guides/example/index", "guides/guides/automateAddress", "guides/guides/basicUsageOfRawTransactions", "guides/guides/index", "guides/index", "index", "legal/community", "legal/licenseAndDisclaimer", "main/quickstart", "main/statusAndTasks", "sdk/hdwallet/account", "sdk/hdwallet/exceptions", "sdk/hdwallet/index", "sdk/hdwallet/utils", "sdk/hdwallet/wallet", "sdk/transactions/advanced/address/index", "sdk/transactions/advanced/address/p2pkh", "sdk/transactions/advanced/address/p2sh", "sdk/transactions/advanced/address/p2wpkh", "sdk/transactions/advanced/defitx/accounts", "sdk/transactions/advanced/defitx/governance", "sdk/transactions/advanced/defitx/index", "sdk/transactions/advanced/defitx/loans", "sdk/transactions/advanced/defitx/masternode", "sdk/transactions/advanced/defitx/pool", "sdk/transactions/advanced/defitx/vault", "sdk/transactions/advanced/index", "sdk/transactions/advanced/keys", "sdk/transactions/advanced/rawtransactions/fee", "sdk/transactions/advanced/rawtransactions/index", "sdk/transactions/advanced/rawtransactions/sign", "sdk/transactions/advanced/rawtransactions/tx", "sdk/transactions/advanced/rawtransactions/txinput", "sdk/transactions/advanced/rawtransactions/txoutput", "sdk/transactions/advanced/rawtransactions/witness", "sdk/transactions/advanced/remotedata/index", "sdk/transactions/advanced/remotedata/node", "sdk/transactions/advanced/remotedata/ocean", "sdk/transactions/advanced/utils", "sdk/transactions/builder/accounts", "sdk/transactions/builder/data", "sdk/transactions/builder/governance", "sdk/transactions/builder/index", "sdk/transactions/builder/loans", "sdk/transactions/builder/masternode", "sdk/transactions/builder/pool", "sdk/transactions/builder/txbuilder", "sdk/transactions/builder/utxo", "sdk/transactions/builder/vault", "sdk/transactions/exceptions", "sdk/transactions/index", "utils/logger", "utils/mnemonic"], "filenames": ["api/exceptions.rst", "api/node/accounts.rst", "api/node/blockchain.rst", "api/node/control.rst", "api/node/evm.rst", "api/node/generating.rst", "api/node/index.rst", "api/node/loan.rst", "api/node/masternodes.rst", "api/node/mining.rst", "api/node/network.rst", "api/node/node.rst", "api/node/oracles.rst", "api/node/poolpair.rst", "api/node/proposals.rst", "api/node/rawMethodsOverview.rst", "api/node/rawtransactions.rst", "api/node/spv.rst", "api/node/stats.rst", "api/node/tokens.rst", "api/node/util.rst", "api/node/vault.rst", "api/node/wallet.rst", "api/node/zmq.rst", "api/ocean/address.rst", "api/ocean/blocks.rst", "api/ocean/consortium.rst", "api/ocean/fee.rst", "api/ocean/governance.rst", "api/ocean/index.rst", "api/ocean/loan.rst", "api/ocean/masternodes.rst", "api/ocean/ocean.rst", "api/ocean/oracles.rst", "api/ocean/poolpair.rst", "api/ocean/prices.rst", "api/ocean/rawTx.rst", "api/ocean/rpc.rst", "api/ocean/stats.rst", "api/ocean/tokens.rst", "api/ocean/transactions.rst", "guides/example/chainedTransactions.rst", "guides/example/extractPrivateKeys.rst", "guides/example/index.rst", "guides/guides/automateAddress.rst", "guides/guides/basicUsageOfRawTransactions.rst", "guides/guides/index.rst", "guides/index.rst", "index.rst", "legal/community.rst", "legal/licenseAndDisclaimer.rst", "main/quickstart.rst", "main/statusAndTasks.rst", "sdk/hdwallet/account.rst", "sdk/hdwallet/exceptions.rst", "sdk/hdwallet/index.rst", "sdk/hdwallet/utils.rst", "sdk/hdwallet/wallet.rst", "sdk/transactions/advanced/address/index.rst", "sdk/transactions/advanced/address/p2pkh.rst", "sdk/transactions/advanced/address/p2sh.rst", "sdk/transactions/advanced/address/p2wpkh.rst", "sdk/transactions/advanced/defitx/accounts.rst", "sdk/transactions/advanced/defitx/governance.rst", "sdk/transactions/advanced/defitx/index.rst", "sdk/transactions/advanced/defitx/loans.rst", "sdk/transactions/advanced/defitx/masternode.rst", "sdk/transactions/advanced/defitx/pool.rst", "sdk/transactions/advanced/defitx/vault.rst", "sdk/transactions/advanced/index.rst", "sdk/transactions/advanced/keys.rst", "sdk/transactions/advanced/rawtransactions/fee.rst", "sdk/transactions/advanced/rawtransactions/index.rst", "sdk/transactions/advanced/rawtransactions/sign.rst", "sdk/transactions/advanced/rawtransactions/tx.rst", "sdk/transactions/advanced/rawtransactions/txinput.rst", "sdk/transactions/advanced/rawtransactions/txoutput.rst", "sdk/transactions/advanced/rawtransactions/witness.rst", "sdk/transactions/advanced/remotedata/index.rst", "sdk/transactions/advanced/remotedata/node.rst", "sdk/transactions/advanced/remotedata/ocean.rst", "sdk/transactions/advanced/utils.rst", "sdk/transactions/builder/accounts.rst", "sdk/transactions/builder/data.rst", "sdk/transactions/builder/governance.rst", "sdk/transactions/builder/index.rst", "sdk/transactions/builder/loans.rst", "sdk/transactions/builder/masternode.rst", "sdk/transactions/builder/pool.rst", "sdk/transactions/builder/txbuilder.rst", "sdk/transactions/builder/utxo.rst", "sdk/transactions/builder/vault.rst", "sdk/transactions/exceptions.rst", "sdk/transactions/index.rst", "utils/logger.rst", "utils/mnemonic.rst"], "titles": ["HTTP Exceptions", "Accounts", "Blockchain", "Control", "EVM", "Generating", "Node / RPC", "Loan", "Masternodes", "Mining", "Network", "Node", "Oracles", "Poolpair", "Proposals", "Raw Methods Overview", "Rawtransactions", "Spv", "Stats", "Tokens", "Util", "Vault", "Wallet", "Zmq", "Address", "Blocks", "Consortium", "Fee", "Governance", "Ocean", "Loan", "Masternodes", "Ocean", "Oracles", "Poolpairs", "Prices", "RawTx", "Rpc", "Stats", "Tokens", "Transactions", "Chain Transactions", "Extract Private Keys", "Examples", "How To Automate Your Defichain Address?", "Basic Usage Of Transactions Builder", "Guides", "Guides and Examples", "Installation", "Community", "License &amp; Disclaimer", "Quickstart", "Status and Tasks", "Account", "Wallet Exceptions", "HDWallet", "Utils", "Wallet", "Addresses", "P2PKH", "P2SH", "P2WPKH", "Accounts", "Governance", "DefiTx", "Loans", "Masternode", "Pool", "Vault", "Advanced", "Keys", "Fee", "Raw Transactions", "Sign", "Transaction", "Transactions Inputs", "Transactions Output", "Wittness", "Remote Data Source", "Remote Data Node", "Remote Data Ocean", "Utils", "Accounts", "Data", "Governance", "Transaction Builder", "Loans", "Masternode", "Pool", "TxBuilder", "UTXO", "Vault", "Transactions Exceptions", "Transactions", "Logger", "Mnemonic"], "terms": {"class": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 53, 54, 55, 57, 58, 59, 60, 61, 62, 63, 65, 66, 67, 68, 70, 74, 75, 76, 77, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95], "defichain": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 45, 46, 48, 53, 54, 56, 57, 58, 59, 60, 61, 62, 63, 65, 66, 67, 68, 70, 71, 73, 74, 75, 76, 77, 79, 80, 81, 82, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95], "badmethod": 0, "msg": [0, 10, 92], "The": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 18, 19, 20, 21, 22, 29, 32, 41, 42, 45, 48, 49, 50, 51, 55, 58, 59, 60, 61, 63, 74, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 93, 95], "call": [0, 2, 3, 5, 8, 10, 12, 13, 14, 16, 18, 19, 22, 37, 44, 74, 75, 76, 77], "method": [0, 3, 6, 22, 29, 37, 44, 48, 55, 74, 75, 76, 77, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 94], "i": [0, 1, 2, 3, 4, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 19, 20, 21, 22, 29, 32, 41, 42, 44, 45, 48, 49, 50, 51, 52, 55, 57, 58, 62, 74, 76, 79, 80, 81, 85, 89, 93, 94, 95], "exist": [0, 6, 7, 16, 22, 79, 80, 93], "badrequest": 0, "server": [0, 3, 9, 10, 22], "cannot": [0, 8, 22, 41], "process": [0, 2, 10, 20, 22], "request": [0, 1, 8, 9, 10, 11, 12, 13, 14, 15, 20, 21, 22, 44, 48], "due": [0, 2, 10, 22], "an": [0, 1, 2, 3, 4, 6, 7, 8, 9, 10, 12, 13, 15, 16, 19, 20, 21, 22, 24, 32, 33, 37, 44, 45, 48, 49, 50, 51, 52, 62, 76, 79, 80, 81, 85, 86, 88, 89, 91, 93], "appar": 0, "client": [0, 9], "error": [0, 2, 16, 20, 22, 44, 45, 94], "forbidden": 0, "contain": [0, 1, 2, 3, 7, 8, 9, 10, 12, 13, 19, 20, 21, 22, 45, 65, 68, 79, 80, 86, 89, 91], "valid": [0, 2, 3, 7, 8, 9, 14, 15, 16, 19, 20, 21, 22, 28, 42, 48, 56, 58, 85, 89, 95], "data": [0, 1, 2, 3, 4, 6, 9, 10, 12, 15, 16, 19, 20, 21, 22, 24, 27, 29, 42, 44, 51, 57, 69, 73, 84, 85, 88, 89], "wa": [0, 2, 9, 10, 19, 20, 22, 49, 51, 74, 75, 76, 77], "understood": 0, "refus": [0, 83], "action": [0, 2, 15, 50], "internalservererror": 0, "A": [0, 1, 2, 3, 7, 9, 13, 16, 20, 22, 44, 45, 50, 95], "gener": [0, 2, 3, 6, 8, 9, 15, 20, 22, 42, 51, 56, 59, 60, 61, 75, 95], "messag": [0, 10, 15, 20, 22, 23], "given": [0, 2, 8, 9, 10, 11, 12, 13, 19, 20, 21, 22, 28, 29, 30, 31, 34, 45, 58, 59, 60, 61, 73, 74, 75, 77, 79, 80, 81, 87, 89], "when": [0, 2, 3, 9, 10, 13, 16, 17, 22, 41, 42, 44, 45, 55, 75, 85], "unexpect": 0, "condit": [0, 50], "encount": [0, 20, 22], "more": [0, 1, 2, 6, 16, 20, 22, 29, 51, 55], "specif": [0, 1, 2, 6, 8, 9, 10, 11, 12, 13, 16, 19, 21, 22, 26, 29, 67, 76, 88], "suitabl": 0, "notfound": 0, "resourc": [0, 29], "could": [0, 2, 3, 22, 42, 44, 45], "found": [0, 2, 6, 9, 11, 16, 20, 29, 55, 85], "mai": [0, 1, 2, 6, 8, 9, 12, 13, 16, 19, 21, 22], "avail": [0, 1, 2, 3, 7, 9, 10, 15, 16, 19, 21, 22], "futur": [0, 1, 2, 12], "serviceunavail": [0, 11], "handl": [0, 10], "unauthor": 0, "similar": [0, 2, 85], "403": 0, "us": [0, 1, 2, 3, 6, 7, 8, 9, 10, 11, 12, 13, 16, 18, 19, 20, 22, 29, 32, 41, 42, 44, 45, 48, 50, 51, 55, 57, 59, 60, 61, 65, 74, 75, 76, 77, 83, 85, 89, 93, 95], "authent": 0, "requir": [0, 1, 2, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 16, 18, 19, 20, 21, 22, 24, 25, 26, 28, 30, 31, 33, 34, 35, 36, 37, 39, 40, 42, 44, 45, 57, 58, 59, 60, 61, 62, 63, 65, 66, 67, 68, 71, 73, 74, 75, 76, 77, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 95], "ha": [0, 1, 2, 3, 10, 13, 16, 19, 20, 22, 41, 44, 48, 52, 58, 73], "fail": [0, 2, 3, 13, 22], "yet": [0, 2, 16, 22, 45], "been": [0, 3, 16, 18, 20, 22, 41], "provid": [0, 2, 10, 13, 16, 19, 20, 22, 42, 44, 45, 50, 74, 85, 89, 95], "unprocessableent": 0, "well": [0, 2, 22, 44, 48, 85], "form": [0, 12, 16, 20, 21, 22], "unabl": 0, "follow": [0, 1, 2, 3, 9, 20, 41, 44, 45, 48, 50, 52, 85], "semant": [0, 57], "wrongparamet": 0, "If": [0, 1, 2, 3, 6, 7, 8, 9, 10, 11, 12, 13, 16, 19, 20, 21, 22, 29, 32, 42, 44, 45, 48, 49, 74, 85, 89, 93, 94, 95], "expect": [0, 1, 2], "paremet": 0, "were": [0, 2, 15, 16, 22], "pass": [0, 2, 7, 9, 22, 45, 55, 89, 94], "node": [1, 2, 3, 4, 5, 7, 8, 9, 10, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 42, 45, 49, 55, 78, 85, 89, 93, 94], "accounthistorycount": [1, 15], "owner": [1, 8, 13, 15, 19, 21, 24, 31, 33, 66, 87], "str": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 18, 19, 20, 21, 22, 24, 25, 26, 27, 28, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 53, 54, 56, 57, 58, 59, 60, 61, 62, 63, 65, 66, 67, 68, 70, 73, 74, 75, 76, 77, 79, 80, 82, 83, 84, 86, 87, 88, 89, 90, 91, 93, 94, 95], "mine": [1, 2, 5, 6, 14, 15, 21, 22, 28], "no_reward": [1, 15], "bool": [1, 2, 3, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 19, 20, 21, 22, 24, 28, 34, 35, 39, 56, 57, 58, 74, 77, 79, 80, 89, 95], "none": [1, 2, 3, 6, 7, 8, 9, 10, 11, 12, 13, 14, 16, 19, 20, 21, 22, 24, 25, 28, 30, 31, 32, 33, 34, 35, 36, 39, 40, 42, 44, 54, 56, 57, 66, 75, 79, 80, 83, 87, 89, 90, 93], "token": [1, 2, 4, 6, 7, 12, 13, 15, 21, 22, 24, 25, 26, 29, 30, 33, 34, 35, 38, 40, 41, 45, 62, 65, 67, 76, 82, 86, 88, 91, 93, 94], "txtype": [1, 15, 21], "int": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 16, 19, 20, 21, 22, 24, 25, 27, 28, 30, 31, 33, 34, 35, 38, 39, 40, 42, 56, 57, 62, 66, 67, 71, 74, 75, 76, 81, 82, 87, 88, 90, 93, 95], "return": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 16, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 51, 56, 57, 58, 59, 60, 61, 71, 73, 74, 75, 76, 77, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 93, 95], "count": [1, 2, 9, 10, 15, 18, 22, 35, 38], "histori": [1, 18, 20, 21, 24, 30], "paramet": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 16, 18, 19, 20, 21, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 39, 40, 45, 55, 56, 57, 58, 59, 60, 61, 62, 63, 65, 66, 67, 68, 71, 73, 74, 75, 76, 77, 79, 80, 81, 82, 83, 84, 86, 87, 88, 89, 90, 91, 93, 94, 95], "option": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 19, 20, 21, 22, 24, 25, 27, 28, 30, 31, 32, 33, 34, 35, 36, 38, 39, 40, 57, 62, 66, 75, 76, 82, 83, 84, 86, 87, 88, 89, 90, 91, 94, 95], "singl": [1, 6, 10, 16, 21, 22, 44, 93], "id": [1, 2, 6, 7, 8, 9, 10, 12, 13, 14, 15, 16, 19, 21, 22, 24, 25, 26, 28, 30, 31, 33, 34, 35, 39, 40, 62, 65, 68, 75, 82, 86, 87, 91], "cscript": [1, 21], "address": [1, 2, 4, 5, 7, 8, 10, 12, 13, 14, 15, 16, 19, 20, 21, 22, 23, 29, 30, 31, 33, 38, 41, 42, 46, 48, 57, 59, 60, 61, 62, 65, 66, 67, 68, 69, 75, 76, 79, 80, 82, 83, 85, 86, 87, 88, 89, 90, 91, 94], "reserv": [1, 21, 34], "word": [1, 21, 42, 44, 45, 56, 57, 95], "list": [1, 2, 3, 6, 7, 8, 9, 10, 12, 13, 18, 21, 22, 24, 25, 29, 30, 31, 32, 33, 34, 35, 39, 40, 45, 48, 51, 74, 79, 80, 93, 95], "all": [1, 2, 3, 4, 6, 7, 8, 9, 10, 12, 14, 15, 16, 21, 22, 24, 25, 28, 29, 34, 45, 48, 50, 52, 55, 57, 67, 74, 79, 80, 85, 88, 89, 90, 94, 95], "own": [1, 21, 42, 45, 48, 83, 84, 85, 93], "whole": [1, 21, 22, 85], "db": [1, 3, 21], "default": [1, 2, 7, 8, 9, 10, 11, 13, 14, 16, 19, 21, 22, 42, 44, 56, 57, 62, 66, 82, 87, 89, 94, 95], "filter": [1, 2, 21, 22, 44], "out": [1, 2, 10, 16, 20, 22, 41, 44, 50, 86], "reward": [1, 2, 8, 13, 25, 34, 38, 66, 87], "transact": [1, 2, 4, 6, 7, 8, 9, 10, 12, 13, 14, 15, 16, 19, 20, 21, 22, 24, 25, 27, 29, 36, 43, 46, 49, 58, 59, 60, 61, 62, 63, 65, 66, 67, 68, 69, 70, 71, 73, 77, 79, 80, 81, 82, 83, 84, 86, 87, 88, 89, 90, 91], "type": [1, 2, 4, 10, 13, 14, 15, 16, 19, 20, 21, 22, 23, 24, 28, 34, 40, 42, 48, 55, 57, 58, 59, 60, 61, 74, 85, 94, 95], "support": [1, 9, 10, 12, 16, 17, 21, 22, 45, 48, 52, 85], "letter": [1, 21, 51], "from": [1, 2, 3, 4, 6, 7, 8, 10, 11, 12, 13, 15, 16, 19, 21, 22, 29, 30, 32, 34, 41, 42, 44, 45, 48, 50, 51, 56, 57, 59, 60, 61, 67, 68, 74, 75, 76, 77, 79, 80, 82, 85, 86, 88, 89, 90, 91, 93, 94, 95], "customtxtyp": [1, 21], "exampl": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 16, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 45, 51, 55, 74, 76, 93, 94], "true": [1, 2, 3, 7, 8, 9, 10, 12, 13, 16, 19, 20, 21, 22, 28, 29, 41, 42, 56, 57, 58, 74, 79, 80, 95], "accounttoaccount": [1, 15, 45, 82], "_from": [1, 4, 7, 13, 19, 21], "input": [1, 2, 4, 7, 8, 9, 12, 13, 14, 15, 16, 19, 20, 21, 22, 41, 42, 45, 72, 74, 77, 79, 80, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 94], "creat": [1, 4, 6, 7, 8, 12, 13, 14, 16, 19, 20, 21, 22, 29, 32, 41, 44, 45, 48, 51, 55, 58, 68, 74, 82, 83, 84, 86, 87, 88, 89, 90, 91, 93, 94, 95], "submit": [1, 4, 7, 8, 9, 12, 13, 16, 19, 21, 36, 41, 44, 45, 83], "local": [1, 2, 4, 7, 8, 9, 10, 12, 13, 16, 19, 21, 22], "network": [1, 2, 4, 6, 7, 8, 9, 12, 13, 15, 16, 19, 21, 32, 36, 41, 42, 44, 48, 51, 53, 57, 58, 59, 60, 61, 70, 74, 75, 76, 77, 83, 85, 89], "transfer": [1, 6, 7, 13, 22, 65, 86], "specifi": [1, 2, 3, 5, 6, 8, 9, 10, 11, 12, 13, 16, 19, 20, 21, 22, 25, 44, 45, 48, 55, 57, 58, 76, 82, 83, 85, 86, 88, 89, 90, 93], "specfi": 1, "first": [1, 2, 8, 12, 13, 21, 22, 41, 42, 44, 45, 48, 49, 55, 57, 85], "argument": [1, 3, 6, 8, 9, 10, 12, 13, 16, 19, 21, 22, 85], "empti": [1, 2, 4, 6, 8, 10, 12, 13, 19, 21, 22], "arrai": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 12, 13, 14, 16, 18, 19, 20, 21, 22, 23, 37, 93, 95], "utxo": [1, 2, 6, 8, 12, 13, 16, 19, 21, 22, 41, 48, 62, 75, 76, 82, 83, 85, 91], "spend": [1, 2, 6, 8, 12, 13, 19, 21, 22, 44, 75, 82, 83, 84, 86, 87, 88, 90, 91, 95], "defi": [1, 2, 3, 6, 10, 11, 13, 16, 20, 22, 38, 42, 44, 45, 48, 62, 63, 65, 66, 67, 68, 76], "sender": [1, 16, 22, 62, 90], "json": [1, 2, 3, 4, 6, 7, 8, 9, 10, 12, 13, 14, 16, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 30, 31, 33, 34, 35, 36, 37, 38, 39, 40, 62, 74, 75, 76, 82, 83, 88, 90, 93], "object": [1, 2, 3, 4, 6, 7, 8, 9, 10, 11, 12, 13, 14, 16, 18, 19, 20, 21, 22, 23, 29, 32, 44, 45, 48, 57, 58, 59, 60, 61, 62, 71, 74, 75, 76, 77, 89, 94], "amount": [1, 2, 3, 4, 7, 8, 12, 13, 14, 15, 16, 19, 21, 22, 24, 28, 30, 33, 34, 35, 38, 44, 48, 62, 65, 67, 68, 71, 82, 83, 85, 86, 88, 90, 91], "hash": [1, 2, 4, 5, 7, 8, 9, 12, 13, 14, 15, 16, 19, 21, 22, 24, 25, 30, 33, 34, 35, 40, 45, 57, 77, 85], "string": [1, 2, 3, 4, 6, 7, 8, 9, 10, 12, 13, 14, 16, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 30, 31, 33, 34, 35, 36, 37, 38, 39, 40, 56, 57, 59, 60, 61, 83, 86, 88, 89, 91, 93, 95], "hex": [1, 2, 4, 6, 7, 8, 9, 12, 13, 14, 15, 16, 19, 20, 21, 22, 24, 36, 40, 56, 57, 73, 74, 75, 76, 77, 79, 80, 83, 89], "encod": [1, 2, 4, 7, 8, 9, 12, 13, 14, 16, 19, 20, 21, 22, 57, 95], "broadcast": [1, 2, 4, 7, 8, 12, 13, 14, 16, 19, 21, 22, 45, 48, 89], "sender_address": 1, "address1": [1, 6, 93], "1": [1, 2, 3, 4, 5, 6, 8, 9, 10, 11, 13, 14, 16, 20, 21, 22, 28, 29, 41, 42, 51, 55, 57, 81, 82, 85, 86, 88, 89, 90, 91, 93], "0": [1, 2, 3, 4, 6, 7, 8, 9, 10, 11, 13, 14, 16, 20, 21, 22, 25, 28, 30, 34, 39, 41, 42, 44, 45, 48, 51, 55, 57, 62, 66, 74, 76, 81, 82, 85, 87, 88, 89, 93], "dfi": [1, 2, 4, 5, 6, 7, 10, 12, 13, 14, 16, 19, 20, 21, 22, 35, 41, 44, 45, 48, 51, 57, 62, 76, 82, 85, 88, 90, 91, 93], "address2": [1, 6, 93], "2": [1, 2, 3, 4, 6, 8, 20, 22, 29, 42, 49, 55, 57, 85, 86, 93], "btc": [1, 6, 10, 12, 13, 19, 41, 45, 48, 51, 82, 85, 88, 93], "3": [1, 2, 4, 6, 16, 22, 29, 42, 49, 55, 85, 93], "eth": [1, 6, 12, 51, 93], "accounttoutxo": [1, 15, 82], "third": [1, 16, 41, 44, 57, 85], "100": [1, 12, 13, 19, 21, 22, 91], "executesmartcontract": [1, 15], "name": [1, 2, 3, 7, 9, 10, 11, 12, 13, 15, 18, 19, 22, 24, 26, 34, 39, 57], "send": [1, 4, 5, 10, 15, 22, 36, 37, 42, 48, 76, 79, 80, 82, 83, 88, 90], "either": [1, 2, 8, 10, 16, 20, 22, 45], "fund": [1, 14, 22, 44, 45, 48, 49], "execut": [1, 2, 6, 12, 22, 29, 41, 48, 51, 85], "smart": [1, 2], "contract": [1, 2, 50], "dbtcdfiswap": 1, "1000": [1, 2, 14, 16, 21, 45], "futureswap": [1, 3, 15], "destin": [1, 6, 15, 19, 21, 22, 68, 91], "receiv": [1, 2, 10, 14, 16, 21, 22], "result": [1, 2, 3, 6, 10, 13, 16, 19, 22, 29, 45], "dtoken": [1, 7, 15], "dusd": [1, 7, 12, 21, 34, 41, 86, 88], "suppli": [1, 19, 22, 38, 45], "tsla": [1, 7, 12, 21, 88], "getaccount": [1, 15], "start": [1, 2, 8, 10, 12, 13, 15, 19, 21, 22, 35, 57, 62], "including_start": [1, 8, 12, 13, 15, 19, 21], "limit": [1, 4, 8, 9, 10, 12, 13, 15, 19, 21, 22, 39, 50, 74], "indexed_amount": [1, 15], "fals": [1, 2, 3, 8, 9, 10, 11, 12, 13, 14, 16, 19, 20, 21, 22, 28, 57, 89], "inform": [1, 2, 3, 6, 7, 8, 9, 10, 12, 13, 14, 16, 19, 20, 21, 22, 23, 26, 28, 29, 30, 31, 39, 48, 51, 55, 74, 75, 76, 79, 80, 85, 89, 93], "about": [1, 2, 3, 6, 7, 8, 10, 12, 13, 14, 16, 19, 20, 21, 22, 23, 28, 29, 30, 31, 39, 45, 48, 52, 55, 74, 75, 76, 79, 80, 93], "base58": [1, 16], "bech32": [1, 16, 20, 22, 24, 42, 44, 51, 55, 57], "kei": [1, 2, 3, 6, 8, 9, 10, 12, 13, 15, 16, 19, 20, 21, 22, 30, 33, 34, 35, 41, 43, 45, 48, 53, 57, 58, 59, 60, 61, 62, 67, 69, 73, 74, 85, 89, 93], "iter": [1, 5, 8, 12, 13, 21, 44], "lexicograph": [1, 8, 12, 13, 21], "order": [1, 3, 8, 12, 13, 21, 24, 25, 40, 44, 74], "typic": [1, 8, 12, 13, 21, 22], "": [1, 2, 7, 8, 9, 10, 12, 13, 16, 19, 21, 22, 41, 44, 74, 95], "set": [1, 2, 3, 7, 8, 9, 10, 11, 12, 13, 14, 16, 19, 21, 22, 24, 28, 29, 30, 31, 34, 39, 44, 45, 95], "last": [1, 2, 8, 9, 10, 12, 13, 18, 21, 22, 44, 55, 57], "tokenid": [1, 13, 22, 24, 26, 30, 34, 40, 45, 62, 76, 82], "previou": [1, 2, 8, 9, 12, 13, 16, 21, 22, 28, 29, 75], "includ": [1, 2, 3, 8, 9, 10, 12, 13, 21, 22, 41, 44, 50, 55, 76, 83, 84, 85], "posit": [1, 8, 12, 13, 16, 21, 22], "maximum": [1, 2, 8, 9, 12, 13, 21, 22, 29, 36, 67, 79, 80, 88, 89], "number": [1, 2, 3, 4, 6, 8, 9, 10, 12, 13, 16, 18, 19, 20, 21, 22, 28, 30, 33, 35, 42, 45, 57, 75, 81, 95], "format": [1, 2, 4, 6, 7, 12, 13, 15, 19, 21, 22, 24, 29, 44, 45, 55, 57, 68, 74, 75, 76], "output": [1, 2, 6, 9, 15, 16, 20, 22, 29, 41, 45, 62, 72, 74, 75, 85, 89, 94], "obj": [1, 13, 15], "mxxa2sqmetjfbxcnbnbuzesbctn1jshxst": [1, 7], "getaccounthistori": [1, 15, 24], "blockheight": [1, 2, 8, 15], "txn": [1, 15, 24], "block": [1, 2, 4, 5, 7, 8, 9, 10, 11, 12, 13, 16, 19, 20, 21, 22, 24, 27, 29, 30, 32, 33, 34, 35, 38, 40, 41, 44, 51, 75], "height": [1, 2, 7, 8, 9, 10, 11, 15, 19, 21, 22, 24, 25, 30, 31, 33, 34, 35, 39, 40, 51], "search": [1, 6, 19, 29], "103": 1, "getburninfo": [1, 15], "burn": [1, 19, 26, 38], "burnt": 1, "coin": [1, 6, 13, 22, 41, 42, 86, 93], "full": [1, 9, 10, 12, 22, 42], "acindex": 1, "correct": [1, 29, 44, 58, 74, 85], "feeburn": [1, 38], "valu": [1, 2, 3, 4, 6, 7, 8, 9, 12, 13, 15, 16, 20, 21, 22, 24, 29, 38, 40, 45, 62, 67, 75, 76, 79, 80, 93, 94, 95], "n": [1, 2, 6, 7, 8, 9, 10, 12, 14, 15, 16, 19, 20, 21, 22, 23, 24, 28, 40, 42], "nnnnnnnn": [1, 2, 12, 21], "fee": [1, 2, 8, 9, 10, 16, 20, 21, 22, 28, 29, 34, 36, 38, 45, 72, 79, 80, 89, 91], "emissionburn": [1, 38], "non": [1, 2, 9, 10, 16, 19, 22, 57], "coinbas": [1, 2, 9, 22, 40, 75, 76], "getpendingdusdswap": [1, 15], "get": [1, 3, 6, 12, 18, 19, 21, 22, 24, 25, 26, 27, 28, 29, 30, 31, 33, 34, 35, 36, 38, 39, 40, 41, 42, 44, 56, 57, 58, 59, 60, 61, 93, 94], "pend": [1, 2, 9, 22], "swap": [1, 3, 12, 13, 34, 51, 67, 88], "getpendingfutureswap": [1, 15], "tokensymbol": [1, 26], "symbol": [1, 7, 13, 15, 19, 21, 22, 24, 33, 34, 35, 39, 44, 57, 62, 68, 93], "gettokenbal": [1, 15], "symbol_lookup": [1, 15], "evm": [1, 6, 15, 22], "balanc": [1, 2, 4, 12, 22, 24, 34, 48], "belong": [1, 6, 8, 19, 24, 89], "wallet": [1, 6, 7, 8, 11, 12, 13, 14, 15, 16, 19, 21, 41, 42, 44, 48, 85, 89], "layer": [1, 41], "note": [1, 2, 9, 10, 16, 22, 44], "thi": [1, 2, 3, 4, 6, 7, 8, 9, 10, 11, 14, 15, 16, 18, 19, 20, 22, 29, 32, 41, 42, 44, 45, 48, 49, 50, 52, 55, 74, 75, 76, 77, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 93, 94, 95], "doe": [1, 2, 22, 42], "dst20": 1, "listaccounthistori": [1, 15, 24], "maxblockheight": [1, 15, 21], "depth": [1, 8, 15, 21], "downto": [1, 21], "genesi": [1, 2, 8, 21], "chaintip": 1, "multipl": [1, 2, 6, 13, 16, 22, 41, 44, 90, 93, 95], "record": [1, 21, 28, 33, 34, 35], "entri": [1, 2, 13, 74, 93], "skip": [1, 15, 22], "unlimit": 1, "160": [1, 57, 95], "10": [1, 3, 7, 13, 19, 21, 22, 24, 27, 34, 42, 44, 45, 55, 66, 87], "listaccount": [1, 15], "verbos": [1, 2, 8, 13, 15, 16, 19, 21], "is_mine_onli": [1, 13, 15], "chain": [1, 2, 9, 15, 16, 19, 22, 28, 43, 57], "flag": [1, 8, 9, 13, 15, 21, 22, 45], "otherwis": [1, 8, 10, 13, 16, 21, 22, 28, 50, 85], "ar": [1, 2, 3, 5, 6, 8, 9, 10, 11, 13, 15, 16, 20, 21, 22, 29, 41, 42, 44, 45, 48, 51, 55, 57, 67, 74, 75, 85, 88, 89, 93, 94, 95], "listburnhistori": [1, 15], "down": [1, 21], "listcommunitybal": [1, 15], "commun": [1, 11, 14, 32, 38, 52], "balance_typ": 1, "listpendingdusdswap": [1, 15], "to_dusd": 1, "have": [1, 2, 8, 9, 10, 16, 20, 22, 29, 41, 45, 48, 49, 74, 85, 89], "field": [1, 2, 10, 14, 16, 22], "listpendingfutureswap": [1, 15], "sendtokenstoaddress": [1, 15], "selectionmod": [1, 15], "pie": 1, "your": [1, 6, 8, 11, 19, 22, 29, 42, 45, 46, 48, 49, 55, 82, 83, 84, 85, 93], "pick": 1, "manuali": 1, "autoselect": 1, "param": [1, 28, 37], "indic": [1, 2, 3, 9, 22], "mode": [1, 2, 3, 9, 15, 16, 20, 22], "onc": [1, 8, 10, 16, 22, 85], "forward": [1, 9], "select": [1, 2, 7, 9, 13, 16, 18, 21, 22], "without": [1, 3, 16, 20, 22, 42, 48, 50], "sort": [1, 24, 29, 30, 31, 33, 34, 35], "just": [1, 10, 22, 48, 51, 55, 89, 90], "crumb": 1, "ascend": 1, "sum": [1, 2, 22], "It": [1, 2, 6, 9, 20, 22, 41, 42, 44, 45, 48], "mean": [1, 2, 3, 7, 8, 10, 13, 21, 22, 41, 44], "we": [1, 2, 10, 22, 44], "minim": 1, "neccessari": 1, "descend": [1, 2, 22], "maxim": 1, "srcaddress1": 1, "srcaddress2": 1, "dstaddress1": 1, "5": [1, 4, 7, 10, 13, 18, 41, 55, 66, 85, 87], "sendutxosfrom": [1, 15], "chang": [1, 2, 7, 9, 15, 16, 22, 32, 67, 87, 88, 90], "from_address": [1, 58], "to_address": 1, "transferdomain": [1, 15], "tx": [1, 2, 4, 7, 8, 9, 13, 16, 19, 22, 31, 34, 39, 41, 44, 48, 71, 77, 85, 89], "asset": [1, 26, 44, 45], "across": [1, 2], "domain": [1, 6], "dvm": [1, 4, 6, 22], "etc": [1, 22], "you": [1, 2, 6, 8, 11, 13, 16, 22, 29, 32, 41, 42, 44, 45, 48, 49, 50, 51, 52, 55, 57, 74, 76, 83, 85, 91, 93, 95], "can": [1, 2, 4, 6, 7, 8, 10, 11, 13, 16, 19, 21, 22, 29, 32, 41, 42, 44, 45, 48, 51, 52, 55, 57, 74, 83, 85, 89, 93, 94, 95], "build": [1, 6, 48, 62, 63, 65, 66, 67, 68, 85, 89, 93], "easili": [1, 44, 45, 48], "virtual": [1, 2, 16, 20], "machin": 1, "ethereum": 1, "src": [1, 15], "dst": [1, 15], "sourc": [1, 6, 45, 69, 79, 80, 89], "numer": [1, 2, 3, 6, 7, 8, 9, 10, 12, 16, 18, 19, 20, 22, 23], "dfi_address": 1, "eth_address": 1, "utxostoaccount": [1, 15, 41, 45, 82], "second": [1, 2, 3, 9, 10, 16, 19, 22, 41, 44, 57, 85], "withdrawfutureswap": [1, 15], "withdraw": [1, 21, 68, 91], "back": [1, 21, 22, 85, 86], "clearmempool": [2, 15], "clear": [2, 10, 22], "memori": [2, 3, 22], "pool": [2, 13, 15, 22, 34, 41, 44, 45, 48, 51, 64, 85], "remov": [2, 3, 8, 10, 12, 13, 22, 67, 88], "getbestblockhash": [2, 15], "best": [2, 22, 34, 44], "tip": [2, 9, 22], "most": [2, 6, 16, 22, 29, 55], "work": [2, 9, 11, 16, 22, 29, 44, 45, 75], "fulli": [2, 16, 19], "getblock": [2, 15], "blockhash": [2, 4, 15, 16, 19, 22], "serial": [2, 16, 19, 22, 45, 89], "each": [2, 9, 10, 13, 16, 22, 41, 44, 45, 48, 90], "same": [2, 11, 16, 22, 41, 44, 74, 85], "confirm": [2, 8, 16, 19, 20, 22, 27], "main": [2, 6, 9, 11, 22, 29, 32, 55, 89], "size": [2, 9, 16, 18, 20, 22, 24, 25, 28, 30, 31, 33, 34, 35, 39, 40, 44, 45, 83, 95], "strippeds": 2, "exclud": [2, 3, 22, 44, 45], "wit": [2, 9, 16, 19, 20, 22, 35, 45, 57], "weight": [2, 9, 16, 25, 40], "defin": [2, 7, 9, 20, 55, 95], "bip": [2, 9, 10, 16, 20, 22], "141": [2, 20], "index": [2, 4, 9, 10, 15, 16, 21, 22, 29, 30, 41, 44, 54, 55, 57], "version": [2, 3, 9, 10, 16, 20, 22, 25, 32, 38, 40, 45], "versionhex": 2, "00000000": [2, 21], "hexadecim": [2, 9, 20, 44, 74, 75, 76, 83, 84], "merkleroot": [2, 25], "xxxx": [2, 9, 10, 22], "merkl": 2, "root": [2, 57], "nonutxo": 2, "transactionid": [2, 22], "time": [2, 3, 9, 10, 11, 14, 16, 18, 22, 24, 25, 30, 33, 34, 35, 40, 41, 44, 66, 87], "ttt": [2, 3, 9, 10, 16, 22], "sinc": [2, 9, 10, 16, 22, 52, 85], "epoch": [2, 9, 10, 16, 22], "jan": [2, 9, 10, 16, 22], "1970": [2, 9, 10, 16, 22], "gmt": [2, 9, 10, 16, 22], "mediantim": [2, 24, 25, 30, 33, 34, 35, 40], "median": 2, "nonc": [2, 4, 9, 15], "bit": [2, 9, 95], "1d00ffff": 2, "difficulti": [2, 9, 25, 38], "x": [2, 10, 16, 20, 22, 48], "xxx": [2, 3, 9, 10, 16, 22], "chainwork": 2, "produc": [2, 16], "up": [2, 3, 13, 16, 22, 44, 45], "ntx": 2, "previousblockhash": [2, 9], "nextblockhash": 2, "next": [2, 9, 12, 16, 22, 24, 25, 28, 30, 31, 33, 34, 35, 39, 40, 41, 55, 57, 94], "getrawtransact": [2, 15, 16], "rpc": [2, 3, 5, 10, 15, 18, 22, 29, 45, 51], "differ": [2, 9, 16, 22, 42, 44, 45, 55, 74, 85, 90], "ffa579106ef8d396223c616b9a77b8dab22656648b55965fc9e541e864f0f9fd": 2, "getblockchaininfo": [2, 15], "variou": [2, 10, 22, 55], "state": [2, 3, 10, 14, 15, 21, 22, 30, 31, 85], "info": [2, 3, 9, 10, 22, 38], "regard": [2, 10], "current": [2, 3, 7, 8, 9, 10, 14, 16, 17, 22, 24, 52, 85], "bip70": [2, 9], "test": [2, 9, 11, 13, 16, 19, 22, 36, 79, 80, 89], "regtest": [2, 9, 55], "xxxxxx": [2, 3, 22], "header": [2, 9, 10], "bestblockhash": 2, "verificationprogress": 2, "estim": [2, 9, 13, 16, 20, 21, 22, 27, 34], "verif": [2, 16, 22], "progress": [2, 22, 48, 52], "initialblockdownload": 2, "debug": [2, 3, 4], "whether": [2, 10, 16, 19, 20, 22, 44, 50], "initi": [2, 29, 45, 94], "download": [2, 48], "total": [2, 3, 9, 10, 19, 21, 22, 34, 35, 38, 42, 44, 45, 95], "activ": [2, 3, 7, 8, 10, 13, 16, 22, 23, 24, 35], "size_on_disk": 2, "undo": 2, "file": [2, 3, 20, 22, 50], "disk": [2, 3], "prune": [2, 3, 22], "xx": [2, 9, 22], "boolean": [2, 9, 10, 16, 19, 20, 22, 28], "subject": [2, 50], "pruneheight": 2, "lowest": 2, "complet": [2, 3, 14, 16, 22, 28], "store": [2, 22, 42, 44, 57, 67, 94], "onli": [2, 3, 4, 6, 8, 9, 10, 12, 13, 16, 19, 20, 21, 22, 29, 32, 41, 42, 45, 51, 55, 74, 75, 94], "present": [2, 9, 16, 19, 22, 44], "enabl": [2, 4, 10, 16, 19, 22, 48, 79, 80], "automatic_prun": 2, "automat": [2, 6, 10, 13, 22, 44, 85, 89], "prune_target_s": 2, "target": [2, 9, 10, 16, 20, 21, 22, 44], "softfork": [2, 9], "statu": [2, 3, 13, 14, 15, 16, 28, 34, 48], "one": [2, 6, 8, 9, 10, 13, 14, 16, 20, 22, 29, 34, 41, 42, 45, 51, 55, 58, 74, 82, 85, 89, 90, 93], "buri": 2, "bip9": 2, "locked_in": 2, "28": 2, "signal": 2, "starttim": 2, "minimum": [2, 7, 9, 10, 22, 85, 93], "past": [2, 22], "which": [2, 6, 7, 8, 9, 10, 11, 13, 14, 15, 16, 19, 20, 22, 29, 32, 42, 44, 45, 48, 55, 57, 67, 75, 76, 82, 83, 85, 88, 89, 90, 95], "gain": 2, "its": [2, 3, 16, 22, 95], "timeout": [2, 15, 22], "deploy": [2, 9], "consid": [2, 9, 22], "lock": [2, 3, 11, 16, 19, 22, 38, 66, 87], "appli": [2, 22], "statist": [2, 3, 24], "period": [2, 8, 66, 87], "length": [2, 10, 16, 56, 95], "threshold": [2, 20, 22], "featur": [2, 9, 22], "elaps": [2, 11, 22], "begin": [2, 16, 20, 22, 85], "possibl": [2, 6, 20, 22, 34, 42, 48, 55, 74, 95], "enough": [2, 16, 20, 22], "left": [2, 6, 10, 22, 29], "rule": [2, 9], "enforc": [2, 9, 22], "mempool": [2, 3, 9, 10, 16, 19, 22, 36], "warn": [2, 9, 10, 22], "ani": [2, 8, 9, 10, 13, 14, 16, 19, 20, 21, 22, 42, 48, 50, 53, 57, 58, 59, 60, 61, 70, 74, 75, 76, 77], "getblockcount": [2, 3, 6, 11, 15, 18, 37, 51], "getblockfilt": [2, 15], "filtertyp": [2, 15], "basic": [2, 6, 29, 46], "retriev": [2, 22, 48, 51], "157": 2, "content": [2, 9, 14], "particular": [2, 44, 50], "getblockhash": [2, 15], "getblockhead": [2, 15], "blockhead": 2, "0000": 2, "1f3": 2, "getblockstat": [2, 15], "hash_or_height": [2, 15], "stat": [2, 3, 6, 7, 15, 24, 26, 29], "comput": [2, 42, 44, 45], "per": [2, 7, 9, 10, 20, 22, 33, 34, 35, 71, 89], "window": [2, 29, 44], "satoshi": [2, 9, 10, 22, 89], "won": 2, "t": [2, 9, 10, 22, 42, 44, 45], "some": [2, 3, 22, 44, 45, 85, 93], "plot": 2, "see": [2, 9, 10, 16, 20, 22, 52], "below": [2, 6, 22, 29, 55, 85, 93], "avgfe": 2, "xxxxx": [2, 3, 9, 10, 22], "averag": [2, 18], "avgfeer": 2, "feerat": [2, 15, 16, 20, 22], "byte": [2, 3, 9, 10, 18, 59, 60, 61, 71, 73, 83, 89, 95], "avgtxsiz": 2, "check": [2, 8, 16, 44, 45, 51, 56, 95], "potenti": [2, 10, 20, 22], "reorg": [2, 22], "feerate_percentil": 2, "10th": 2, "25th": 2, "50th": 2, "75th": 2, "90th": 2, "percentil": 2, "unit": [2, 7], "10th_percentile_feer": 2, "25th_percentile_feer": 2, "50th_percentile_feer": 2, "75th_percentile_feer": 2, "90th_percentile_feer": 2, "ins": 2, "maxfe": 2, "maxfeer": [2, 15, 16, 36, 79, 80, 89], "maxtxsiz": 2, "medianfe": 2, "truncat": 2, "mediantxs": 2, "minfe": 2, "minfeer": 2, "mintxsiz": 2, "subsidi": [2, 9], "swtotal_s": 2, "segwit": [2, 9, 10, 16, 20, 22], "swtotal_weight": 2, "divid": 2, "scale": 2, "factor": [2, 7, 15, 30], "4": [2, 4, 13, 16, 34, 51, 55, 85], "swtx": 2, "total_out": 2, "thu": [2, 3, 22], "ie": [2, 9], "totalfe": [2, 22], "total_s": 2, "total_weight": 2, "utxo_increas": 2, "increas": [2, 22, 45, 55, 57], "decreas": 2, "unspent": [2, 16, 22, 24, 41, 44, 79, 80], "utxo_size_inc": 2, "discount": [2, 20], "op_return": 2, "getchaintip": [2, 15], "known": [2, 10, 12, 16, 19, 22, 85], "tree": [2, 44], "orphan": [2, 22], "branch": 2, "abaut": 2, "know": [2, 22, 41, 42, 44, 45, 48, 52], "branchlen": 2, "zero": [2, 9, 10, 12, 16, 22, 76], "connect": [2, 6, 10, 11, 29, 32, 41, 44, 45, 48, 49, 50, 51, 83, 85, 89], "fork": [2, 22], "invalid": [2, 9, 22, 56], "least": [2, 20, 22], "Not": [2, 74], "thei": [2, 22, 41], "never": [2, 22], "part": [2, 22, 33], "getchaintxstat": [2, 15], "nblock": [2, 5, 9, 15], "86400": [2, 10], "rate": [2, 7, 9, 10, 16, 20, 22, 36, 79, 80, 89], "end": [2, 3, 16, 20, 22, 35], "timestamp": [2, 9, 10, 12, 15, 18, 22], "final": [2, 9, 15, 16, 19, 39], "unix": [2, 10, 22], "txcount": [2, 22, 24], "point": [2, 3, 14, 22, 29, 41, 51], "window_final_block_hash": 2, "window_final_block_height": 2, "window_block_count": 2, "window_tx_count": 2, "window_interv": 2, "txrate": 2, "getdifficulti": [2, 15], "float": [2, 4, 6, 7, 9, 12, 13, 14, 16, 19, 21, 22, 24, 25, 27, 34, 36, 38, 39, 44, 67, 71, 79, 80, 81, 82, 88, 89, 90, 93], "proof": [2, 15], "nnn": [2, 9], "getgov": [2, 15], "govern": [2, 29, 49, 64, 85], "variabl": [2, 44], "attribut": [2, 22], "icx_takerfee_per_btc": 2, "lp_daily_loan_token_reward": 2, "lp_loan_token_split": 2, "lp_daily_dfi_reward": 2, "loan_liquidation_penalti": 2, "lp_split": 2, "oracle_block_interv": 2, "oracle_devi": 2, "getmempoolancestor": [2, 15], "txid": [2, 6, 9, 14, 15, 16, 19, 22, 24, 25, 28, 33, 34, 36, 40, 41, 44, 45, 48, 63, 66, 75, 79, 80, 84, 85, 89], "ancestor": [2, 22], "must": [2, 4, 8, 9, 10, 16, 19, 20, 22, 44, 55, 85, 89, 95], "vsize": [2, 16, 25, 40], "actual": [2, 6, 7, 9, 22, 29, 85], "deprec": [2, 9, 22], "defid": [2, 22], "deprecatedrpc": 2, "v0": [2, 32], "20": [2, 12, 34], "modifiedfe": 2, "delta": 2, "prioriti": [2, 9], "enter": [2, 11, 16, 22], "descendantcount": 2, "descendants": 2, "descendantfe": 2, "modifi": [2, 9, 16, 50], "abov": [2, 3, 20, 22, 50], "ancestorcount": 2, "ancestors": 2, "ancestorfe": 2, "wtxid": 2, "base": [2, 7, 9, 16, 20, 22, 28, 85], "depend": [2, 9, 16, 21, 22, 41, 44, 85], "unconfirm": [2, 22], "parent": 2, "spentbi": 2, "child": [2, 20], "bip125": [2, 16, 22], "replac": [2, 10, 15, 16, 22, 75, 89], "getmempooldescend": [2, 15], "getmempoolentri": [2, 15], "getmempoolinfo": [2, 15], "detail": [2, 3, 19, 22, 85], "load": [2, 11, 22], "becaus": [2, 22, 48, 85], "usag": [2, 3, 46], "maxmempool": 2, "mempoolminfe": 2, "kb": [2, 10, 16, 20, 22], "accept": [2, 9, 10, 13, 16, 22, 36, 67, 85, 88, 89], "minrelaytxfe": 2, "relai": [2, 10, 22], "getrawmempool": [2, 15], "hint": [2, 16, 22], "fetch": [2, 57], "gettxout": [2, 15], "include_mempool": [2, 15], "vout": [2, 6, 15, 16, 22, 24, 40, 45, 75, 79, 80], "spent": [2, 16, 22, 41], "appear": [2, 10, 16, 22], "detatil": 2, "unsep": 2, "bestblock": 2, "scriptpubkei": [2, 15, 16, 20, 22, 79, 80], "asm": [2, 16], "code": [2, 22, 44, 51, 57, 85], "reqsig": [2, 16], "signatur": [2, 15, 16, 20, 22, 45, 73, 74, 75, 77], "pubkeyhash": [2, 16, 22], "eg": [2, 7, 16, 22], "gettxoutproof": [2, 15, 22], "By": [2, 16, 22, 48, 50, 89], "function": [2, 6, 16, 22, 29, 45, 48], "sometim": 2, "To": [2, 4, 8, 9, 10, 45, 46, 68], "make": [2, 6, 20, 22, 48, 75, 93], "alwai": [2, 7, 16, 22, 41, 76, 85, 89], "need": [2, 8, 9, 11, 13, 16, 17, 20, 21, 22, 41, 44, 45, 51, 79, 80], "maintain": 2, "txindex": [2, 16, 19], "command": [2, 3, 10, 15, 18, 22, 44, 51], "line": [2, 22, 85], "manual": [2, 16, 85, 89], "look": [2, 6, 16, 19, 44], "gettxoutsetinfo": [2, 15], "take": [2, 6, 7, 21, 22, 29, 41, 65, 67, 86, 88], "txout": [2, 22, 24], "bogos": 2, "meaningless": 2, "metric": 2, "hash_serialized_2": 2, "disk_siz": 2, "chainstat": 2, "total_amount": 2, "isappliedcustomtx": [2, 15], "custom": [2, 19, 22], "affect": [2, 22], "listgov": [2, 15], "prefix": [2, 15, 57], "One": [2, 8, 13, 19, 22], "gov": 2, "attr": 2, "live": 2, "view": [2, 48, 51], "other": [2, 3, 6, 10, 22, 41, 42, 48, 49, 50, 55, 82, 93], "treat": [2, 22], "assum": [2, 9], "explicitli": [2, 9, 22], "listsmartcontract": [2, 15], "xxxxxxxx": [2, 9, 10], "preciousblock": [2, 15], "befor": [2, 5, 9, 11, 16, 22, 44, 45], "later": 2, "overrid": [2, 9, 22], "effect": [2, 7, 22], "earlier": [2, 85], "retain": 2, "restart": [2, 42], "mark": [2, 16, 22, 23], "preciou": 2, "pruneblockchain": [2, 15], "discret": 2, "whose": [2, 16, 20], "hour": [2, 22], "older": 2, "than": [2, 3, 7, 13, 16, 19, 22], "savemempool": [2, 15], "dump": [2, 22, 57], "until": [2, 7, 10, 11, 16, 22, 95], "scantxoutset": [2, 15], "scanobject": [2, 15], "experiment": 2, "releas": [2, 51], "scan": [2, 22, 95], "match": [2, 6, 22, 58, 89], "certain": [2, 9, 85], "descriptor": [2, 15, 16, 20, 22], "addr": [2, 10], "correspond": [2, 16, 20, 22, 44, 45, 74, 75, 76, 85, 93], "p2pk": 2, "raw": [2, 6, 12, 16, 20, 22, 36, 44, 69, 74, 75, 76, 79, 80, 93], "script": [2, 16, 20, 22, 24, 40, 41, 42, 45, 58, 59, 60, 61, 76, 85, 94], "equal": [2, 16, 20, 22], "combo": 2, "pubkei": [2, 15, 16, 20, 22], "p2pkh": [2, 8, 20, 22, 42, 44, 45, 57, 58, 75, 85], "p2wpkh": [2, 8, 22, 42, 44, 45, 57, 58, 75, 85], "p2sh": [2, 15, 16, 20, 22, 42, 44, 45, 57, 58, 75, 85], "pkh": [2, 20], "sh": [2, 20], "multi": [2, 20, 74], "multisig": [2, 16, 20, 22], "In": [2, 3, 20, 22, 44, 45, 52, 85], "refer": [2, 20], "fix": [2, 12, 20], "public": [2, 16, 20, 22, 45, 48, 57, 58, 59, 60, 61], "notat": [2, 20], "xpub": [2, 20], "xprv": [2, 20], "path": [2, 3, 11, 13, 15, 16, 20, 22, 34, 44, 51, 57], "element": [2, 20, 29, 85], "separ": [2, 20, 42, 74, 86, 88, 91], "unharden": 2, "h": [2, 20], "harden": [2, 20, 57], "latter": 2, "case": [2, 16, 22, 41, 44, 45], "rang": [2, 9, 15, 16, 20, 22, 42, 55], "For": [2, 6, 9, 16, 20, 22, 29, 44, 45, 51, 74, 76], "document": [2, 20, 50, 69, 85], "doc": [2, 20], "md": [2, 20], "abort": 2, "success": [2, 22], "report": [2, 10, 22], "everi": [2, 48, 74, 76], "metadata": [2, 7, 13, 19, 22], "desc": [2, 15, 16, 20, 22], "hd": [2, 16, 22, 57], "explor": [2, 16, 42], "special": [2, 3, 15, 48, 55], "setgov": [2, 15], "exact": 2, "8": [2, 7, 10, 13, 19, 21, 55], "setgovheight": [2, 15], "3000000": 2, "unsetgov": [2, 15], "unset": [2, 16, 20, 22], "verifychain": [2, 15], "checklevel": [2, 15], "6": [2, 4, 10, 20, 22, 55, 85], "verifi": [2, 20, 44, 45, 58, 74, 77], "databas": [2, 12, 21], "how": [2, 5, 10, 20, 22, 29, 41, 42, 46, 51, 55, 76, 85], "thorough": 2, "verifytxoutproof": [2, 15], "commit": 2, "throw": [2, 9], "our": [2, 22], "getmemoryinfo": [3, 15], "determin": [3, 22, 41], "what": [3, 16, 22, 42, 44, 45], "kind": [3, 42, 50, 83], "daemon": 3, "mallocinfo": 3, "xml": 3, "describ": [3, 45, 93], "low": 3, "level": [3, 94], "heap": 3, "compil": 3, "glibc": 3, "malloc": 3, "manag": [3, 44], "free": [3, 45, 50], "arena": 3, "xxxxxxx": [3, 22], "succeed": 3, "smaller": 3, "page": [3, 6, 29, 33, 34, 35, 48, 52, 55, 93], "chunks_us": 3, "alloc": 3, "chunk": 3, "chunks_fre": 3, "unus": [3, 22], "getrpcinfo": [3, 15], "active_command": 3, "durat": [3, 22], "run": [3, 20, 42, 44], "microsecond": 3, "logpath": 3, "log": [3, 4, 6, 15, 29, 94], "help": [3, 6, 15], "optin": [3, 37], "text": [3, 16, 22], "configur": [3, 22], "categori": [3, 22], "being": [3, 22, 85], "add": [3, 6, 9, 10, 13, 16, 22, 88, 93], "evalu": 3, "item": [3, 29], "both": [3, 44, 85], "accountchang": 3, "addrman": 3, "anchor": [3, 8, 38, 44], "bench": 3, "cmpctblock": 3, "coindb": 3, "estimatefe": 3, "http": [3, 9, 11, 32, 42, 48, 51], "leveldb": 3, "libev": 3, "loan": [3, 6, 15, 21, 29, 38, 41, 64, 85], "mempoolrej": 3, "net": [3, 38], "oracl": [3, 6, 15, 29, 35], "proxi": [3, 10], "rand": 3, "reindex": 3, "rpccach": 3, "selectcoin": 3, "spv": [3, 6, 10, 15], "stake": [3, 8], "tokensplit": 3, "tor": 3, "zmq": [3, 6, 15], "addit": [3, 19, 22, 82, 83, 84, 86, 87, 88, 90, 91], "repres": [3, 16, 20, 22, 29, 44, 85], "even": 3, "ignor": [3, 9, 22], "them": [3, 22, 41, 44, 45], "include_categori": [3, 15], "exclude_categori": [3, 15], "where": [3, 11, 16, 20, 22, 32, 52, 57, 62, 67, 68, 88, 91, 94], "inact": 3, "stop": [3, 15, 22, 44], "uptim": [3, 15], "evmtx": [4, 15], "gaspric": [4, 15], "gaslimit": [4, 15], "erc55": [4, 22], "ga": [4, 48, 85, 89], "price": [4, 7, 12, 13, 29, 33, 34, 38, 67, 88], "gwei": 4, "blank": [4, 15, 22], "0xb553de274bfc1293dc703b013464202fc65e3fdf": 4, "0x0": 4, "0x09184e72a000": 4, "0x2710": 4, "0x1e4876e800": 4, "logvmmap": [4, 15], "dvmtoevm": 4, "evmtodvm": 4, "account": [4, 6, 7, 13, 15, 19, 21, 24, 41, 44, 48, 55, 57, 64, 85, 89], "rpcresult": 4, "purpos": [4, 9, 15, 22, 50], "vmmap": [4, 15], "give": [4, 22, 42, 44, 45], "equival": [4, 22], "map": [4, 22], "auto": [4, 7, 13, 21], "transactio": 4, "1600000": 4, "generatetoaddress": [5, 15], "maxtri": [5, 15], "immedi": [5, 10], "mani": [5, 22, 29, 42, 76], "newli": [5, 51], "try": [5, 10, 41, 42], "11": 5, "myaddress": [5, 22], "control": [6, 15, 23, 29, 42, 55], "import": [6, 11, 22, 29, 32, 41, 42, 44, 45, 48, 51, 56, 57, 58, 85, 89, 93, 94, 95], "care": [6, 29, 42, 45], "perform": [6, 22, 29], "made": [6, 14, 22, 29, 85], "simplest": [6, 29, 55], "setup": [6, 29, 41, 55], "seen": [6, 8, 10, 29, 55], "quickstart": [6, 29, 55], "offer": [6, 10], "decrypt": [6, 11, 22, 57], "password": [6, 11, 48, 51, 57], "protect": [6, 10], "individu": [6, 29, 51, 89], "assign": [6, 22, 29], "These": [6, 29, 44, 45, 55, 85], "ones": [6, 22], "blockchain": [6, 7, 9, 10, 11, 15, 16, 22, 38, 44, 45, 48, 51, 79, 80, 83, 85, 89, 91], "compositeswap": [6, 13, 15, 44, 51, 88], "poolpair": [6, 15, 29, 44, 48, 51], "find": [6, 10, 29, 55, 57], "explan": [6, 29, 45, 55], "want": [6, 29, 32, 41, 42, 44, 51, 58, 76], "masternod": [6, 9, 14, 15, 25, 29, 38, 64, 79, 80, 85], "propos": [6, 9, 15, 28, 63, 84], "rawtransact": [6, 15, 22, 49, 71, 73, 74, 75, 76, 77], "util": [6, 7, 15, 42, 48, 51, 55, 69, 85, 89, 93], "vault": [6, 7, 15, 24, 30, 41, 51, 64, 65, 85, 86], "veri": [6, 29, 93], "simpl": [6, 29], "consist": [6, 29], "three": [6, 8, 29, 42, 45, 55, 85], "thing": [6, 16, 29], "previous": [6, 22, 29, 41, 45, 85], "user": [6, 10, 11, 22, 48, 50, 51, 93], "127": [6, 11, 48, 51], "8554": [6, 11, 48, 51], "sure": [6, 29], "locat": [6, 11, 22, 29, 55, 67, 88], "upper": [6, 29, 48, 85, 89], "corner": [6, 29], "overview": 6, "often": [6, 29], "softwar": [6, 42, 45, 50], "There": [6, 41, 42, 45, 55, 93, 94], "also": [6, 10, 16, 20, 22, 32, 44, 45, 52, 55, 85, 89, 94], "creation": [6, 7, 8, 13, 19, 22, 31, 34, 39, 45, 49, 66, 79, 80, 91, 93], "evan": [6, 93], "easier": [6, 93], "easi": [6, 45, 93], "quickli": [6, 93], "alreadi": [6, 11, 16, 22, 93], "amount1": [6, 13, 93], "t1": [6, 13, 93], "amount2": [6, 13, 93], "t2": [6, 13, 93], "dctkz5sqrqf4vgvsgra76ptxenbcxprenp": [6, 93], "df1qzkf582h0sgfksj0yn0wxz0r9amyqfferm5wyc": [6, 93], "address_amount": [6, 93], "buildtransferdomaindata": 6, "transferdomain_list": 6, "transferdomain_data": 6, "add_transf": 6, "dvm_address": 6, "evm_address": 6, "addressfrom": [6, 44, 45, 48, 62, 65, 67, 68, 82, 85, 86, 88, 91], "addressto": [6, 44, 45, 48, 65, 67, 68, 85, 86, 88, 90, 91], "domainfrom": 6, "domainto": 6, "witch": [6, 11, 32, 48, 49, 57, 59, 60, 61, 74, 76, 83, 84, 93, 94], "createloanschem": [7, 15], "mincolratio": [7, 15, 30], "interestr": [7, 15, 30], "scheme": [7, 21, 30, 38, 41, 68, 91], "collater": [7, 8, 19, 21, 30, 38, 68, 91], "ratio": [7, 21], "integ": [7, 16, 22, 81], "interest": [7, 15, 30, 44], "uniqu": [7, 8, 13, 19, 21], "identifi": [7, 8, 9, 10, 21, 33, 57], "char": [7, 21], "max": [7, 18, 21, 34, 38], "150": [7, 41], "myschem": 7, "destroyloanschem": [7, 15], "activate_after_block": [7, 15], "destroi": 7, "new": [7, 8, 9, 10, 13, 16, 19, 20, 22, 42, 51, 66, 85, 87, 91, 95], "getcollateraltoken": [7, 15, 30], "getinterest": [7, 15], "global": [7, 16, 22], "interestperblock": 7, "ceil": 7, "min": [7, 18], "fi": 7, "decim": [7, 10, 15, 19, 39, 81], "howev": [7, 44, 85, 89], "less": [7, 16, 22], "continu": [7, 22, 41], "accru": 7, "payback": [7, 21, 38, 65], "sub": 7, "matur": 7, "realizedinterestperblock": 7, "realiz": 7, "accumul": 7, "getloaninfo": [7, 15], "getloanschem": [7, 15], "loanschem": [7, 30], "getloantoken": [7, 15, 30], "listcollateraltoken": [7, 15, 30], "setcollateraltoken": [7, 15], "listloanschem": [7, 15], "listloantoken": [7, 15, 30], "paybackloan": [7, 15, 86], "vaultid": [7, 15, 21, 30, 65, 68, 86, 91], "desir": [7, 20, 86], "repay": [7, 65, 86], "star": [7, 13, 21], "84b22eee1964768304e624c416f29a91d78a01dc5e8e12db26bdac0670c67bb2": [7, 21], "fixedintervalpriceid": [7, 12, 15, 30], "activateafterblock": [7, 15, 30], "colleter": 7, "currenc": [7, 12, 15, 33, 35], "pair": [7, 12, 13, 16, 22, 33, 34], "after": [7, 8, 11, 16, 22, 41, 94], "usd": [7, 12, 21, 33, 34, 35, 38], "setdefaultloanschem": [7, 15], "setloantoken": [7, 15], "mintabl": [7, 15, 19, 39], "feed": [7, 22, 33, 35], "longer": [7, 13, 19, 20, 22], "128": [7, 19, 56, 95], "properti": [7, 13, 19, 20], "stock": 7, "takeloan": [7, 15, 41, 48, 86], "mint": [7, 9, 19, 26, 39, 41, 62, 75], "spy": [7, 51], "updateloanschem": [7, 15], "updat": [7, 8, 12, 13, 16, 21, 22, 48, 87], "updateloantoken": [7, 15], "tslaa": 7, "createmasternod": [8, 15, 87], "owneraddress": [8, 13, 15, 21, 30, 33, 34, 66, 68, 87, 91], "operatoraddress": [8, 15, 66, 87], "timelock": [8, 15, 31, 66, 87], "oper": [8, 10, 29, 31, 32, 48, 66, 87], "keep": [8, 10, 19, 22], "p2wkh": 8, "auth": [8, 19], "so": [8, 10, 16, 22, 41, 44, 45, 50], "resign": [8, 16, 31, 79, 80, 87], "fiveyeartimelock": 8, "tenyeartimelock": 8, "five": 8, "ten": [8, 55], "year": [8, 22, 66, 87], "5x": 8, "power": 8, "respect": [8, 74, 94], "Be": [8, 42], "awar": 8, "whatev": 8, "getactivemasternodecount": [8, 15], "blockcount": [8, 11, 15], "20160": 8, "getanchorteam": [8, 15], "team": 8, "two": [8, 13, 41, 44, 45, 51, 82, 93], "getmasternod": [8, 15], "mn_id": [8, 15], "095d2bfb5d05ba73fa96502df85aca818ee79810b9ababa71a9dc97e2c360100": 8, "getmasternodeblock": [8, 15], "listanchor": [8, 15], "listmasternod": [8, 15], "1000000": [8, 22], "resignmasternod": [8, 15, 87], "unlock": [8, 15, 19, 22], "2016": 8, "mn": [8, 95], "updatemasternod": [8, 15, 87], "passphras": [8, 12, 13, 14, 15, 19, 22, 56, 57], "walletpassphras": [8, 12, 13, 14, 15, 19, 22], "rewardaddress": [8, 15, 66, 87], "getblocktempl": [9, 15], "template_request": [9, 15], "between": [9, 13, 16, 20, 22, 95], "templat": 9, "construct": 9, "22": 9, "23": 9, "9": [9, 55], "145": 9, "github": [9, 42, 48, 49, 51, 52], "com": [9, 32, 42, 48, 51], "bitcoin": [9, 45], "blob": 9, "master": [9, 16, 22, 57], "0022": 9, "mediawiki": 9, "0023": 9, "0009": 9, "getblocktemplate_chang": 9, "0145": 9, "spec": 9, "omit": [9, 16, 22], "capabl": 9, "side": [9, 22], "longpol": 9, "coinbasetxn": 9, "coinbasevalu": 9, "serverlist": 9, "workid": 9, "prefer": 9, "rulenam": 9, "vbavail": 9, "versionbit": 9, "bitnumb": 9, "readi": 9, "vbrequir": 9, "mask": 9, "submiss": 9, "highest": [9, 20], "should": [9, 13, 16, 19, 22, 29, 41, 42, 44, 45, 57, 59, 60, 61, 67, 76, 77, 82, 83, 88, 90, 94], "littl": [9, 57], "endian": 9, "neg": [9, 22], "collect": 9, "unknown": [9, 10, 16, 21, 22, 28], "NOT": [9, 22, 50], "isn": 9, "sigop": 9, "cost": [9, 91], "coinbaseaux": 9, "scriptsig": [9, 16, 22, 45, 75], "allow": [9, 11, 12, 16, 22, 44, 89], "award": 9, "mintim": 9, "appropri": [9, 44, 85, 89], "mutabl": 9, "wai": [9, 51, 55, 73, 93], "e": [9, 13, 16, 19, 22, 41], "g": [9, 16, 19, 22], "prevblock": 9, "noncerang": 9, "00000000ffffffff": 9, "sigoplimit": 9, "sizelimit": 9, "weightlimit": 9, "curtim": 9, "compress": [9, 22, 57], "getmininginfo": [9, 15], "relat": [9, 16, 19, 22], "currentblockweight": 9, "assembl": 9, "ever": 9, "currentblocktx": 9, "networkhashp": 9, "pooledtx": 9, "isoper": 9, "getmintinginfo": [9, 15], "getnetworkhashp": [9, 15], "120": 9, "speed": 9, "prioritisetransact": [9, 15], "fee_delta": [9, 15], "dummi": [9, 15, 22], "higher": [9, 16, 20, 22, 89], "lower": 9, "api": [9, 29, 48], "compat": [9, 16, 22], "null": [9, 16, 22], "subtract": [9, 22], "absolut": [9, 10, 15, 22], "paid": [9, 13, 16, 22, 89], "algorithm": 9, "would": [9, 22, 44, 89], "10000": 9, "submitblock": [9, 15], "hexdata": [9, 15], "attempt": [9, 10], "en": 9, "wiki": 9, "bip_0022": 9, "bip22": 9, "mydata": 9, "submithead": [9, 15], "decod": [9, 16, 19], "candid": 9, "abc": 9, "addnod": [10, 15], "Or": 10, "ad": [10, 16, 17, 22, 85], "do": [10, 22, 32, 42, 44, 45, 50, 57, 85], "disconnect": 10, "outbound": [10, 23], "peer": [10, 16], "though": [10, 22], "sync": [10, 22], "getpeerinfo": [10, 15], "onetri": 10, "192": [10, 95], "168": 10, "8555": 10, "clearban": [10, 15], "ban": 10, "ip": [10, 11], "disconnectnod": [10, 15], "nodeid": [10, 15], "strictli": 10, "port": [10, 11, 48], "getaddednodeinfo": [10, 15], "here": [10, 11, 16, 22, 44, 51], "addednod": 10, "201": 10, "re": [10, 22, 44], "inbound": 10, "getconnectioncount": [10, 15], "getnettot": [10, 15], "traffic": 10, "totalbytesrecv": 10, "totalbytess": 10, "sent": [10, 16, 22, 67, 76, 82, 83, 88, 90, 94], "timemilli": 10, "millisecond": 10, "uploadtarget": 10, "timefram": 10, "measur": 10, "target_reach": 10, "reach": [10, 11, 22, 32], "serve_historical_block": 10, "serv": [10, 44, 45], "histor": 10, "bytes_left_in_cycl": 10, "cycl": [10, 14, 15, 28], "time_left_in_cycl": 10, "getnetworkinfo": [10, 15, 22], "p2p": 10, "subvers": [10, 38], "protocolvers": [10, 38], "protocol": [10, 11, 32], "localservic": 10, "xxxxxxxxxxxxxxxx": 10, "servic": 10, "localrelai": 10, "timeoffset": 10, "offset": [10, 33, 35], "networkact": 10, "ipv4": 10, "ipv6": 10, "onion": 10, "onlynet": 10, "reachabl": 10, "host": 10, "proxy_randomize_credenti": 10, "random": [10, 95], "credenti": 10, "relayfe": 10, "incrementalfe": [10, 22], "increment": 10, "125": [10, 22], "localaddress": 10, "score": 10, "rel": [10, 22], "getnodeaddress": [10, 15], "track": [10, 22], "addrbind": 10, "bind": 10, "addrloc": 10, "relaytx": 10, "ask": [10, 48], "u": [10, 41, 45, 48, 51], "lastsend": 10, "lastrecv": 10, "bytess": 10, "bytesrecv": 10, "conntim": 10, "pingtim": 10, "ping": [10, 11, 15], "minp": 10, "observ": [10, 20], "pingwait": 10, "wait": [10, 41, 44], "v": 10, "70001": 10, "subver": 10, "startingheight": 10, "banscor": 10, "synced_head": 10, "common": [10, 22], "synced_block": 10, "inflight": 10, "whitelist": 10, "minfeefilt": 10, "bytessent_per_msg": 10, "aggreg": [10, 12, 15, 24, 34, 35], "bytesrecv_per_msg": 10, "under": [10, 11, 21, 55], "getversioninfo": [10, 15], "numericvers": 10, "fullvers": 10, "userag": 10, "agent": 10, "conform": 10, "14": 10, "protovers": 10, "protoversionmin": 10, "rpcversion": 10, "rpcversionmin": 10, "listban": [10, 15], "subnet": [10, 15], "band": 10, "queue": 10, "backlog": 10, "setban": [10, 15], "bantim": [10, 15], "netmask": 10, "32": [10, 12, 16, 22, 56, 95], "long": [10, 20, 22], "24h": 10, "overwritten": 10, "startup": 10, "setnetworkact": [10, 15], "disabl": [10, 11, 22], "url": [11, 32, 48], "wallet_nam": [11, 15, 22], "wallet_path": 11, "wallet_password": 11, "wallet_timeout": 11, "60": [11, 22, 34, 35], "logger": [11, 32], "disablewallet": 11, "interfac": [11, 32, 44], "conf": 11, "via": [11, 15, 22, 29, 42, 44, 45, 48, 49, 52, 94], "localhost": 11, "becom": [11, 95], "usabl": 11, "again": [11, 22, 42], "implement": [11, 16, 22, 44, 45, 48, 49, 85, 93], "interact": [11, 22, 32, 48, 82], "mywallet": 11, "yourpassword": 11, "latest": [11, 12, 29, 32, 51], "print": [11, 29, 32, 41, 42, 44, 45, 48, 55, 57, 85], "decrypt_wallet": 11, "load_wallet": 11, "filesystem": 11, "test_connect": 11, "rais": [11, 42, 58], "except": [11, 41, 42, 58], "occur": [11, 22], "appointoracl": [12, 15], "pricefe": [12, 33, 35], "weightag": [12, 15, 33, 35], "appoint": 12, "save": [12, 21], "mwsdmvn1hoc8dsob7aklv7nxdrf5ja4jsf": [12, 21], "eur": 12, "getdusdswapblock": [12, 15], "getfixedintervalpric": [12, 15], "interv": [12, 34, 35, 44], "activepric": [12, 30], "nextpric": 12, "activepriceblock": 12, "nextpriceblock": 12, "isliv": [12, 35], "getfutureswapblock": [12, 15], "getoracledata": [12, 15], "oracleid": [12, 15, 33, 35], "noracl": 12, "getpric": [12, 15], "listfixedintervalpric": [12, 15], "pricefeedid": 12, "listlatestrawpric": [12, 15], "through": [12, 29, 44, 67, 88, 89], "listoracl": [12, 15], "listpric": [12, 15], "calcul": [12, 16, 22, 55, 57, 59, 60, 61], "nnnnnnn": 12, "ok": 12, "removeoracl": [12, 15], "0xabcd1234ac1243578697085986498694": 12, "setoracledata": [12, 15], "tokenamount": [12, 15], "5474b2e9bfa96446e5ef3c9594634e1aa22d3a0722cb79084d61253acbdf87bf": [12, 21], "1612237937": 12, "38293": 12, "12": 12, "1328": 12, "updateoracl": [12, 15], "addpoolliquid": [13, 15, 76, 88], "shareaddress": [13, 15, 67, 88], "liquid": [13, 30, 38, 67, 88], "exectli": 13, "b": [13, 16, 22], "combin": [13, 16, 48, 85, 89, 93], "credit": 13, "df1qpsg2v3fajhwfrc3dchsqpcwqfegdxpncwpcda2": [13, 19], "tokenfrom": [13, 15, 44, 45, 48, 67, 85, 88], "amountfrom": [13, 15, 44, 45, 67, 88], "tokento": [13, 15, 44, 45, 48, 67, 85, 88], "maxpric": [13, 15, 44, 45, 48, 67, 85, 88], "composit": [13, 88], "tokena": [13, 15, 34], "tokenb": [13, 15, 34], "createpoolpair": [13, 15], "commiss": [13, 15, 34], "customreward": [13, 15, 34], "pairsymbol": [13, 15], "restrict": [13, 50], "usdc": 13, "getpoolpair": [13, 15], "creationtx": [13, 19, 22], "listpoolpair": [13, 15], "listpoolshar": [13, 15], "share": 13, "shown": [13, 16, 45, 85], "poolswap": [13, 15, 34, 41, 45, 48, 76, 85, 88], "removepoolliquid": [13, 15, 88], "testpoolswap": [13, 15], "direct": [13, 55], "updatepoolpair": [13, 15], "creategovcfp": [14, 15], "titl": [14, 15, 28], "context": [14, 15, 19, 28], "payoutaddress": [14, 15, 28], "contexthash": [14, 15, 28], "cfp": [14, 28, 48], "creategovvoc": [14, 15], "emerg": [14, 15], "vote": [14, 28, 84], "confid": 14, "voc": [14, 28], "getgovpropos": [14, 15, 28], "proposalid": [14, 15, 28, 63, 84], "real": 14, "listgovpropos": [14, 15, 28], "reject": [14, 16, 28], "listgovproposalvot": [14, 15, 28], "show": [14, 22, 28, 29, 41, 44], "votegov": [14, 15], "masternodeid": [14, 15, 28, 63, 66, 79, 80, 84, 87], "decis": [14, 15, 42, 63, 84], "ye": [14, 22, 28, 63, 84], "neutral": [14, 28, 63, 84], "icxorderbook": 15, "icx_claimdfchtlc": 15, "dfchtlctx": 15, "seed": [15, 22, 42, 45, 48, 51, 57, 85, 95], "icx_closeoff": 15, "offertx": 15, "icx_closeord": 15, "ordertx": 15, "icx_createord": 15, "chainfrom": 15, "chainto": 15, "receivepubkei": 15, "orderpric": 15, "expiri": 15, "icx_getord": 15, "icx_listhtlc": 15, "close": [15, 21, 22, 85], "icx_listord": 15, "icx_makeoff": 15, "icx_submitdfchtlc": 15, "icx_submitexthtlc": 15, "htlcscriptaddress": 15, "ownerpubkei": 15, "votegovbatch": 15, "sleeptim": 15, "analyzepsbt": [15, 16], "psbt": [15, 16, 22], "combinepsbt": [15, 16], "combinerawtransact": [15, 16], "hexstr": [15, 16, 19, 22], "converttopsbt": [15, 16], "permitsigdata": [15, 16], "iswit": [15, 16, 19, 20, 22], "createpsbt": [15, 16], "sequenc": [15, 16, 22, 40, 45, 75], "locktim": [15, 16, 22, 25, 40, 45, 74], "createrawtransact": [15, 16], "decodepsbt": [15, 16], "decoderawtransact": [15, 16], "decodescript": [15, 16], "finalizepsbt": [15, 16], "extract": [15, 16, 43, 45], "fundrawtransact": [15, 16, 22], "joinpsbt": [15, 16], "sendrawtransact": [15, 16], "signrawtransactionwithkei": [15, 16], "privatekei": [15, 16, 22, 59, 60, 61, 73], "redeemscript": [15, 16, 20, 22], "witnessscript": [15, 16, 22], "sighashtyp": [15, 16, 22], "testmempoolaccept": [15, 16], "rawtx": [15, 16, 29], "utxoupdatepsbt": [15, 16], "spv_claimhtlc": 15, "scriptaddress": 15, "destinationaddress": 15, "spv_createanchor": 15, "privkei": [15, 20, 22], "spv_createanchortempl": 15, "spv_createhtlc": 15, "receiverpubkei": 15, "spv_decodehtlcscript": 15, "spv_dumpprivkei": 15, "spv_estimateanchorcost": 15, "spv_getaddresspubkei": 15, "spv_getalladdress": 15, "spv_getbal": 15, "spv_getfeer": 15, "spv_gethtlcse": 15, "spv_getnewaddress": 15, "spv_getpeer": 15, "spv_getrawtransact": 15, "spv_gettxconfirm": 15, "txhash": 15, "spv_listanchorauth": 15, "spv_listanchorrewardconfirm": 15, "spv_listanchorreward": 15, "spv_listanchor": 15, "minbtcheight": 15, "maxbtcheight": 15, "minconf": [15, 22], "maxconf": [15, 22], "startbtcheight": 15, "spv_listanchorspend": 15, "spv_listanchorsunreward": 15, "spv_listhtlcoutput": 15, "spv_listreceivedbyaddress": 15, "address_filt": [15, 22], "spv_listtransact": 15, "spv_refundhtlc": 15, "spv_refundhtlcal": 15, "spv_rescan": 15, "spv_sendrawtx": 15, "spv_sendtoaddress": 15, "spv_syncstatu": 15, "spv_validateaddress": 15, "getrpcstat": [15, 18], "listrpcstat": [15, 18], "burntoken": [15, 19], "createtoken": [15, 19], "isdat": [15, 19, 24, 39], "tradeabl": [15, 19, 39], "collateraladdress": [15, 19, 39], "decodecustomtx": [15, 19], "getcustomtx": [15, 19], "gettoken": [15, 19], "listtoken": [15, 19, 24, 44], "minttoken": [15, 19, 26], "updatetoken": [15, 19], "createmultisig": [15, 20], "nrequir": [15, 20, 22], "address_typ": [15, 20, 22], "deriveaddress": [15, 20], "estimatesmartfe": [15, 20, 22], "conf_target": [15, 16, 20, 22], "estimate_mod": [15, 16, 20, 22], "getdescriptorinfo": [15, 20], "signmessagewithprivkei": [15, 20], "validateaddress": [15, 20], "verifymessag": [15, 20], "closevault": [15, 21], "createvault": [15, 21, 41, 91], "loanschemeid": [15, 21], "deposittovault": [15, 21, 41, 91], "estimatecollater": [15, 21], "loanamount": [15, 21], "targetratio": [15, 21], "split": [15, 21, 22], "estimateloan": [15, 21], "estimatevault": [15, 21], "collateralamount": [15, 21], "getvault": [15, 21, 30], "listauctionhistori": [15, 21], "listauct": [15, 21, 30], "listvaulthistori": [15, 21], "listvault": [15, 21, 24, 30], "paybackwithcollater": [15, 21], "placeauctionbid": [15, 21], "updatevault": [15, 21], "withdrawfromvault": [15, 21, 91], "abandontransact": [15, 22], "abortrescan": [15, 22], "addmultisigaddress": [15, 16, 22], "label": [15, 22, 57], "addressmap": [15, 22], "backupwallet": [15, 22], "bumpfe": [15, 22], "createwallet": [15, 22], "disable_private_kei": [15, 22], "avoid_reus": [15, 22], "dumpprivkei": [15, 22, 44], "dumpwallet": [15, 22], "filenam": [15, 22, 57], "encryptwallet": [15, 22], "getaddressesbylabel": [15, 22], "getaddressinfo": [15, 22], "getbal": [15, 22, 24, 48, 94], "include_watchonli": [15, 22], "with_token": [15, 22], "getnewaddress": [15, 22], "getrawchangeaddress": [15, 22], "getreceivedbyaddress": [15, 22], "getreceivedbylabel": [15, 22], "gettransact": [15, 16, 22, 25], "getunconfirmedbal": [15, 22], "getwalletinfo": [15, 22], "importaddress": [15, 16, 22], "rescan": [15, 22], "importmulti": [15, 22], "importprivkei": [15, 22, 42, 55], "importprunedfund": [15, 22], "txoutproof": [15, 22], "importpubkei": [15, 22], "importwallet": [15, 22], "keypoolrefil": [15, 22], "newsiz": [15, 22], "listaddressgroup": [15, 22], "listlabel": [15, 22], "listlockunsp": [15, 22], "listreceivedbyaddress": [15, 22], "include_empti": [15, 22], "listreceivedbylabel": [15, 22], "listsinceblock": [15, 22], "target_confirm": [15, 22], "include_remov": [15, 22], "listtransact": [15, 22, 24], "exclude_custom_tx": [15, 22], "listunsp": [15, 16, 22], "include_unsaf": [15, 22], "query_opt": 15, "listwalletdir": [15, 22], "listwallet": [15, 22], "loadwallet": [15, 22], "lockunsp": [15, 16, 22], "removeprunedfund": [15, 22], "rescanblockchain": [15, 22], "start_height": [15, 22], "stop_height": [15, 22], "sendmani": [15, 22, 90], "comment": [15, 22, 48], "sendtoaddress": [15, 22], "comment_to": [15, 22], "subtractfeefromamount": [15, 22], "sethdse": [15, 22], "newkeypool": [15, 22], "setlabel": [15, 22], "settxfe": [15, 22], "setwalletflag": [15, 22], "signmessag": [15, 20, 22], "signrawtransactionwithwallet": [15, 16, 22], "unloadwallet": [15, 22], "walletcreatefundedpsbt": [15, 16, 22], "bip32deriv": [15, 22], "walletlock": [15, 22], "walletpassphrasechang": [15, 22], "oldpassphras": [15, 22], "newpassphras": [15, 22], "walletprocesspsbt": [15, 22], "sign": [15, 16, 20, 22, 45, 48, 72, 74, 75, 89], "getzmqnotif": [15, 23], "analyz": 16, "base64": [16, 22], "has_utxo": 16, "is_fin": 16, "miss": [16, 22], "keyid": 16, "hash160": [16, 22], "deriv": [16, 20, 22, 44, 45, 48, 54, 57, 85], "sha256": 16, "role": [16, 22], "person": [16, 22, 50], "go": [16, 85], "estimated_vs": 16, "estimated_feer": 16, "slot": 16, "fill": [16, 22, 45], "partial": [16, 22], "mybase64_1": 16, "mybase64_2": 16, "mybase64_3": 16, "anoth": [16, 34, 42, 82, 90], "myhex1": 16, "myhex2": 16, "myhex3": 16, "convert": [16, 41, 44, 62, 82, 83], "applic": 16, "duplic": [16, 22], "That": [16, 22], "reason": [16, 22], "dictionari": [16, 22], "hold": [16, 22], "directli": [16, 22, 85], "explicit": 16, "incompat": 16, "myid": [16, 22], "00010203": [16, 22], "ark": 16, "unsign": [16, 21, 71, 74, 75], "layout": 16, "non_witness_utxo": 16, "witness_utxo": 16, "partial_signatur": 16, "sighash": [16, 73], "redeem_script": 16, "witness_script": 16, "bip32_deriv": 16, "master_fingerprint": 16, "fingerprint": 16, "final_scriptsig": 16, "final_scriptwit": 16, "heurist": [16, 19], "deseri": [16, 19, 45, 74, 75, 76, 77], "tri": [16, 19, 85], "reflect": [16, 19], "caller": [16, 19], "vin": [16, 24, 40], "txinwit": [16, 40], "sig": 16, "12tvkaxcxzjsmdnbao16dkxc8trwfcf5oc": 16, "nonstandard": [16, 22], "scripthash": [16, 22], "nulldata": [16, 22], "witness_v0_scripthash": [16, 22], "witness_v0_keyhash": [16, 22], "witness_unknown": [16, 22], "wrap": 16, "redeem": [16, 22, 59, 60, 61], "represent": [16, 44, 52], "extractor": 16, "normal": [16, 22], "instead": [16, 22, 45], "changeaddress": [16, 22, 83, 90], "changeposit": [16, 22], "change_typ": [16, 22], "includewatch": [16, 22], "subtractfeefromoutput": [16, 22], "meet": 16, "No": 16, "unless": [16, 85], "standard": [16, 22, 32, 44], "solvabl": [16, 20, 22], "pai": [16, 22, 57, 71, 79, 80, 86], "thereof": 16, "watch": [16, 22], "legaci": [16, 20, 22, 24, 42, 44, 57, 66, 87], "deduct": [16, 22], "those": [16, 22], "recipi": [16, 22], "vout_index": [16, 22], "econom": [16, 20, 22], "conserv": [16, 20, 22], "extra": 16, "changepo": [16, 22], "rawtransactionhex": 16, "flase": 16, "in_active_chain": 16, "blocktim": [16, 22], "join": [16, 49], "distinct": 16, "uncondition": 16, "rebroadcast": 16, "degrad": 16, "privaci": [16, 22], "leak": 16, "origin": [16, 22, 51], "express": [16, 50], "signedhex": 16, "prevtx": [16, 22], "privat": [16, 20, 22, 41, 43, 45, 48, 57, 59, 60, 61, 73, 74, 85, 89], "p2wsh": [16, 22], "anyonecanpai": [16, 22], "referenc": [16, 22], "exactli": [16, 41, 45, 85], "now": [16, 22, 74], "insert": [16, 44, 48, 94], "Will": [17, 19, 69], "latenc": 18, "payload": 18, "lastusedtim": 18, "necessari": [19, 22, 44, 85, 89], "place": [19, 67, 81, 88], "mytoken": 19, "66ea2ac081e2917f075e2cca7c1c0baa12fb85c469f34561185fa64d7d2f9305": 19, "promot": 19, "demot": 19, "forev": 19, "m": [20, 42, 44, 55, 57], "multisigaddress": [20, 22], "redempt": [20, 22], "03789ed0bb717d88f7d321a368d905e7430207ebbd82bd342cf11ae157a7ace5fd": 20, "03dbc6764b8884a92e871274b87583e6d5c2a58819473e17e107ef3f6aa5a61626": 20, "wpkh": 20, "nativ": [20, 45, 48], "d34db33f": 20, "84h": 20, "0h": 20, "xpub6dj2dnuysrn5vt36jh2klbt2i1auw1ttssomg8phqniutx8qx2svc9nrhu81ft41fvdunhmjezqgxnqjkeu3oaqmszhsrhmxyyoeamuhqbi": 20, "cjjspncu": 20, "approxim": [20, 89], "kilobyt": 20, "within": [20, 25, 29, 44, 48, 55], "1008": 20, "satisfi": 20, "like": [20, 44, 45], "suffici": 20, "respons": [20, 22], "short": [20, 45], "term": [20, 22, 48, 50], "drop": 20, "prevail": 20, "market": 20, "resturn": 20, "dure": [20, 22], "clamp": 20, "abl": [20, 22, 29, 45], "analys": [20, 45, 58], "decriptor": 20, "canon": 20, "checksum": 20, "chksum": 20, "israng": 20, "issolv": 20, "hasprivatekei": 20, "0279be667ef9dcbbac55a06295ce870b07029bfcdb2dce28d959f2815b16f81798": 20, "64": [20, 22], "my": [20, 22], "isvalid": 20, "isscript": [20, 22], "witness_vers": [20, 22], "program": [20, 22], "witness_program": [20, 22], "df1qduwqfyhz0n0duvmudlhmyx2uzk4u2xqmn627zr": 20, "signer": 20, "half": 21, "2mzfsnckjgcbnlen14cyrvtwgomfda5agyv": 21, "deposit": [21, 41, 68, 91], "84b22eee1964768304e624c416f29a91d78a01dc5e8e12db26bdac0670c67bb2i": 21, "percent": 21, "200": [21, 29, 44], "collateralvalu": 21, "loanvalu": 21, "informativeratio": 21, "digit": 21, "precis": [21, 22], "collateralratio": 21, "uint": 21, "auction": [21, 30, 38, 45], "batch": [21, 30], "wether": 21, "bid": 21, "abandon": 22, "respent": 22, "stuck": 22, "evict": 22, "1075db55d416d3ca199f55b6084e2115b9345e16c5cf302fc80e9d5fbf5d48d": 22, "trigger": 22, "queri": [22, 24, 25, 28, 29, 30, 31, 34, 36, 39, 40, 45], "multisignatur": 22, "backup": 22, "intend": 22, "watchonli": 22, "16ssausf5pf2ukuwvkgq4qjnrzbzyqgel5": 22, "171sgjn4ytpu27adkkgrddwzrtxnrkbfkv": 22, "versa": 22, "df1quwxpegclg5pjdxnnept0mdzujc33ufey0tje7c": 22, "safe": 22, "copi": [22, 50], "directori": [22, 94], "dat": 22, "conftarget": 22, "bump": 22, "opt": 22, "rbf": 22, "reduc": [22, 85], "big": 22, "altern": 22, "At": 22, "high": [22, 23], "rare": 22, "might": 22, "slightli": 22, "too": 22, "dust": [22, 44], "still": 22, "unchang": 22, "0xfffffffe": 22, "practic": [22, 95], "origfe": 22, "e6ade425016b5c7025bc8a31b41e476f092eaeaeed6b69ac28d7ce988a499d18": 22, "encrypt": [22, 57], "reus": 22, "dirti": 22, "clean": [22, 57], "consider": 22, "mind": [22, 75], "successfulli": 22, "cleanli": 22, "new_wallet": 22, "reveal": 22, "Then": 22, "human": 22, "readabl": 22, "overwrit": 22, "dumpfil": 22, "bip173": 22, "cover": 22, "itself": [22, 44, 85], "ensur": [22, 48, 85, 89], "prior": 22, "phrase": 22, "charact": 22, "ismin": 22, "iswatchonli": 22, "lack": 22, "ischang": 22, "associ": [22, 50], "sigsrequir": 22, "publickeyhex": 22, "possibli": 22, "embed": 22, "relev": 22, "hdkeypath": 22, "hdseedid": 22, "iscompress": 22, "keypath": 22, "hdmasterfingerprint": 22, "fingperint": 22, "labelnam": 22, "1pssgefhdnknxieyfrd1wceahr9hrqddwc": 22, "spendabl": 22, "spendzeroconfchang": 22, "remain": [22, 83, 90], "backward": 22, "trust": [22, 44, 45, 48, 49], "untrusted_pend": 22, "untrust": 22, "immatur": 22, "violat": 22, "anyth": [22, 32], "payment": 22, "book": 22, "link": [22, 48, 49], "1d1zrzne3juo7zyckeyqqiqawd9y54f4xx": 22, "blockindex": 22, "timereceiv": 22, "involv": [22, 45, 51], "fewer": 22, "respend": 22, "ident": 22, "walletnam": 22, "walletvers": 22, "unconfirmed_bal": 22, "immature_bal": 22, "keypoololdest": 22, "oldest": 22, "pre": [22, 41, 79, 80], "keypools": 22, "extern": 22, "keypoolsize_hd_intern": 22, "intern": 22, "unlocked_until": 22, "midnight": 22, "paytxfe": 22, "private_keys_en": 22, "percentag": 22, "over": 22, "lead": [22, 42, 44, 45], "temporarili": 22, "incorrect": 22, "bogu": 22, "earliest": 22, "convers": 22, "substitut": 22, "far": 22, "bypass": 22, "entir": [22, 51], "incom": 22, "keypool": 22, "irrelev": 22, "1455191478": 22, "2nd": 22, "1455191480": 22, "mykei": 22, "aim": [22, 42], "toward": 22, "subsequ": 22, "mypubkei": 22, "group": [22, 48, 49], "had": [22, 85], "ownership": 22, "unspend": 22, "haven": [22, 44], "involveswatchonli": 22, "receivingaddress": 22, "recent": 22, "onward": 22, "addition": 22, "nth": 22, "lastblock": 22, "guarante": 22, "conflict": 22, "ago": 22, "hashvalu": 22, "structur": 22, "lastblockhash": 22, "sai": 22, "notifi": 22, "ve": 22, "plu": 22, "mincof": 22, "maxcof": 22, "9999999": 22, "minimumamount": 22, "maximumamount": 22, "maximumcount": 22, "minimumsumamount": 22, "inclus": 22, "descript": 22, "outsid": [22, 44], "unsaf": 22, "elig": 22, "zapwallettx": 22, "upgradewallet": 22, "chosen": 22, "virtu": 22, "exit": [22, 55], "delet": 22, "meant": 22, "companion": 22, "a8d0c0184dde994a09ec054286f1ce581bebf46446a512166eae7628734ea0a5": 22, "didn": 22, "background": 22, "2000000": 22, "subtractfeefrom": 22, "doubl": 22, "regardless": 22, "01": [22, 24, 51], "1353tse8ymta4euv7dguxgjnff9kpvvkhz": 22, "02": 22, "kept": 22, "organ": 22, "avoid": 22, "1m72sfpbz1bppxfhz9m3cdqatr44jvaydd": 22, "upgrad": 22, "flush": 22, "old": 22, "regener": 22, "deplet": 22, "wif": [22, 41, 42, 44, 55, 57, 70], "hdseed": 22, "teddi": 22, "00001": [22, 82, 88], "unload": 22, "endpoint": [22, 29], "creator": 22, "issu": [22, 48, 49, 52], "while": [22, 29, 41, 42, 93], "cap": 22, "100000000": [22, 45], "zeromq": 23, "notif": 23, "pubhashtx": 23, "publish": [23, 49, 50, 51], "hwm": 23, "water": 23, "ocean": [24, 25, 26, 27, 28, 30, 31, 33, 34, 35, 36, 37, 38, 39, 40, 41, 44, 45, 49, 78, 83, 85, 89, 94], "txno": [24, 34], "df1qwfpdfkvphwme3039pal4awq6cz66racsm8uek9": 24, "2341564": 24, "30": [24, 25, 28, 29, 30, 31, 32, 33, 34, 35, 39, 40, 51], "depoxjzwgia1aabz6zrb7ffsksewpn1v7a": 24, "b58": 24, "getaggreg": 24, "hid": 24, "txincount": 24, "txoutcount": 24, "txin": 24, "slice": [24, 25, 29, 40], "addresstoken": 24, "displaysymbol": [24, 34, 39], "symbolkei": [24, 39], "islp": [24, 39, 44], "isloantoken": [24, 39], "vaultact": [24, 30], "vaultliquid": [24, 30], "addressact": 24, "typehex": [24, 45], "00": 24, "listtransactionunsp": 24, "addressunsp": 24, "previoushash": 25, "transactioncount": 25, "minter": 25, "minterblockcount": 25, "stakemodifi": 25, "sizestrip": 25, "vincount": [25, 40], "voutcount": [25, 40], "totalvoutvalu": [25, 40], "e5b266f18db7662628ea503eb9f889197f05660981f22c07b1b3b86f14329099": 25, "getassetbreakdown": 26, "breakdown": 26, "member": 26, "backingaddress": 26, "getmemberstat": 26, "memberid": 26, "membernam": 26, "tokendisplaysymbol": 26, "minteddaili": 26, "mintlimit": 26, "mintdailylimit": 26, "confirmationtarget": 27, "till": 27, "pagin": [28, 30, 39], "governanceproposaltyp": 28, "governanceproposalstatu": 28, "currentcycl": 28, "totalcycl": 28, "creationheight": 28, "cycleendheight": 28, "proposalendheight": 28, "votingperiod": 28, "approvalthreshold": 28, "quorum": 28, "votesposs": 28, "votespres": 28, "votespresentpct": 28, "votesy": 28, "votesyespct": 28, "a252bea49341adb75842dd30442e5836f9e204e7fa96a1585983eca3b3b5407c": 28, "NO": [28, 50], "consortium": 29, "rest": 29, "project": [29, 42, 48, 49, 52, 85], "done": [29, 44], "infinit": [29, 45], "loop": [29, 44], "slize": 29, "scroll": 29, "pointer": 29, "2269079": 29, "listschem": 30, "getschem": 30, "min150": [30, 41, 91], "tokendata": 30, "loantoken": [30, 38], "8f87baa094aa166cf88dd61553ad996ea2c1f7694536c18f3d8390e436900300": 30, "listvaultauctionhistori": 30, "batchindex": 30, "866889122ba23be0a71fc6a9e853d6b8f2b42b018393f091922be5ebcc23b600": 30, "loanvaultst": 30, "in_liquid": 30, "liquidationheight": 30, "liquidationpenalti": 30, "batchcount": 30, "loanvaultliquidationbatch": 30, "masternodest": 31, "mintedblock": 31, "bbdd23cfb429680fd10a3ce169595ff6123ef576bb936add069812528f73ceaa": 31, "mainnet": [32, 41, 42, 44, 45, 48, 55, 57, 85, 89, 91], "lightwallet": [32, 42, 45, 85], "instanc": [32, 44, 57, 94, 95], "getpricefe": 33, "fiat": [33, 35], "f95b8a0ef321bcd310a9cc57b90d74fa4423895448678fbf8487807a125a08ef": 33, "gold": 33, "getoraclebyaddress": 33, "df1q8cz47rwefsxme29sstumepw374gzeu025gqcy4": 33, "poolpairdata": 34, "blockcommiss": 34, "pct": 34, "inpct": 34, "outpct": 34, "priceratio": 34, "ab": 34, "ba": 34, "totalliquid": 34, "tradeen": 34, "rewardpct": 34, "rewardloanpct": 34, "apr": 34, "volum": 34, "d30": 34, "h24": 34, "listpoolswap": 34, "poolpairid": 34, "fromamount": 34, "fromtokenid": 34, "poolswapfromtodata": 34, "swaptyp": 34, "listpoolswapsverbos": 34, "listpoolswapaggreg": 34, "24": [34, 35, 44, 45], "bucket": 34, "3600": 34, "getswappabletoken": 34, "swappabl": 34, "fromtoken": 34, "tokenidentifi": 34, "swappabletoken": 34, "getbestpath": [34, 44], "totokenid": 34, "totoken": 34, "bestpath": [34, 44], "swappathpoolpair": 34, "estimatedreturn": 34, "estimatedreturnlessdexfe": 34, "75": 34, "getallpath": 34, "listdexpric": 34, "denomin": 34, "dex": [34, 38], "denominationpric": 34, "pricetick": 35, "getfeedact": 35, "getfe": 35, "getfeedwithinterv": 35, "graph": 35, "15": 35, "900": 35, "getoracl": 35, "priceoracl": 35, "oraclepricefe": 35, "af6294e9729c6a4f31439e86374541658f35f4cc372a51e06c725429d875ac5c": 36, "upstream": 37, "tvl": 38, "emiss": 38, "usdt": 38, "week": 38, "collateraltoken": 38, "openvault": 38, "openauct": 38, "getrewarddistribut": 38, "distribut": [38, 50], "unalloc": 38, "getsuppli": 38, "circul": 38, "getburn": 38, "auctionburn": 38, "paybackburn": 38, "paybackburntoken": 38, "dexfeetoken": 38, "dfipaybackfe": 38, "dfipaybacktoken": 38, "paybackfe": 38, "paybacktoken": 38, "dfip2203": 38, "dfip2206f": 38, "destruct": 39, "8d654cdaeba4633aa08e46f1aa258aae7234e89945145f61bc1bd5b342df1069": 40, "getvin": 40, "getvout": 40, "txbuilder": [41, 44, 45, 48], "defichaintestnet": [41, 42, 45, 55, 57], "defichainpython": [41, 42, 48, 49, 51], "librari": [41, 42, 45, 48, 51, 93], "mostli": 41, "hand": 41, "insid": [41, 44, 85], "ifth": 41, "outcom": 41, "defitx": [41, 62, 63, 65, 66, 67, 68, 69, 76, 85], "system": [41, 42], "exchang": [41, 67, 88], "But": [41, 45, 55, 85], "much": 41, "instal": [41, 42], "pip": [41, 42, 45, 48, 51], "private_kei": [41, 57, 74], "ctbazs4lcqitnnis3zw34umhtqgbwsiuuetckfhfpkxyalgpoy6b": 41, "from_wif": [41, 57], "testnet": [41, 42, 48, 55, 85, 91], "get_account": [41, 44, 45, 48, 57, 85, 89], "get_p2wpkh": [41, 44, 45, 48, 85, 89], "vault_id": 41, "9429280b52dff4784465b3b00174fc12722907d6459bb7c50f2fad0dc5c20083": 41, "builder": [41, 44, 46, 48, 82, 83, 84, 86, 87, 88, 89, 90, 91, 93], "tx_utxos_to_account": 41, "700": 41, "tx_create_vault": 41, "c150": [41, 91], "tx_deposit_to_vault": 41, "500": 41, "tx_take_loan": 41, "tx_take_loan_unsp": 41, "get_unsp": [41, 44, 79, 80], "poolswapt": 41, "tx_poolswap": [41, 45], "googl": 41, "99999999": [41, 45], "txid_take_loan": 41, "send_tx": [41, 44, 45, 48, 79, 80, 85, 89], "few": 41, "txid_poolswap": 41, "break": [41, 42], "sleep": [41, 44], "f": [41, 42, 55, 81], "small": 42, "mnemon": [42, 45, 48, 51, 56, 57, 85, 89], "eric": [42, 48, 50, 51], "volz": [42, 48, 49, 50, 51], "pypi": [42, 45, 48, 51], "org": 42, "everyon": [42, 85], "cli": [42, 44], "l5njafbrq4nu7ao7a3ocrcrt3n5pnyifthey8a31hldy3cy7d6cb": 42, "disclaim": 42, "compromis": [42, 44, 45], "disclos": 42, "loss": [42, 44, 45], "THE": [42, 50], "AS": [42, 50], "warranti": [42, 50], "OF": [42, 50], "hdwallet": [42, 49, 51, 54, 56, 57], "generate_mnemon": [42, 51, 55, 56], "defichainmainnet": [42, 44, 48, 51, 55, 57, 85, 89], "welcometext": 42, "nor": 42, "offlin": 42, "elif": 42, "mnemonicseedtext": 42, "mnemonicseedprompt": 42, "mnemonicse": 42, "from_mnemon": [42, 44, 45, 48, 51, 55, 57, 85, 89], "ngener": 42, "space": 42, "addresstypetext": 42, "choos": [42, 44], "addresstyp": [42, 58, 59, 60, 61], "numberofaddressestext": 42, "numberofaddress": 42, "from_path": [42, 55, 57], "1129": [42, 55, 57], "legacy_address": [42, 57], "default_address": [42, 57], "bech32_address": [42, 51, 55, 57], "guid": 44, "walk": 44, "step": [44, 48, 85, 89], "tool": 44, "pleas": [44, 45], "access": [44, 45], "stolen": [44, 45], "don": [44, 45], "obtain": [44, 50], "move": 44, "grant": [44, 50], "exclus": 44, "blue": 44, "awkward": 44, "smooth": 44, "celeri": 44, "earth": 44, "oak": 44, "unawar": 44, "bronz": 44, "dry": 44, "month": 44, "outdoor": 44, "visa": 44, "neglect": 44, "coast": 44, "depart": 44, "timber": 44, "initialis": 44, "get_wif": [44, 48], "establish": [44, 85], "ll": 44, "consolid": 44, "essenti": 44, "carefulli": 44, "8l1gvvzffxaoky5m79dskwrpa5gof7sme8": 44, "dnv1ldwyfauccvyfq9qozykxagwggbf4w2": 44, "df1qxc8v5tftrhedg955gj2desxygvn5vqxtqlaekc": 44, "kya4bk1kvzwrbwpy1hanngxa1mamqh9pgmwkwhhms23crhi6xbnu": 44, "plan": 44, "product": 44, "recommend": [44, 45, 93], "env": 44, "secur": 44, "eas": 44, "sake": 44, "simplic": [44, 45], "schedul": 44, "daili": 44, "lp": 44, "convert_token": 44, "append": 44, "address_from": 44, "token_from": 44, "address_to": 44, "token_to": 44, "max_pric": 44, "999999999": 44, "token_from_id": 44, "get_id_from_symbol": 44, "token_to_id": 44, "built": [44, 89], "sequenti": 44, "els": [44, 48, 51], "python": [45, 48, 93], "understand": 45, "learn": 45, "mydefichain": 45, "faucet": 45, "On": [45, 55], "50": 45, "feel": 45, "responsibli": 45, "deputi": [45, 48, 85, 89], "armi": 45, "pluck": 45, "artwork": 45, "galleri": 45, "bracket": 45, "dilemma": 45, "section": [45, 51], "silent": 45, "coconut": 45, "chimnei": 45, "ridg": 45, "graviti": 45, "cloth": 45, "foot": 45, "secret": 45, "worri": 45, "brother": 45, "capit": 45, "spread": 45, "cheap": 45, "8fx8neka5wtsxmnzi2ndznf8vbyf3r1uju": 45, "dbhkc6up7r85eqaysenq8gbcrhccpup2w6": 45, "df1qqnrhvlfqp8rd40j86fa8wsrpg8pgjdm2y35ddd": 45, "illustr": 45, "2dc570673498c9e138336bd392a6971fe0996441d194947887ef0318d07b12da": 45, "03a5c791ba2a9c2668fc10b095e742b971d7acd50ffa77d6b40b9974937cb6064": 45, "packag": [45, 48, 55], "yourself": [45, 48], "datasourc": [45, 89], "hart": 45, "hole": 45, "therebi": 45, "almost": [45, 76], "tx_sendal": 45, "sendal": [45, 48, 90], "minu": 45, "distinguish": 45, "99": [45, 93], "consol": 45, "1fcbdcd1b18753fb24dcaeb259fffeb84123e29e04db688b37522fbe8ce49365": 45, "21f16f151f688f222c380b27c95a594643794b4b51c136bbf0da42c34dfdf9db": 45, "283": 45, "282": 45, "marker": 45, "inputtyp": 45, "1d9de1fb561fab9d7243d37c0b9308955bc777434e6f408a82f816da4cb40586": 45, "ffffffff": [45, 75], "tf1qqnrhvlfqp8rd40j86fa8wsrpg8pgjdm2hpw7df": 45, "4999999254": 45, "lengthsignatur": 45, "72": 45, "3045022100b11e61ff38835e09e5f4b4e5417808b99e1ddd3ccf792a60f929db22d3a93a2802203a3a69be756a4451e9461b1d795a13f0c837e104cc7081017c3dfd844529c21c01": 45, "lengthpublickei": 45, "33": 45, "publickei": [45, 59, 60, 61, 77], "outputtyp": 45, "defitxtyp": 45, "typenam": 45, "op_defi_tx_pool_swap": 45, "73": 45, "9999999999": [45, 88], "6a4c4d446654787316001404c7767d2009c6dabe47d27a77406141c289376a0000e1f5050000000016001404c7767d2009c6dabe47d27a77406141c289376a016300000000000000ffe0f50500000000": 45, "4999998972": 45, "001404c7767d2009c6dabe47d27a77406141c289376a": 45, "040000000001018605b44cda16f8828a406f4e4377c75b9508930b7cd343729dab1f56fbe19d1d0100000000ffffffff020000000000000000506a4c4d446654787316001404c7767d2009c6dabe47d27a77406141c289376a0000e1f5050000000016001404c7767d2009c6dabe47d27a77406141c289376a016300000000000000ffe0f5050000000000fced052a0100000016001404c7767d2009c6dabe47d27a77406141c289376a0002483045022100b11e61ff38835e09e5f4b4e5417808b99e1ddd3ccf792a60f929db22d3a93a2802203a3a69be756a4451e9461b1d795a13f0c837e104cc7081017c3dfd844529c21c012103a5c791ba2a9c2668fc10b095e742b971d7acd50ffa77d6b40b9974937cb6064e00000000": 45, "001": 45, "Of": 46, "autom": 46, "effortlessli": 48, "archiv": 48, "varieti": 48, "clone": [48, 51], "repositori": [48, 51], "git": [48, 51], "empow": [48, 85, 95], "deal": [48, 50], "everyth": [48, 94], "df1qn6utdvuaq0yshc4sah6puzf0dnlfkc2c8ryme8": 48, "3000": [48, 85], "infrastructur": [48, 89, 93], "birthdai": 48, "research": 48, "lot": 48, "getbalac": 48, "utxo_bal": 48, "hierarch": [48, 57], "determinist": [48, 57, 73], "avocado": [48, 85, 89], "fan": [48, 85, 89], "egg": [48, 85, 89], "engag": [48, 85, 89], "winter": [48, 85, 89], "attitud": [48, 85, 89], "carri": [48, 85, 89], "regret": [48, 85, 89], "mix": [48, 85, 89], "bodi": [48, 85, 89], "parti": [48, 85, 89], "trip": [48, 85, 89], "oppos": [48, 85, 89, 95], "suspect": [48, 85, 89], "blur": [48, 85, 89], "trade": [48, 85, 89], "get_p2pkh": 48, "8kvwa4ocfahdyunk8pxjs8xnddsxy6zy7j": 48, "get_p2sh": 48, "duimdov5jxg3qkcy9yi6petuutrvbrezu": 48, "df1qx52ql637w4t7uk2vjdatj3a24cnvuu4fkxryrr": 48, "get_privatekei": 48, "c72f08c17b475d641a711ef1e16bcdb0cc0c1210e6da846060b2e04d5c2299b3": 48, "l3tu3bx5n8awgcdd14btmpgxq8h5vybbnoodrnesaonom64ypnr9": 48, "thank": [48, 49], "right": [48, 50, 52], "modul": [48, 82, 83, 84, 86, 87, 88, 90, 91], "offici": 48, "suggest": [48, 49, 89], "improv": [48, 49], "idea": [48, 49], "open": [48, 49, 52], "write": [48, 49, 83], "me": [48, 49], "twitter": 48, "leav": 48, "telegram": [48, 94], "oldschool": 48, "email": [48, 49], "repo": [48, 50], "agre": [48, 50], "bound": [48, 50], "mit": [48, 50], "tweet": 49, "reddit": 49, "introduct": 49, "integr": 49, "copyright": 50, "c": 50, "2023": 50, "permiss": 50, "herebi": 50, "charg": 50, "merg": 50, "sublicens": 50, "sell": 50, "permit": 50, "whom": 50, "furnish": 50, "notic": 50, "shall": 50, "substanti": 50, "portion": 50, "OR": 50, "impli": 50, "BUT": 50, "TO": 50, "merchant": 50, "fit": [50, 57], "FOR": 50, "AND": 50, "noninfring": 50, "IN": 50, "event": 50, "author": 50, "holder": 50, "BE": 50, "liabl": 50, "claim": 50, "damag": [50, 55], "liabil": 50, "tort": 50, "aris": 50, "WITH": 50, "fromaddress": 51, "toaddress": 51, "wisdom": 51, "obscur": 51, "scrub": 51, "travel": 51, "vessel": 51, "bore": 51, "solar": 51, "truth": 51, "quiz": 51, "exhibit": 51, "mail": 51, "announc": 51, "outer": 51, "mirror": 51, "rug": 51, "df1q95vyvvu05sgpaem7w8lwufxwnzdchwk9xr7j0i": 51, "develop": 52, "board": 52, "notion": 52, "derivationerror": 54, "error_messag": 54, "error_detail": 54, "bad": 54, "around": 55, "defichainregtest": [55, 57, 60], "seper": 55, "folder": [55, 94], "easiest": 55, "sceptr": [55, 56, 57], "capter": [55, 56, 57], "se": [55, 56, 57], "quenc": [55, 56, 57], "giraf": [55, 56, 57], "absolu": [55, 56, 57], "relatif": [55, 56, 57], "fleur": [55, 56, 57], "zoologi": [55, 56, 57], "muscl": [55, 56, 57], "sirop": [55, 56, 57], "sabot": [55, 56, 57], "parur": [55, 56, 57], "kzn333nbqsaaspycmntb8ssuzqjjiaj8wdrbzaagpnojcdtnjqfq": 55, "df1qwhruysa0t04vtcmyezrc6feddwg0f8fdc5dwy7": 55, "salt": 55, "diari": 55, "jealou": 55, "biologi": 55, "uncl": 55, "detect": 55, "carbon": 55, "shadow": 55, "pelican": 55, "unusu": [55, 95], "mansion": 55, "paper": [55, 57], "vehicl": 55, "panther": 55, "obviou": 55, "orchard": 55, "skill": 55, "ball": 55, "scare": 55, "jar": 55, "df1q8ysut4vvchwzfz852w2tw8mc0ev6az5twhv7fh": 55, "l4csqwy2iaewqqz5mdsu8pyls3ppp756aqdlrkmsfmg8h3gdkkwd": 55, "df1q93qkyxapl3crdgyum2xw8yc6w7fzyf7k8qx7rh": 55, "kxbpxwewk2m1w1nbjbpdhpr2nhgqnadwq4fb2g7ludw46xsa9653": 55, "df1q8tyn7e05hnzqzhg2rm2xntu8t74y79lqrk0vm6": 55, "l4q5thugq6zl5hrequaw8wbsnmuec6ylapkwym4pgocskq7num5w": 55, "df1q8h3geevwhqmk7njsrq80dqf7uzsshgrdr583zj": 55, "l5x97wjmsqdfjwbjwdtezbu1pf7woshhfh5ijbbx5pjfggidwpyd": 55, "df1qmnqh6j9p55y56cws5vnuu3lrr9k8dwhvrwzqmj": 55, "kza8sb5exvwu5ft5jbdjajgky7iivvct2t3h2mwbd8oqjkeuhbzl": 55, "7": [55, 85], "df1qmzusk8ns4evrduu5phmr0vc2exectum38qc27h": 55, "l2hrsrmemufmnyghcvbofkc4tcm8js8td4xtw1qg6hwmhyxrbeak": 55, "df1qy4pq4m6aq8rcdr7mhd34urzrarpnulsd5udd0c": 55, "kww1cipxukdfbhy5mcxtcuzkxzeyhaffi1esjufmveicz2b2a8nm": 55, "df1quk3sjkw7sy3jyu7j74uugxt3fcg9juh7myhzga": 55, "l4hfajm13ejcik8krttsgafzsz7f4h65e2ch2q36zvsw1t9sf9kr": 55, "df1qhzd5vka5lyvwvaqntpn8yzpr7af6nddr7m5llx": 55, "l23ih2udeupauznjznpsrhjatsehqf6t4x9eweond72s5z5bzblq": 55, "generate_passphras": 56, "entropi": [56, 57, 95], "n39rpfa3qvf2tm2npyobpxnibfxjywtz": 56, "generate_entropi": 56, "strength": [56, 57, 95], "ee535b143b0d9d1f87546f9df0d06b1a": [56, 57], "languag": [56, 57, 95], "english": [56, 57, 95], "256": [56, 95], "french": [56, 95], "is_entropi": 56, "is_mnemon": 56, "get_entropy_strength": 56, "get_mnemonic_strength": 56, "get_mnemonic_languag": 56, "entropy_to_mnemon": 56, "korean": [56, 95], "\u1112\u1161\u11a8\u1105\u1167\u11a8": 56, "\u110b\u116c\u110e\u1175\u11b7": 56, "\u110c\u116e\u1106\u1175\u11ab": 56, "\u1109\u1173\u110b\u1171\u110e\u1175": 56, "\u110e\u116e\u11af\u110b\u1167\u11ab": 56, "\u110b\u1167\u11ab\u1109\u1173\u11b8": 56, "\u1100\u1173\u11ab\u1107\u1169\u11ab": 56, "\u110b\u1167\u110c\u1165\u11ab\u1112\u1175": 56, "\u110b\u116e\u11af\u110b\u1173\u11b7": 56, "\u110b\u1162\u11a8\u1109\u116e": 56, "\u1100\u1171\u1109\u1175\u11ab": 56, "\u1106\u1161\u1102\u116e\u1105\u1161": 56, "mnemonic_to_entropi": 56, "enropi": 56, "use_default_path": 57, "extend": 57, "static": [57, 58, 59, 60, 61, 74, 75, 76, 77, 81], "from_entropi": 57, "0x7f6c94b7be50": 57, "0x7f2f5698de50": 57, "from_se": 57, "8d5f4fe5b81a6a6a18b08603b6b3f59df9f4bbb25d10c55d23e0cbdc5ee385e5fddad9d7e6114f11afdec45928328081f9a598151a7613dc5f5a0c16a4612aa4": 57, "0x7f61d053fe50": 57, "from_xprivate_kei": 57, "xprivate_kei": 57, "xprivat": 57, "xprv9s21zrqh143k3xpguzpogjektrdjhkk6mubjo8v7revrzt83xjgnclpmojxuf9wjfkfuhr4sgvfgdshh4t9vmjjre9usbunk3lfnna31lgf": 57, "0x7f9c26fe6e50": 57, "from_xpublic_kei": 57, "xpublic_kei": 57, "xpublic": 57, "xpub661mymwaqrbcgstjb2mp3sb4studhd2x986ubxkjqa2qsftcvqzda98qezjcncht1aazcmsjip1hj16jh97q72rwyffinhmg8zq6kbb5paq": 57, "0x7fbd211bce50": 57, "kzshwujsrtwuuhbgpfmmxllydih7nhen6z7mkhxd5qnkuwac4ten": 57, "0x7f6fd2509e50": 57, "from_private_kei": 57, "6cd78b0d69eab1a47bfa53a52b9d8c4331e858b5d7a599270a95d9735fdb0b94": 57, "0x7ff405eebe50": 57, "from_public_kei": 57, "public_kei": 57, "02f93f58b97c3bb616645c3dda256ec946d87c45baf531984c022dd0fd1503b0a8": 57, "0x7fb8c47ece50": 57, "forget": 57, "swith": 57, "0x7ff968489e50": 57, "from_index": 57, "0x7feb0fbe9e50": 57, "root_xprivate_kei": 57, "xprv9s21zrqh143k3wydj3rfdz2nyuehmj42skahqn62guhz5hr5n2qzpkzlnzrrsydi4dwoebeqkyjizqdisnr3yan2ymmmwwojqp2psc4bplp": 57, "root_xpublic_kei": 57, "xpub661mymwaqrbcgs3gq4xfagy7xwunbbmsoy6jdkveffexxwbduaaew8jpefvhykjctv1zxfdv6spon41mvknmdtczpxcqjorwgjvede7me9n": 57, "clean_deriv": 57, "uncompress": 57, "uncommpres": 57, "ventur": 57, "blush": 57, "april": 57, "rigid": 57, "volcano": 57, "crack": 57, "polar": 57, "dash": 57, "5af8506eb2b42f63842402cf4a462c0c4200797ab707acc5c215aee8a276a2c1b52749070d113497b118fa5aa1f5f1260475e1b6b766c4e0b84108c5322f1a7a": 57, "compres": 57, "commpres": 57, "025af8506eb2b42f63842402cf4a462c0c4200797ab707acc5c215aee8a276a2c1": 57, "56605e027fdb039e86fabdf3057b117fcd2c82ceaaa997a4a47afdf03ce9b155": 57, "f24afe7fc1418815ee7fd256beb55518e7c34ecd": 57, "cryptocurr": 57, "06ea9f5dd74699c50626ea80c6cf29ebc0d7d7536a489924928d9a1bba0a01ff37339d82f80f863fc0a326d86b7258a2ebd9e05b76e94a9afc87a260e30cf02b": 57, "drivat": 57, "chain_cod": 57, "6a6fe745530a2a5a2834293fb7aeda2f8d9253cd3241a28139da74acdff25ee2": 57, "ead6524e1ee52c7750e5cb2fe3dc3ab30a49b0c3": 57, "finger_print": 57, "finger": 57, "ead6524": 57, "nest": 57, "dkyzyqdmn9tfedzy46mftstbqylnougqzi": 57, "8cvzbaqgu11dyposphyyjakhcfq3nsiys6": 57, "df1qatt9yns7u5k8w589evh78hp6kv9ynvxr2xlvpn": 57, "p2pkh_address": 57, "p2wpkh_address": 57, "p2sh_address": 57, "kxgkleymbfrsy7t3x31fmadgqduqgyvhuacle4o1lxokvwtms1wu": 57, "dict": 57, "imform": 57, "xprv9s21zrqh143k3erirhbmtz27fbxhssjdpjy3c7g7rxlv7jkgyewzo8inw7tcnc1p7754tnpgw3wbwnsy5keu2uqlywxpkfxzsbsdjwxrikf": 57, "xpub661mymwaqrbcg8wbxjimq7xqodnmrltukxteqvfizhstz6eq5nfplw2rmq96dg7mhgtwd3u6uufmy2xijtqh7rwkng7x1nb8qhyu4cfq3gr": 57, "xprv9zihfayvszfdonyejxccch1jtgvrfqd3vlxkrmsdaht1xmyzvw8ych4965hyfexnnnzahvnga2jfbsplyhnrmryegvpmn33ghxezy5cj5ff": 57, "xpub6di3egwpindw2h47qyjcypx31jlm5jltrzsvf9rej3qzqzt93usnk5ncwmqhkns6s1vgqlzz7gjnrpa55gsgyycc27wlorzfhasi8a8fg4": 57, "e6ec494e1eb0b254e0d0a8fe783ec89d0ba33a4ddf33bf9f521912c34dd84115eeb3b6a4c7fb78fbdc81ad05ff216f0e8445bcfa46b9a3975f3aa65b00bf8202": 57, "02e6ec494e1eb0b254e0d0a8fe783ec89d0ba33a4ddf33bf9f521912c34dd84115": 57, "1f2d96f945df65d442c86b08fd4355cd7d1894beab060f47437f7d2721080900": 57, "get_addresstyp": [58, 59, 60, 61], "baseaddress": 58, "from_scriptpublickei": [58, 59, 60, 61], "scriptpublickei": [58, 59, 60, 61], "univers": 58, "verify_address": 58, "addresserror": [58, 92], "from_publickei": [59, 60, 61], "from_privatekei": [59, 60, 61], "get_scriptpublickei": [59, 60, 61], "get_redeemscript": [59, 60, 61], "get_bytes_scriptpublickei": [59, 60, 61], "get_bytes_redeemscript": [59, 60, 61], "mintingoutputsstart": 62, "addressamountto": [62, 82, 83, 90], "addressamount": [62, 65, 67], "todo": [62, 77], "mvp": 62, "asspoolliquid": 67, "quantiti": 67, "schemeid": [68, 91], "soon": 69, "remot": [69, 89], "estimate_fe": 71, "feeperbyt": [71, 89], "witt": 72, "sign_legacy_input": 73, "sign_segwit_input": 73, "sting": [74, 75, 76], "to_json": [74, 75, 76], "txdataoutput": 76, "txinput": [76, 82, 83, 84, 86, 87, 88, 90, 91], "uxto": 76, "inpu": 76, "stand": 76, "basedefitx": 76, "txp2wpkhinput": 77, "txp2shinput": 77, "hei": 77, "txbase": 77, "remotedata": [79, 80], "remotedatanod": [79, 89], "check_masternod": [79, 80], "test_tx": [79, 80, 89], "remotedataocean": [80, 89], "int_to_float": 81, "turn": [81, 85], "eight": 81, "1111": 81, "00001111": 81, "122222222": 81, "22222222": 81, "shift": 81, "float_to_int": 81, "df1qw8c57c3c4u7k2h4gv2d5x4jr4qgq6cugg33g6": [82, 88, 90, 91], "df1qzfwy63ggj5jfpul7r04kn2ss8kjz2sda57fa4m": [82, 90], "76": 83, "hex_data": 83, "str_data": 83, "48656c6c6f2044656669676874657273": 83, "automaticli": 83, "hello": 83, "defight": 83, "1f4039ab714cf73ff1d92b58608ed20a73a799cde88c103b679bdafd83eb472b": 84, "33abc61982725be797f83b47da6f41a344f4d64879d84e31d87a91281070add8": 84, "complex": [85, 93], "explain": [85, 93], "read": 85, "demonstr": 85, "four": [85, 94], "fulfil": 85, "pertain": 85, "necessarili": 85, "come": 85, "As": [85, 95], "fourth": 85, "8040fe5eaa75f942dabf57bcdace3a5b71e3eb4fab53467e064e870396913800": 86, "df1qrvrnk0zyaen8x3pfrza3yznwrrrv5y08rkgrk2": 86, "8hz4omoussmovrghtasqmb4q74wpeicyhc": 87, "4e5a3a891653b7ea017a0560f5c873bdf183f52a013606341faa2823c54a2d9c": 87, "df1qtmk8nad9n03nwmanqfpug94h3jqjn3gyytl3gl": 87, "df1qm8fgh8l9sa336jrdf40sghgthvsmagagc4tq9x": 88, "addressamountfrom": 88, "0001": 88, "pull": 89, "get_inputs_tx": 89, "get_address": 89, "get_datasourc": 89, "get_feeperbyt": 89, "get_replac": 89, "min1000": 91, "min500": 91, "min350": 91, "min200": 91, "min175": 91, "c1000": 91, "c500": 91, "c350": 91, "c200": 91, "c175": 91, "5cbe99407674a689fa9b8a522462b7a4b3e7893f61453ce3fa77f1307f7d0600": 91, "withdrawn": 91, "defitxerror": 92, "deserializeerror": 92, "inputerror": 92, "keyerror": 92, "notyetsupportederror": 92, "rawtransactionerror": 92, "tokenerror": 92, "txbuildererror": 92, "verifyerror": 92, "abstract": 93, "advanc": 93, "behav": 93, "stai": 93, "flexibl": 93, "throughout": 93, "helper": 93, "buildamount": 93, "buildaddressamount": 93, "log_level": 94, "telegram_token": 94, "telegram_chatid": 94, "chatid": 94, "wrong_address": 94, "shoulder": 95, "sight": 95, "apart": 95, "cours": 95, "eager": 95, "diesel": 95, "rescu": 95, "diagram": 95, "denial": 95, "fun": 95, "rocket": 95, "chapter": 95, "spider": 95, "paddl": 95, "benefit": 95, "purs": 95, "detect_languag": 95, "chinese_simplifi": 95, "chinese_tradit": 95, "italian": 95, "japanes": 95, "spanish": 95, "classmethod": 95, "list_languag": 95, "unambigu": 95, "bip39": 95, "therefor": 95, "224": 95, "randomli": 95}, "objects": {"defichain": [[53, 0, 1, "", "Account"], [11, 0, 1, "", "Node"], [32, 0, 1, "", "Ocean"], [57, 0, 1, "", "Wallet"], [94, 2, 0, "-", "logger"], [95, 2, 0, "-", "mnemonic"], [6, 2, 0, "-", "node"]], "defichain.Node": [[11, 1, 1, "", "decrypt_wallet"], [11, 1, 1, "", "load_wallet"], [11, 1, 1, "", "test_connection"]], "defichain.Wallet": [[57, 1, 1, "", "bech32_address"], [57, 1, 1, "", "chain_code"], [57, 1, 1, "", "clean_derivation"], [57, 1, 1, "", "compressed"], [57, 1, 1, "", "cryptocurrency"], [57, 1, 1, "", "decrypt"], [57, 1, 1, "", "default_address"], [57, 1, 1, "", "dumps"], [57, 1, 1, "", "encrypt"], [57, 1, 1, "", "entropy"], [57, 1, 1, "", "finger_print"], [57, 1, 1, "", "from_entropy"], [57, 1, 1, "", "from_index"], [57, 1, 1, "", "from_mnemonic"], [57, 1, 1, "", "from_path"], [57, 1, 1, "", "from_private_key"], [57, 1, 1, "", "from_public_key"], [57, 1, 1, "", "from_seed"], [57, 1, 1, "", "from_wif"], [57, 1, 1, "", "from_xprivate_key"], [57, 1, 1, "", "from_xpublic_key"], [57, 1, 1, "", "get_account"], [57, 1, 1, "", "hash"], [57, 1, 1, "", "language"], [57, 1, 1, "", "legacy_address"], [57, 1, 1, "", "mnemonic"], [57, 1, 1, "", "network"], [57, 1, 1, "", "p2pkh_address"], [57, 1, 1, "", "p2sh_address"], [57, 1, 1, "", "p2wpkh_address"], [57, 1, 1, "", "passphrase"], [57, 1, 1, "", "path"], [57, 1, 1, "", "private_key"], [57, 1, 1, "", "public_key"], [57, 1, 1, "", "root_xprivate_key"], [57, 1, 1, "", "root_xpublic_key"], [57, 1, 1, "", "seed"], [57, 1, 1, "", "semantic"], [57, 1, 1, "", "strength"], [57, 1, 1, "", "symbol"], [57, 1, 1, "", "uncompressed"], [57, 1, 1, "", "wif"]], "defichain.exceptions": [[54, 2, 0, "-", "hdwallet"], [0, 2, 0, "-", "http"], [92, 2, 0, "-", "transactions"]], "defichain.exceptions.hdwallet": [[54, 0, 1, "", "DerivationError"]], "defichain.exceptions.http": [[0, 0, 1, "", "BadMethod"], [0, 0, 1, "", "BadRequest"], [0, 0, 1, "", "Forbidden"], [0, 0, 1, "", "InternalServerError"], [0, 0, 1, "", "NotFound"], [0, 0, 1, "", "ServiceUnavailable"], [0, 0, 1, "", "Unauthorized"], [0, 0, 1, "", "UnprocessableEntity"], [0, 0, 1, "", "WrongParameters"]], "defichain.exceptions.transactions": [[92, 0, 1, "", "AddressError"], [92, 0, 1, "", "DefiTxError"], [92, 0, 1, "", "DeserializeError"], [92, 0, 1, "", "InputError"], [92, 0, 1, "", "KeyError"], [92, 0, 1, "", "NotYetSupportedError"], [92, 0, 1, "", "RawTransactionError"], [92, 0, 1, "", "TokenError"], [92, 0, 1, "", "TxBuilderError"], [92, 0, 1, "", "VerifyError"]], "defichain.hdwallet": [[56, 2, 0, "-", "utils"]], "defichain.hdwallet.utils": [[56, 3, 1, "", "entropy_to_mnemonic"], [56, 3, 1, "", "generate_entropy"], [56, 3, 1, "", "generate_mnemonic"], [56, 3, 1, "", "generate_passphrase"], [56, 3, 1, "", "get_entropy_strength"], [56, 3, 1, "", "get_mnemonic_language"], [56, 3, 1, "", "get_mnemonic_strength"], [56, 3, 1, "", "is_entropy"], [56, 3, 1, "", "is_mnemonic"], [56, 3, 1, "", "mnemonic_to_entropy"]], "defichain.logger": [[94, 0, 1, "", "Logger"]], "defichain.mnemonic": [[95, 0, 1, "", "Mnemonic"]], "defichain.mnemonic.Mnemonic": [[95, 1, 1, "", "check"], [95, 1, 1, "", "detect_language"], [95, 1, 1, "", "generate"], [95, 1, 1, "", "list_languages"]], "defichain.node": [[1, 0, 1, "", "Accounts"], [2, 0, 1, "", "Blockchain"], [6, 0, 1, "", "BuildAddressAmounts"], [6, 0, 1, "", "BuildAmounts"], [6, 0, 1, "", "BuildTransferDomainData"], [3, 0, 1, "", "Control"], [4, 0, 1, "", "EVM"], [5, 0, 1, "", "Generating"], [7, 0, 1, "", "Loan"], [8, 0, 1, "", "Masternodes"], [9, 0, 1, "", "Mining"], [10, 0, 1, "", "Network"], [12, 0, 1, "", "Oracles"], [13, 0, 1, "", "Poolpair"], [14, 0, 1, "", "Proposals"], [16, 0, 1, "", "Rawtransactions"], [17, 0, 1, "", "Spv"], [18, 0, 1, "", "Stats"], [19, 0, 1, "", "Tokens"], [20, 0, 1, "", "Util"], [21, 0, 1, "", "Vault"], [22, 0, 1, "", "Wallet"], [23, 0, 1, "", "Zmq"]], "defichain.node.Accounts": [[1, 1, 1, "", "accounthistorycount"], [1, 1, 1, "", "accounttoaccount"], [1, 1, 1, "", "accounttoutxos"], [1, 1, 1, "", "executesmartcontract"], [1, 1, 1, "", "futureswap"], [1, 1, 1, "", "getaccount"], [1, 1, 1, "", "getaccounthistory"], [1, 1, 1, "", "getburninfo"], [1, 1, 1, "", "getpendingdusdswaps"], [1, 1, 1, "", "getpendingfutureswaps"], [1, 1, 1, "", "gettokenbalances"], [1, 1, 1, "", "listaccounthistory"], [1, 1, 1, "", "listaccounts"], [1, 1, 1, "", "listburnhistory"], [1, 1, 1, "", "listcommunitybalances"], [1, 1, 1, "", "listpendingdusdswaps"], [1, 1, 1, "", "listpendingfutureswaps"], [1, 1, 1, "", "sendtokenstoaddress"], [1, 1, 1, "", "sendutxosfrom"], [1, 1, 1, "", "transferdomain"], [1, 1, 1, "", "utxostoaccount"], [1, 1, 1, "", "withdrawfutureswap"]], "defichain.node.Blockchain": [[2, 1, 1, "", "clearmempool"], [2, 1, 1, "", "getbestblockhash"], [2, 1, 1, "", "getblock"], [2, 1, 1, "", "getblockchaininfo"], [2, 1, 1, "", "getblockcount"], [2, 1, 1, "", "getblockfilter"], [2, 1, 1, "", "getblockhash"], [2, 1, 1, "", "getblockheader"], [2, 1, 1, "", "getblockstats"], [2, 1, 1, "", "getchaintips"], [2, 1, 1, "", "getchaintxstats"], [2, 1, 1, "", "getdifficulty"], [2, 1, 1, "", "getgov"], [2, 1, 1, "", "getmempoolancestors"], [2, 1, 1, "", "getmempooldescendants"], [2, 1, 1, "", "getmempoolentry"], [2, 1, 1, "", "getmempoolinfo"], [2, 1, 1, "", "getrawmempool"], [2, 1, 1, "", "gettxout"], [2, 1, 1, "", "gettxoutproof"], [2, 1, 1, "", "gettxoutsetinfo"], [2, 1, 1, "", "isappliedcustomtx"], [2, 1, 1, "", "listgovs"], [2, 1, 1, "", "listsmartcontracts"], [2, 1, 1, "", "preciousblock"], [2, 1, 1, "", "pruneblockchain"], [2, 1, 1, "", "savemempool"], [2, 1, 1, "", "scantxoutset"], [2, 1, 1, "", "setgov"], [2, 1, 1, "", "setgovheight"], [2, 1, 1, "", "unsetgov"], [2, 1, 1, "", "verifychain"], [2, 1, 1, "", "verifytxoutproof"]], "defichain.node.BuildAddressAmounts": [[6, 1, 1, "", "add"], [6, 1, 1, "", "build"]], "defichain.node.BuildAmounts": [[6, 1, 1, "", "add"], [6, 1, 1, "", "build"]], "defichain.node.BuildTransferDomainData": [[6, 1, 1, "", "add_transfer"], [6, 1, 1, "", "build"]], "defichain.node.Control": [[3, 1, 1, "", "getmemoryinfo"], [3, 1, 1, "", "getrpcinfo"], [3, 1, 1, "", "help"], [3, 1, 1, "", "logging"], [3, 1, 1, "", "stop"], [3, 1, 1, "", "uptime"]], "defichain.node.EVM": [[4, 1, 1, "", "evmtx"], [4, 1, 1, "", "logvmmaps"], [4, 1, 1, "", "vmmap"]], "defichain.node.Generating": [[5, 1, 1, "", "generatetoaddress"]], "defichain.node.Loan": [[7, 1, 1, "", "createloanscheme"], [7, 1, 1, "", "destroyloanscheme"], [7, 1, 1, "", "getcollateraltoken"], [7, 1, 1, "", "getinterest"], [7, 1, 1, "", "getloaninfo"], [7, 1, 1, "", "getloanscheme"], [7, 1, 1, "", "getloantoken"], [7, 1, 1, "", "listcollateraltokens"], [7, 1, 1, "", "listloanschemes"], [7, 1, 1, "", "listloantokens"], [7, 1, 1, "", "paybackloan"], [7, 1, 1, "", "setcollateraltoken"], [7, 1, 1, "", "setdefaultloanscheme"], [7, 1, 1, "", "setloantoken"], [7, 1, 1, "", "takeloan"], [7, 1, 1, "", "updateloanscheme"], [7, 1, 1, "", "updateloantoken"]], "defichain.node.Masternodes": [[8, 1, 1, "", "createmasternode"], [8, 1, 1, "", "getactivemasternodecount"], [8, 1, 1, "", "getanchorteams"], [8, 1, 1, "", "getmasternode"], [8, 1, 1, "", "getmasternodeblocks"], [8, 1, 1, "", "listanchors"], [8, 1, 1, "", "listmasternodes"], [8, 1, 1, "", "resignmasternode"], [8, 1, 1, "", "updatemasternode"]], "defichain.node.Mining": [[9, 1, 1, "", "getblocktemplate"], [9, 1, 1, "", "getmininginfo"], [9, 1, 1, "", "getmintinginfo"], [9, 1, 1, "", "getnetworkhashps"], [9, 1, 1, "", "prioritisetransaction"], [9, 1, 1, "", "submitblock"], [9, 1, 1, "", "submitheader"]], "defichain.node.Network": [[10, 1, 1, "", "addnode"], [10, 1, 1, "", "clearbanned"], [10, 1, 1, "", "disconnectnode"], [10, 1, 1, "", "getaddednodeinfo"], [10, 1, 1, "", "getconnectioncount"], [10, 1, 1, "", "getnettotals"], [10, 1, 1, "", "getnetworkinfo"], [10, 1, 1, "", "getnodeaddresses"], [10, 1, 1, "", "getpeerinfo"], [10, 1, 1, "", "getversioninfo"], [10, 1, 1, "", "listbanned"], [10, 1, 1, "", "ping"], [10, 1, 1, "", "setban"], [10, 1, 1, "", "setnetworkactive"]], "defichain.node.Oracles": [[12, 1, 1, "", "appointoracle"], [12, 1, 1, "", "getdusdswapblock"], [12, 1, 1, "", "getfixedintervalprice"], [12, 1, 1, "", "getfutureswapblock"], [12, 1, 1, "", "getoracledata"], [12, 1, 1, "", "getprice"], [12, 1, 1, "", "listfixedintervalprices"], [12, 1, 1, "", "listlatestrawprices"], [12, 1, 1, "", "listoracles"], [12, 1, 1, "", "listprices"], [12, 1, 1, "", "removeoracle"], [12, 1, 1, "", "setoracledata"], [12, 1, 1, "", "updateoracle"]], "defichain.node.Poolpair": [[13, 1, 1, "", "addpoolliquidity"], [13, 1, 1, "", "compositeswap"], [13, 1, 1, "", "createpoolpair"], [13, 1, 1, "", "getpoolpair"], [13, 1, 1, "", "listpoolpairs"], [13, 1, 1, "", "listpoolshares"], [13, 1, 1, "", "poolswap"], [13, 1, 1, "", "removepoolliquidity"], [13, 1, 1, "", "testpoolswap"], [13, 1, 1, "", "updatepoolpair"]], "defichain.node.Proposals": [[14, 1, 1, "", "creategovcfp"], [14, 1, 1, "", "creategovvoc"], [14, 1, 1, "", "getgovproposal"], [14, 1, 1, "", "listgovproposals"], [14, 1, 1, "", "listgovproposalvotes"], [14, 1, 1, "", "votegov"]], "defichain.node.Rawtransactions": [[16, 1, 1, "", "analyzepsbt"], [16, 1, 1, "", "combinepsbt"], [16, 1, 1, "", "combinerawtransaction"], [16, 1, 1, "", "converttopsbt"], [16, 1, 1, "", "createpsbt"], [16, 1, 1, "", "createrawtransaction"], [16, 1, 1, "", "decodepsbt"], [16, 1, 1, "", "decoderawtransaction"], [16, 1, 1, "", "decodescript"], [16, 1, 1, "", "finalizepsbt"], [16, 1, 1, "", "fundrawtransaction"], [16, 1, 1, "", "getrawtransaction"], [16, 1, 1, "", "joinpsbts"], [16, 1, 1, "", "sendrawtransaction"], [16, 1, 1, "", "signrawtransactionwithkey"], [16, 1, 1, "", "testmempoolaccept"], [16, 1, 1, "", "utxoupdatepsbt"]], "defichain.node.Stats": [[18, 1, 1, "", "getrpcstats"], [18, 1, 1, "", "listrpcstats"]], "defichain.node.Tokens": [[19, 1, 1, "", "burntokens"], [19, 1, 1, "", "createtoken"], [19, 1, 1, "", "decodecustomtx"], [19, 1, 1, "", "getcustomtx"], [19, 1, 1, "", "gettoken"], [19, 1, 1, "", "listtokens"], [19, 1, 1, "", "minttokens"], [19, 1, 1, "", "updatetoken"]], "defichain.node.Util": [[20, 1, 1, "", "createmultisig"], [20, 1, 1, "", "deriveaddresses"], [20, 1, 1, "", "estimatesmartfee"], [20, 1, 1, "", "getdescriptorinfo"], [20, 1, 1, "", "signmessagewithprivkey"], [20, 1, 1, "", "validateaddress"], [20, 1, 1, "", "verifymessage"]], "defichain.node.Vault": [[21, 1, 1, "", "closevault"], [21, 1, 1, "", "createvault"], [21, 1, 1, "", "deposittovault"], [21, 1, 1, "", "estimatecollateral"], [21, 1, 1, "", "estimateloan"], [21, 1, 1, "", "estimatevault"], [21, 1, 1, "", "getvault"], [21, 1, 1, "", "listauctionhistory"], [21, 1, 1, "", "listauctions"], [21, 1, 1, "", "listvaulthistory"], [21, 1, 1, "", "listvaults"], [21, 1, 1, "", "paybackwithcollateral"], [21, 1, 1, "", "placeauctionbid"], [21, 1, 1, "", "updatevault"], [21, 1, 1, "", "withdrawfromvault"]], "defichain.node.Wallet": [[22, 1, 1, "", "abandontransaction"], [22, 1, 1, "", "abortrescan"], [22, 1, 1, "", "addmultisigaddress"], [22, 1, 1, "", "addressmap"], [22, 1, 1, "", "backupwallet"], [22, 1, 1, "", "bumpfee"], [22, 1, 1, "", "createwallet"], [22, 1, 1, "", "dumpprivkey"], [22, 1, 1, "", "dumpwallet"], [22, 1, 1, "", "encryptwallet"], [22, 1, 1, "", "getaddressesbylabel"], [22, 1, 1, "", "getaddressinfo"], [22, 1, 1, "", "getbalance"], [22, 1, 1, "", "getbalances"], [22, 1, 1, "", "getnewaddress"], [22, 1, 1, "", "getrawchangeaddress"], [22, 1, 1, "", "getreceivedbyaddress"], [22, 1, 1, "", "getreceivedbylabel"], [22, 1, 1, "", "gettransaction"], [22, 1, 1, "", "getunconfirmedbalance"], [22, 1, 1, "", "getwalletinfo"], [22, 1, 1, "", "importaddress"], [22, 1, 1, "", "importmulti"], [22, 1, 1, "", "importprivkey"], [22, 1, 1, "", "importprunedfunds"], [22, 1, 1, "", "importpubkey"], [22, 1, 1, "", "importwallet"], [22, 1, 1, "", "keypoolrefill"], [22, 1, 1, "", "listaddressgroupings"], [22, 1, 1, "", "listlabels"], [22, 1, 1, "", "listlockunspent"], [22, 1, 1, "", "listreceivedbyaddress"], [22, 1, 1, "", "listreceivedbylabel"], [22, 1, 1, "", "listsinceblock"], [22, 1, 1, "", "listtransactions"], [22, 1, 1, "", "listunspent"], [22, 1, 1, "", "listwalletdir"], [22, 1, 1, "", "listwallets"], [22, 1, 1, "", "loadwallet"], [22, 1, 1, "", "lockunspent"], [22, 1, 1, "", "removeprunedfunds"], [22, 1, 1, "", "rescanblockchain"], [22, 1, 1, "", "sendmany"], [22, 1, 1, "", "sendtoaddress"], [22, 1, 1, "", "sethdseed"], [22, 1, 1, "", "setlabel"], [22, 1, 1, "", "settxfee"], [22, 1, 1, "", "setwalletflag"], [22, 1, 1, "", "signmessage"], [22, 1, 1, "", "signrawtransactionwithwallet"], [22, 1, 1, "", "unloadwallet"], [22, 1, 1, "", "walletcreatefundedpsbt"], [22, 1, 1, "", "walletlock"], [22, 1, 1, "", "walletpassphrase"], [22, 1, 1, "", "walletpassphrasechange"], [22, 1, 1, "", "walletprocesspsbt"]], "defichain.node.Zmq": [[23, 1, 1, "", "getzmqnotifications"]], "defichain.ocean": [[24, 0, 1, "", "Address"], [25, 0, 1, "", "Blocks"], [26, 0, 1, "", "Consortium"], [27, 0, 1, "", "Fee"], [28, 0, 1, "", "Governance"], [30, 0, 1, "", "Loan"], [31, 0, 1, "", "Masternodes"], [33, 0, 1, "", "Oracles"], [34, 0, 1, "", "Poolpairs"], [35, 0, 1, "", "Prices"], [36, 0, 1, "", "RawTx"], [37, 0, 1, "", "Rpc"], [38, 0, 1, "", "Stats"], [39, 0, 1, "", "Tokens"], [40, 0, 1, "", "Transactions"]], "defichain.ocean.Address": [[24, 1, 1, "", "getAccountHistory"], [24, 1, 1, "", "getAggregation"], [24, 1, 1, "", "getBalance"], [24, 1, 1, "", "listAccountHistory"], [24, 1, 1, "", "listToken"], [24, 1, 1, "", "listTransaction"], [24, 1, 1, "", "listTransactionUnspent"], [24, 1, 1, "", "listVault"]], "defichain.ocean.Blocks": [[25, 1, 1, "", "get"], [25, 1, 1, "", "getTransactions"], [25, 1, 1, "", "list"]], "defichain.ocean.Consortium": [[26, 1, 1, "", "getAssetBreakdown"], [26, 1, 1, "", "getMemberStats"]], "defichain.ocean.Fee": [[27, 1, 1, "", "estimate"]], "defichain.ocean.Governance": [[28, 1, 1, "", "getGovProposal"], [28, 1, 1, "", "listGovProposalVotes"], [28, 1, 1, "", "listGovProposals"]], "defichain.ocean.Loan": [[30, 1, 1, "", "getCollateralToken"], [30, 1, 1, "", "getLoanToken"], [30, 1, 1, "", "getScheme"], [30, 1, 1, "", "getVault"], [30, 1, 1, "", "listAuction"], [30, 1, 1, "", "listCollateralToken"], [30, 1, 1, "", "listLoanToken"], [30, 1, 1, "", "listScheme"], [30, 1, 1, "", "listVault"], [30, 1, 1, "", "listVaultAuctionHistory"]], "defichain.ocean.Masternodes": [[31, 1, 1, "", "get"], [31, 1, 1, "", "list"]], "defichain.ocean.Oracles": [[33, 1, 1, "", "getOracleByAddress"], [33, 1, 1, "", "getPriceFeed"], [33, 1, 1, "", "list"]], "defichain.ocean.Poolpairs": [[34, 1, 1, "", "get"], [34, 1, 1, "", "getAllPaths"], [34, 1, 1, "", "getBestPath"], [34, 1, 1, "", "getSwappableTokens"], [34, 1, 1, "", "list"], [34, 1, 1, "", "listDexPrices"], [34, 1, 1, "", "listPoolSwapAggregates"], [34, 1, 1, "", "listPoolSwaps"], [34, 1, 1, "", "listPoolSwapsVerbose"]], "defichain.ocean.Prices": [[35, 1, 1, "", "get"], [35, 1, 1, "", "getFeed"], [35, 1, 1, "", "getFeedActive"], [35, 1, 1, "", "getFeedWithInterval"], [35, 1, 1, "", "getOracles"], [35, 1, 1, "", "list"]], "defichain.ocean.RawTx": [[36, 1, 1, "", "get"], [36, 1, 1, "", "send"], [36, 1, 1, "", "test"]], "defichain.ocean.Rpc": [[37, 1, 1, "", "call"]], "defichain.ocean.Stats": [[38, 1, 1, "", "get"], [38, 1, 1, "", "getBurn"], [38, 1, 1, "", "getRewardDistribution"], [38, 1, 1, "", "getSupply"]], "defichain.ocean.Tokens": [[39, 1, 1, "", "get"], [39, 1, 1, "", "list"]], "defichain.ocean.Transactions": [[40, 1, 1, "", "get"], [40, 1, 1, "", "getVins"], [40, 1, 1, "", "getVouts"]], "defichain.transactions.address": [[58, 0, 1, "", "Address"], [59, 0, 1, "", "P2PKH"], [60, 0, 1, "", "P2SH"], [61, 0, 1, "", "P2WPKH"]], "defichain.transactions.address.Address": [[58, 1, 1, "", "from_address"], [58, 1, 1, "", "from_scriptPublicKey"], [58, 1, 1, "", "get_addressType"], [58, 1, 1, "", "verify_address"]], "defichain.transactions.address.P2PKH": [[59, 1, 1, "", "from_privateKey"], [59, 1, 1, "", "from_publicKey"], [59, 1, 1, "", "from_scriptPublicKey"], [59, 1, 1, "", "get_addressType"], [59, 1, 1, "", "get_bytes_redeemScript"], [59, 1, 1, "", "get_bytes_scriptPublicKey"], [59, 1, 1, "", "get_redeemScript"], [59, 1, 1, "", "get_scriptPublicKey"]], "defichain.transactions.address.P2SH": [[60, 1, 1, "", "from_privateKey"], [60, 1, 1, "", "from_publicKey"], [60, 1, 1, "", "from_scriptPublicKey"], [60, 1, 1, "", "get_addressType"], [60, 1, 1, "", "get_bytes_redeemScript"], [60, 1, 1, "", "get_bytes_scriptPublicKey"], [60, 1, 1, "", "get_redeemScript"], [60, 1, 1, "", "get_scriptPublicKey"]], "defichain.transactions.address.P2WPKH": [[61, 1, 1, "", "from_privateKey"], [61, 1, 1, "", "from_publicKey"], [61, 1, 1, "", "from_scriptPublicKey"], [61, 1, 1, "", "get_addressType"], [61, 1, 1, "", "get_bytes_redeemScript"], [61, 1, 1, "", "get_bytes_scriptPublicKey"], [61, 1, 1, "", "get_redeemScript"], [61, 1, 1, "", "get_scriptPublicKey"]], "defichain.transactions.builder": [[89, 0, 1, "", "TxBuilder"]], "defichain.transactions.builder.TxBuilder": [[89, 1, 1, "", "get_account"], [89, 1, 1, "", "get_address"], [89, 1, 1, "", "get_dataSource"], [89, 1, 1, "", "get_feePerByte"], [89, 1, 1, "", "get_inputs_tx"], [89, 1, 1, "", "get_replaceable"], [89, 1, 1, "", "send_tx"], [89, 1, 1, "", "test_tx"]], "defichain.transactions.builder.modules": [[82, 0, 1, "", "Accounts"], [83, 0, 1, "", "Data"], [84, 0, 1, "", "Governance"], [86, 0, 1, "", "Loans"], [87, 0, 1, "", "Masternode"], [88, 0, 1, "", "Pool"], [90, 0, 1, "", "UTXO"], [91, 0, 1, "", "Vault"]], "defichain.transactions.builder.modules.Accounts": [[82, 1, 1, "", "accounttoaccount"], [82, 1, 1, "", "accounttoutxos"], [82, 1, 1, "", "utxostoaccount"]], "defichain.transactions.builder.modules.Data": [[83, 1, 1, "", "hex_data"], [83, 1, 1, "", "str_data"]], "defichain.transactions.builder.modules.Governance": [[84, 1, 1, "", "vote"]], "defichain.transactions.builder.modules.Loans": [[86, 1, 1, "", "paybackloan"], [86, 1, 1, "", "takeloan"]], "defichain.transactions.builder.modules.Masternode": [[87, 1, 1, "", "createmasternode"], [87, 1, 1, "", "resignmasternode"], [87, 1, 1, "", "updatemasternode"]], "defichain.transactions.builder.modules.Pool": [[88, 1, 1, "", "addpoolliquidity"], [88, 1, 1, "", "compositeswap"], [88, 1, 1, "", "poolswap"], [88, 1, 1, "", "removepoolliquidity"]], "defichain.transactions.builder.modules.UTXO": [[90, 1, 1, "", "send"], [90, 1, 1, "", "sendall"], [90, 1, 1, "", "sendmany"]], "defichain.transactions.builder.modules.Vault": [[91, 1, 1, "", "createvault"], [91, 1, 1, "", "deposittovault"], [91, 1, 1, "", "withdrawfromvault"]], "defichain.transactions.defitx": [[62, 0, 1, "", "AccountToAccount"], [62, 0, 1, "", "AccountToUtxos"], [67, 0, 1, "", "AddPoolLiquidity"], [62, 0, 1, "", "AnyAccountToAccount"], [68, 0, 1, "", "CloseVault"], [67, 0, 1, "", "CompositeSwap"], [63, 0, 1, "", "CreateCfp"], [66, 0, 1, "", "CreateMasternode"], [68, 0, 1, "", "CreateVault"], [63, 0, 1, "", "CreateVoc"], [68, 0, 1, "", "DepositToVault"], [65, 0, 1, "", "PaybackLoan"], [68, 0, 1, "", "PlaceAuctionBid"], [67, 0, 1, "", "PoolSwap"], [67, 0, 1, "", "RemovePoolLiquidity"], [66, 0, 1, "", "ResignMasternode"], [62, 0, 1, "", "SetFutureSwap"], [65, 0, 1, "", "TakeLoan"], [66, 0, 1, "", "UpdateMasternode"], [68, 0, 1, "", "UpdateVault"], [62, 0, 1, "", "UtxosToAccount"], [63, 0, 1, "", "Vote"], [68, 0, 1, "", "WithdrawFromVault"]], "defichain.transactions.keys": [[70, 0, 1, "", "PrivateKey"], [70, 0, 1, "", "PublicKey"]], "defichain.transactions.rawtransactions": [[74, 0, 1, "", "Transaction"], [76, 0, 1, "", "TxAddressOutput"], [75, 0, 1, "", "TxCoinbaseInput"], [76, 0, 1, "", "TxCoinbaseOutput"], [76, 0, 1, "", "TxDefiOutput"], [75, 0, 1, "", "TxInput"], [76, 0, 1, "", "TxOutput"], [75, 0, 1, "", "TxP2PKHInput"], [75, 0, 1, "", "TxP2SHInput"], [75, 0, 1, "", "TxP2WPKHInput"], [77, 0, 1, "", "Witness"], [77, 0, 1, "", "WitnessHash"], [71, 3, 1, "", "estimate_fee"]], "defichain.transactions.rawtransactions.Transaction": [[74, 1, 1, "", "deserialize"], [74, 1, 1, "", "sign"], [74, 1, 1, "", "to_json"], [74, 1, 1, "", "verify"]], "defichain.transactions.rawtransactions.TxAddressOutput": [[76, 1, 1, "", "deserialize"], [76, 1, 1, "", "to_json"]], "defichain.transactions.rawtransactions.TxCoinbaseInput": [[75, 1, 1, "", "deserialize"], [75, 1, 1, "", "to_json"]], "defichain.transactions.rawtransactions.TxCoinbaseOutput": [[76, 1, 1, "", "deserialize"], [76, 1, 1, "", "to_json"]], "defichain.transactions.rawtransactions.TxDefiOutput": [[76, 1, 1, "", "deserialize"], [76, 1, 1, "", "to_json"]], "defichain.transactions.rawtransactions.TxInput": [[75, 1, 1, "", "deserialize"], [75, 1, 1, "", "to_json"]], "defichain.transactions.rawtransactions.TxOutput": [[76, 1, 1, "", "deserialize"], [76, 1, 1, "", "to_json"]], "defichain.transactions.rawtransactions.TxP2PKHInput": [[75, 1, 1, "", "deserialize"], [75, 1, 1, "", "to_json"]], "defichain.transactions.rawtransactions.TxP2SHInput": [[75, 1, 1, "", "deserialize"], [75, 1, 1, "", "to_json"]], "defichain.transactions.rawtransactions.TxP2WPKHInput": [[75, 1, 1, "", "deserialize"], [75, 1, 1, "", "to_json"]], "defichain.transactions.rawtransactions.Witness": [[77, 1, 1, "", "deserialize"], [77, 1, 1, "", "verify"]], "defichain.transactions.rawtransactions.WitnessHash": [[77, 1, 1, "", "deserialize"], [77, 1, 1, "", "verify"]], "defichain.transactions.rawtransactions.sign": [[73, 3, 1, "", "sign_legacy_input"], [73, 3, 1, "", "sign_segwit_input"]], "defichain.transactions.remotedata": [[79, 0, 1, "", "RemoteDataNode"], [80, 0, 1, "", "RemoteDataOcean"]], "defichain.transactions.remotedata.RemoteDataNode": [[79, 1, 1, "", "check_masternode"], [79, 1, 1, "", "get_unspent"], [79, 1, 1, "", "send_tx"], [79, 1, 1, "", "test_tx"]], "defichain.transactions.remotedata.RemoteDataOcean": [[80, 1, 1, "", "check_masternode"], [80, 1, 1, "", "get_unspent"], [80, 1, 1, "", "send_tx"], [80, 1, 1, "", "test_tx"]], "defichain.transactions": [[93, 2, 0, "-", "utils"]], "defichain.transactions.utils": [[81, 0, 1, "", "Calculate"], [81, 0, 1, "", "Converter"], [81, 0, 1, "", "Token"], [81, 0, 1, "", "Verify"]], "defichain.transactions.utils.Converter": [[81, 1, 1, "", "float_to_int"], [81, 1, 1, "", "int_to_float"]]}, "objtypes": {"0": "py:class", "1": "py:method", "2": "py:module", "3": "py:function"}, "objnames": {"0": ["py", "class", "Python class"], "1": ["py", "method", "Python method"], "2": ["py", "module", "Python module"], "3": ["py", "function", "Python function"]}, "titleterms": {"http": 0, "except": [0, 54, 92], "account": [1, 45, 53, 62, 82], "blockchain": 2, "control": 3, "evm": 4, "gener": [5, 45, 55], "node": [6, 11, 44, 48, 51, 79, 83], "rpc": [6, 37, 48], "new": [6, 29], "logger": [6, 29, 94], "avail": [6, 29], "modul": [6, 29, 85], "request": [6, 29, 51], "structur": [6, 29, 93], "default": [6, 29, 93], "input": [6, 29, 44, 73, 75, 93], "amount": [6, 93], "buildamount": 6, "address": [6, 24, 44, 45, 51, 55, 58, 93], "buildaddressamount": 6, "transferdomain": 6, "loan": [7, 30, 65, 86], "masternod": [8, 31, 66, 87], "mine": 9, "network": [10, 45, 55], "oracl": [12, 33], "poolpair": [13, 34], "propos": 14, "raw": [15, 45, 72], "method": 15, "overview": 15, "rawtransact": 16, "spv": 17, "stat": [18, 38], "token": [19, 39, 44, 81], "util": [20, 56, 81], "vault": [21, 68, 91], "wallet": [22, 45, 51, 54, 55, 57], "zmq": 23, "block": 25, "consortium": 26, "fee": [27, 71], "govern": [28, 63, 84], "ocean": [29, 32, 48, 51, 80], "pagin": 29, "size": 29, "next": [29, 49], "price": 35, "rawtx": 36, "transact": [40, 41, 44, 45, 48, 72, 74, 75, 76, 85, 92, 93], "chain": 41, "extract": [42, 44], "privat": [42, 44, 55], "kei": [42, 44, 55, 70], "exampl": [43, 44, 47, 85, 95], "how": 44, "To": 44, "autom": 44, "your": 44, "defichain": [44, 49, 51, 55, 83], "disclaim": [44, 45, 48, 50], "content": 44, "1": [44, 45, 48, 49], "The": 44, "lightwallet": [44, 55], "mnemon": [44, 55, 95], "seed": [44, 55], "2": [44, 45, 48], "initi": [44, 85], "Of": [44, 45], "script": 44, "type": [44, 45], "environ": 44, "file": 44, "secret": 44, "3": [44, 45, 48], "queri": 44, "all": 44, "associ": 44, "prepar": 44, "composit": 44, "swap": 44, "build": [44, 45], "execut": 44, "full": [44, 45], "Be": 44, "care": 44, "basic": 45, "usag": 45, "builder": [45, 85], "introduct": 45, "inform": 45, "setup": [45, 51], "testnet": 45, "instal": [45, 48, 51], "depend": 45, "remot": [45, 78, 79, 80], "data": [45, 78, 79, 80, 83], "utxo": [45, 90], "defitx": [45, 64], "4": [45, 48], "view": 45, "5": 45, "send": [45, 85], "code": 45, "guid": [46, 47], "featur": 48, "hdwallet": [48, 55], "commun": [48, 49], "licens": [48, 50], "telegram": 49, "twitter": 49, "resourc": 49, "announc": 49, "01": 49, "releas": 49, "v1": 49, "0": 49, "02": 49, "v2": 49, "03": 49, "bring": 49, "python": [49, 51], "level": 49, "cfp": 49, "2203": 49, "07": 49, "librari": 49, "800": 49, "dfi": 49, "ii": 49, "5000": 49, "iii": 49, "60000": 49, "quickstart": 51, "packag": 51, "make": 51, "get": [51, 55], "first": 51, "statu": 52, "task": 52, "oblig": 52, "path": 55, "import": 55, "compon": 55, "illustr": 55, "from": 55, "iter": 55, "truth": 55, "p2pkh": 59, "p2sh": 60, "p2wpkh": 61, "utxostoaccount": 62, "accounttoutxo": 62, "accounttoaccount": 62, "anyaccounttoaccount": 62, "setfutureswap": 62, "createcfp": 63, "createvoc": 63, "vote": 63, "takeloan": 65, "paybackloan": 65, "createmasternod": 66, "resignmasternod": 66, "updatemasternod": 66, "pool": [67, 88], "poolswap": 67, "compositeswap": 67, "addpoolliquid": 67, "removepoolliquid": 67, "createvault": 68, "updatevault": 68, "deposittovault": 68, "withdrawfromvault": 68, "closevault": 68, "placeauctionbid": 68, "advanc": 69, "publickei": 70, "privatekei": 70, "estim": 71, "sign": [73, 85], "legaci": 73, "segwit": 73, "txinput": 75, "txp2pkhinput": 75, "txp2shinput": 75, "txp2wpkhinput": 75, "txcoinbaseinput": 75, "output": 76, "txoutput": 76, "txaddressoutput": 76, "txdefioutput": 76, "txcoinbaseoutput": 76, "witt": 77, "witnesshash": 77, "wit": 77, "sourc": 78, "calcul": 81, "convert": 81, "verifi": 81, "onli": 83, "submitt": 83, "via": 83, "assumpt": 85, "txbuilder": [85, 89], "explan": 85, "object": 85, "creat": 85}, "envversion": {"sphinx.domains.c": 2, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 8, "sphinx.domains.index": 1, "sphinx.domains.javascript": 2, "sphinx.domains.math": 2, "sphinx.domains.python": 3, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx": 57}, "alltitles": {"HTTP Exceptions": [[0, "module-defichain.exceptions.http"]], "Accounts": [[1, "accounts"], [62, "accounts"], [82, "accounts"]], "Blockchain": [[2, "blockchain"]], "Control": [[3, "control"]], "EVM": [[4, "evm"]], "Generating": [[5, "generating"]], "Node / RPC": [[6, "node-rpc"]], "New Logger available": [[6, null], [29, null]], "Node Modules": [[6, "node-modules"]], "Request Structure": [[6, "request-structure"], [29, "request-structure"]], "Default Inputs": [[6, "default-inputs"], [29, "default-inputs"]], "Amounts": [[6, "amounts"], [93, "amounts"]], "BuildAmounts": [[6, "module-defichain.node"]], "Address Amount": [[6, "address-amount"]], "BuildAddressAmounts": [[6, "buildaddressamounts"]], "TransferDomain": [[6, "transferdomain"]], "Inputs": [[6, "inputs"]], "Loan": [[7, "loan"], [30, "loan"]], "Masternodes": [[8, "masternodes"], [31, "masternodes"]], "Mining": [[9, "mining"]], "Network": [[10, "network"], [45, "network"]], "Node": [[11, "node"]], "Oracles": [[12, "oracles"], [33, "oracles"]], "Poolpair": [[13, "poolpair"]], "Proposals": [[14, "proposals"]], "Raw Methods Overview": [[15, "raw-methods-overview"]], "Methods": [[15, "methods"]], "Rawtransactions": [[16, "rawtransactions"]], "Spv": [[17, "spv"]], "Stats": [[18, "stats"], [38, "stats"]], "Tokens": [[19, "tokens"], [39, "tokens"]], "Util": [[20, "util"]], "Vault": [[21, "vault"], [68, "vault"], [91, "vault"]], "Wallet": [[22, "wallet"], [45, "wallet"], [57, "wallet"]], "Zmq": [[23, "zmq"]], "Address": [[24, "address"], [58, "address"]], "Blocks": [[25, "blocks"]], "Consortium": [[26, "consortium"]], "Fee": [[27, "fee"], [71, "fee"]], "Governance": [[28, "governance"], [63, "governance"], [84, "governance"]], "Ocean": [[29, "ocean"], [32, "ocean"]], "Ocean Modules": [[29, "ocean-modules"]], "Pagination": [[29, "pagination"]], "Size": [[29, "size"]], "Next": [[29, "next"]], "Poolpairs": [[34, "poolpairs"]], "Prices": [[35, "prices"]], "RawTx": [[36, "rawtx"]], "Rpc": [[37, "rpc"]], "Transactions": [[40, "transactions"], [93, "transactions"]], "Chain Transactions": [[41, "chain-transactions"]], "Extract Private Keys": [[42, "extract-private-keys"]], "Examples": [[43, "examples"]], "How To Automate Your Defichain Address?": [[44, "how-to-automate-your-defichain-address"]], "Disclaimer": [[44, null], [45, null]], "Content": [[44, "content"]], "1. Extracting The Private Key": [[44, "extracting-the-private-key"]], "Defichain Lightwallet (Mnemonic Seed)": [[44, "defichain-lightwallet-mnemonic-seed"]], "Defichain Node": [[44, "defichain-node"]], "2. Initialization Of The Script": [[44, "initialization-of-the-script"]], "Address Types": [[44, null], [45, "address-types"]], "Environment file for secrets": [[44, null]], "3. Example Automation": [[44, "example-automation"]], "Querying all tokens associated with the address": [[44, "querying-all-tokens-associated-with-the-address"]], "Preparing the inputs for the composite swap": [[44, "preparing-the-inputs-for-the-composite-swap"]], "Building and executing transactions": [[44, "building-and-executing-transactions"]], "Full Script": [[44, "full-script"]], "Be careful!": [[44, null]], "Basic Usage Of Transactions Builder": [[45, "basic-usage-of-transactions-builder"]], "Introduction": [[45, "introduction"]], "General Information": [[45, "general-information"]], "Setup Testnet": [[45, "setup-testnet"]], "Account": [[45, "account"], [53, "account"]], "Installation": [[45, "installation"], [48, "installation"]], "Building Raw Transaction": [[45, "building-raw-transaction"]], "1. Dependencies": [[45, "dependencies"]], "1.1 Wallet": [[45, "id1"]], "1.2 Account": [[45, "id2"]], "1.3 Remote Data": [[45, "remote-data"]], "2. Transaction Builder": [[45, "transaction-builder"]], "3. Build transaction": [[45, "build-transaction"]], "3.1 UTXO": [[45, "utxo"]], "3.2 DefiTx": [[45, "defitx"]], "4. View the transaction": [[45, "view-the-transaction"]], "5. Send transaction": [[45, "send-transaction"]], "Full Code": [[45, "full-code"]], "Guides": [[46, "guides"]], "Guides and Examples": [[47, "guides-and-examples"]], "Features": [[48, "features"]], "1. Node / RPC:": [[48, "node-rpc"]], "2. Ocean:": [[48, "ocean"]], "3. HDWallet:": [[48, "hdwallet"]], "4. Transactions:": [[48, "transactions"]], "Community": [[48, "community"], [49, "community"]], "License & Disclaimer": [[48, "license-disclaimer"], [50, "license-disclaimer"]], "Telegram": [[49, "telegram"]], "Twitter": [[49, "id1"]], "Community Resources": [[49, "community-resources"]], "Announcement 01: Release v1.0.0": [[49, null]], "Announcement 02: Release v2.0.0": [[49, null]], "Announcement 03: Bringing Python for Defichain to the next level!\ud83d\ude80\ud83d\udc0d": [[49, null]], "CFP-2203-07: DeFiChain Python Library (1 800 DFI)": [[49, null]], "Defichain Python Library II (5000 DFI)": [[49, null]], "Defichain Python Library III (60000 DFI)": [[49, null]], "Quickstart": [[51, "quickstart"]], "Install the Defichain Python Package": [[51, "install-the-defichain-python-package"]], "Make a request to the Node": [[51, "make-a-request-to-the-node"]], "Make a request to Ocean": [[51, "make-a-request-to-ocean"]], "Setup a wallet and get the first address": [[51, "setup-a-wallet-and-get-the-first-address"]], "Status and Tasks": [[52, "status-and-tasks"]], "Obligation": [[52, null]], "Status": [[52, "status"]], "Tasks": [[52, "tasks"]], "Wallet Exceptions": [[54, "module-defichain.exceptions.hdwallet"]], "HDWallet": [[55, "hdwallet"]], "Path": [[55, null]], "Import private keys": [[55, null]], "Defichain Lightwallet addresses": [[55, null]], "Wallet Components": [[55, "wallet-components"]], "Illustration": [[55, "illustration"]], "Get Networks": [[55, "get-networks"]], "Wallet from mnemonic seed": [[55, "wallet-from-mnemonic-seed"]], "Wallet from private key": [[55, "wallet-from-private-key"]], "Generate mnemonic seed": [[55, "generate-mnemonic-seed"]], "Iterate truth addresses and private keys": [[55, "iterate-truth-addresses-and-private-keys"]], "Utils": [[56, "module-defichain.hdwallet.utils"], [81, "utils"]], "Addresses": [[58, "addresses"]], "P2PKH": [[59, "p2pkh"]], "P2SH": [[60, "p2sh"]], "P2WPKH": [[61, "p2wpkh"]], "UtxosToAccount": [[62, "utxostoaccount"]], "AccountToUtxos": [[62, "accounttoutxos"]], "AccountToAccount": [[62, "accounttoaccount"]], "AnyAccountToAccount": [[62, "anyaccounttoaccount"]], "SetFutureSwap": [[62, "setfutureswap"]], "CreateCfp": [[63, "createcfp"]], "CreateVoc": [[63, "createvoc"]], "Vote": [[63, "vote"]], "DefiTx": [[64, "defitx"]], "Loans": [[65, "loans"], [86, "loans"]], "TakeLoan": [[65, "takeloan"]], "PaybackLoan": [[65, "paybackloan"]], "Masternode": [[66, "masternode"], [87, "masternode"]], "CreateMasternode": [[66, "createmasternode"]], "ResignMasternode": [[66, "resignmasternode"]], "UpdateMasternode": [[66, "updatemasternode"]], "Pool": [[67, "pool"], [88, "pool"]], "PoolSwap": [[67, "poolswap"]], "CompositeSwap": [[67, "compositeswap"]], "AddPoolLiquidity": [[67, "addpoolliquidity"]], "RemovePoolLiquidity": [[67, "removepoolliquidity"]], "CreateVault": [[68, "createvault"]], "UpdateVault": [[68, "updatevault"]], "DepositToVault": [[68, "deposittovault"]], "WithdrawFromVault": [[68, "withdrawfromvault"]], "CloseVault": [[68, "closevault"]], "PlaceAuctionBid": [[68, "placeauctionbid"]], "Advanced": [[69, "advanced"]], "Keys": [[70, "keys"]], "PublicKey": [[70, "publickey"]], "PrivateKey": [[70, "privatekey"]], "Estimate Fee": [[71, "estimate-fee"]], "Raw Transactions": [[72, "raw-transactions"]], "Sign": [[73, "sign"]], "Sign Legacy Input": [[73, "sign-legacy-input"]], "Sign Segwit Input": [[73, "sign-segwit-input"]], "Transaction": [[74, "transaction"]], "Transactions Inputs": [[75, "transactions-inputs"]], "TxInput": [[75, "txinput"]], "TxP2PKHInput": [[75, "txp2pkhinput"]], "TxP2SHInput": [[75, "txp2shinput"]], "TxP2WPKHInput": [[75, "txp2wpkhinput"]], "TxCoinbaseInput": [[75, "txcoinbaseinput"]], "Transactions Output": [[76, "transactions-output"]], "TxOutput": [[76, "txoutput"]], "TxAddressOutput": [[76, "txaddressoutput"]], "TxDefiOutput": [[76, "txdefioutput"]], "TxCoinbaseOutput": [[76, "txcoinbaseoutput"]], "Wittness": [[77, "wittness"]], "WitnessHash": [[77, "witnesshash"]], "Witness": [[77, "witness"]], "Remote Data Source": [[78, "remote-data-source"]], "Remote Data Node": [[79, "remote-data-node"]], "Remote Data Ocean": [[80, "remote-data-ocean"]], "Calculate": [[81, "calculate"]], "Converter": [[81, "converter"]], "Token": [[81, "token"]], "Verify": [[81, "verify"]], "Data": [[83, "data"]], "Only submittable via defichain node": [[83, null]], "Transaction Builder": [[85, "transaction-builder"]], "Assumptions": [[85, null]], "TxBuilder Modules": [[85, "txbuilder-modules"]], "Example with explanation": [[85, "example-with-explanation"]], "Initialization of the TxBuilder object": [[85, "initialization-of-the-txbuilder-object"]], "Creating, signing, and sending transactions": [[85, "creating-signing-and-sending-transactions"]], "TxBuilder": [[89, "txbuilder"]], "UTXO": [[90, "utxo"]], "Transactions Exceptions": [[92, "transactions-exceptions"]], "Default Input Structure": [[93, "default-input-structure"]], "Address Amounts": [[93, "address-amounts"]], "Logger": [[94, "logger"]], "Mnemonic": [[95, "mnemonic"]], "Example": [[95, "example"]]}, "indexentries": {"badmethod (class in defichain.exceptions.http)": [[0, "defichain.exceptions.http.BadMethod"]], "badrequest (class in defichain.exceptions.http)": [[0, "defichain.exceptions.http.BadRequest"]], "forbidden (class in defichain.exceptions.http)": [[0, "defichain.exceptions.http.Forbidden"]], "internalservererror (class in defichain.exceptions.http)": [[0, "defichain.exceptions.http.InternalServerError"]], "notfound (class in defichain.exceptions.http)": [[0, "defichain.exceptions.http.NotFound"]], "serviceunavailable (class in defichain.exceptions.http)": [[0, "defichain.exceptions.http.ServiceUnavailable"]], "unauthorized (class in defichain.exceptions.http)": [[0, "defichain.exceptions.http.Unauthorized"]], "unprocessableentity (class in defichain.exceptions.http)": [[0, "defichain.exceptions.http.UnprocessableEntity"]], "wrongparameters (class in defichain.exceptions.http)": [[0, "defichain.exceptions.http.WrongParameters"]], "defichain.exceptions.http": [[0, "module-defichain.exceptions.http"]], "module": [[0, "module-defichain.exceptions.http"], [6, "module-defichain.node"], [54, "module-defichain.exceptions.hdwallet"], [56, "module-defichain.hdwallet.utils"], [92, "module-defichain.exceptions.transactions"], [93, "module-defichain.transactions.utils"], [94, "module-defichain.logger"], [95, "module-defichain.mnemonic"]], "accounts (class in defichain.node)": [[1, "defichain.node.Accounts"]], "accounthistorycount() (defichain.node.accounts method)": [[1, "defichain.node.Accounts.accounthistorycount"]], "accounttoaccount() (defichain.node.accounts method)": [[1, "defichain.node.Accounts.accounttoaccount"]], "accounttoutxos() (defichain.node.accounts method)": [[1, "defichain.node.Accounts.accounttoutxos"]], "executesmartcontract() (defichain.node.accounts method)": [[1, "defichain.node.Accounts.executesmartcontract"]], "futureswap() (defichain.node.accounts method)": [[1, "defichain.node.Accounts.futureswap"]], "getaccount() (defichain.node.accounts method)": [[1, "defichain.node.Accounts.getaccount"]], "getaccounthistory() (defichain.node.accounts method)": [[1, "defichain.node.Accounts.getaccounthistory"]], "getburninfo() (defichain.node.accounts method)": [[1, "defichain.node.Accounts.getburninfo"]], "getpendingdusdswaps() (defichain.node.accounts method)": [[1, "defichain.node.Accounts.getpendingdusdswaps"]], "getpendingfutureswaps() (defichain.node.accounts method)": [[1, "defichain.node.Accounts.getpendingfutureswaps"]], "gettokenbalances() (defichain.node.accounts method)": [[1, "defichain.node.Accounts.gettokenbalances"]], "listaccounthistory() (defichain.node.accounts method)": [[1, "defichain.node.Accounts.listaccounthistory"]], "listaccounts() (defichain.node.accounts method)": [[1, "defichain.node.Accounts.listaccounts"]], "listburnhistory() (defichain.node.accounts method)": [[1, "defichain.node.Accounts.listburnhistory"]], "listcommunitybalances() (defichain.node.accounts method)": [[1, "defichain.node.Accounts.listcommunitybalances"]], "listpendingdusdswaps() (defichain.node.accounts method)": [[1, "defichain.node.Accounts.listpendingdusdswaps"]], "listpendingfutureswaps() (defichain.node.accounts method)": [[1, "defichain.node.Accounts.listpendingfutureswaps"]], "sendtokenstoaddress() (defichain.node.accounts method)": [[1, "defichain.node.Accounts.sendtokenstoaddress"]], "sendutxosfrom() (defichain.node.accounts method)": [[1, "defichain.node.Accounts.sendutxosfrom"]], "transferdomain() (defichain.node.accounts method)": [[1, "defichain.node.Accounts.transferdomain"]], "utxostoaccount() (defichain.node.accounts method)": [[1, "defichain.node.Accounts.utxostoaccount"]], "withdrawfutureswap() (defichain.node.accounts method)": [[1, "defichain.node.Accounts.withdrawfutureswap"]], "blockchain (class in defichain.node)": [[2, "defichain.node.Blockchain"]], "clearmempool() (defichain.node.blockchain method)": [[2, "defichain.node.Blockchain.clearmempool"]], "getbestblockhash() (defichain.node.blockchain method)": [[2, "defichain.node.Blockchain.getbestblockhash"]], "getblock() (defichain.node.blockchain method)": [[2, "defichain.node.Blockchain.getblock"]], "getblockchaininfo() (defichain.node.blockchain method)": [[2, "defichain.node.Blockchain.getblockchaininfo"]], "getblockcount() (defichain.node.blockchain method)": [[2, "defichain.node.Blockchain.getblockcount"]], "getblockfilter() (defichain.node.blockchain method)": [[2, "defichain.node.Blockchain.getblockfilter"]], "getblockhash() (defichain.node.blockchain method)": [[2, "defichain.node.Blockchain.getblockhash"]], "getblockheader() (defichain.node.blockchain method)": [[2, "defichain.node.Blockchain.getblockheader"]], "getblockstats() (defichain.node.blockchain method)": [[2, "defichain.node.Blockchain.getblockstats"]], "getchaintips() (defichain.node.blockchain method)": [[2, "defichain.node.Blockchain.getchaintips"]], "getchaintxstats() (defichain.node.blockchain method)": [[2, "defichain.node.Blockchain.getchaintxstats"]], "getdifficulty() (defichain.node.blockchain method)": [[2, "defichain.node.Blockchain.getdifficulty"]], "getgov() (defichain.node.blockchain method)": [[2, "defichain.node.Blockchain.getgov"]], "getmempoolancestors() (defichain.node.blockchain method)": [[2, "defichain.node.Blockchain.getmempoolancestors"]], "getmempooldescendants() (defichain.node.blockchain method)": [[2, "defichain.node.Blockchain.getmempooldescendants"]], "getmempoolentry() (defichain.node.blockchain method)": [[2, "defichain.node.Blockchain.getmempoolentry"]], "getmempoolinfo() (defichain.node.blockchain method)": [[2, "defichain.node.Blockchain.getmempoolinfo"]], "getrawmempool() (defichain.node.blockchain method)": [[2, "defichain.node.Blockchain.getrawmempool"]], "gettxout() (defichain.node.blockchain method)": [[2, "defichain.node.Blockchain.gettxout"]], "gettxoutproof() (defichain.node.blockchain method)": [[2, "defichain.node.Blockchain.gettxoutproof"]], "gettxoutsetinfo() (defichain.node.blockchain method)": [[2, "defichain.node.Blockchain.gettxoutsetinfo"]], "isappliedcustomtx() (defichain.node.blockchain method)": [[2, "defichain.node.Blockchain.isappliedcustomtx"]], "listgovs() (defichain.node.blockchain method)": [[2, "defichain.node.Blockchain.listgovs"]], "listsmartcontracts() (defichain.node.blockchain method)": [[2, "defichain.node.Blockchain.listsmartcontracts"]], "preciousblock() (defichain.node.blockchain method)": [[2, "defichain.node.Blockchain.preciousblock"]], "pruneblockchain() (defichain.node.blockchain method)": [[2, "defichain.node.Blockchain.pruneblockchain"]], "savemempool() (defichain.node.blockchain method)": [[2, "defichain.node.Blockchain.savemempool"]], "scantxoutset() (defichain.node.blockchain method)": [[2, "defichain.node.Blockchain.scantxoutset"]], "setgov() (defichain.node.blockchain method)": [[2, "defichain.node.Blockchain.setgov"]], "setgovheight() (defichain.node.blockchain method)": [[2, "defichain.node.Blockchain.setgovheight"]], "unsetgov() (defichain.node.blockchain method)": [[2, "defichain.node.Blockchain.unsetgov"]], "verifychain() (defichain.node.blockchain method)": [[2, "defichain.node.Blockchain.verifychain"]], "verifytxoutproof() (defichain.node.blockchain method)": [[2, "defichain.node.Blockchain.verifytxoutproof"]], "control (class in defichain.node)": [[3, "defichain.node.Control"]], "getmemoryinfo() (defichain.node.control method)": [[3, "defichain.node.Control.getmemoryinfo"]], "getrpcinfo() (defichain.node.control method)": [[3, "defichain.node.Control.getrpcinfo"]], "help() (defichain.node.control method)": [[3, "defichain.node.Control.help"]], "logging() (defichain.node.control method)": [[3, "defichain.node.Control.logging"]], "stop() (defichain.node.control method)": [[3, "defichain.node.Control.stop"]], "uptime() (defichain.node.control method)": [[3, "defichain.node.Control.uptime"]], "evm (class in defichain.node)": [[4, "defichain.node.EVM"]], "evmtx() (defichain.node.evm method)": [[4, "defichain.node.EVM.evmtx"]], "logvmmaps() (defichain.node.evm method)": [[4, "defichain.node.EVM.logvmmaps"]], "vmmap() (defichain.node.evm method)": [[4, "defichain.node.EVM.vmmap"]], "generating (class in defichain.node)": [[5, "defichain.node.Generating"]], "generatetoaddress() (defichain.node.generating method)": [[5, "defichain.node.Generating.generatetoaddress"]], "buildaddressamounts (class in defichain.node)": [[6, "defichain.node.BuildAddressAmounts"]], "buildamounts (class in defichain.node)": [[6, "defichain.node.BuildAmounts"]], "buildtransferdomaindata (class in defichain.node)": [[6, "defichain.node.BuildTransferDomainData"]], "add() (defichain.node.buildaddressamounts method)": [[6, "defichain.node.BuildAddressAmounts.add"]], "add() (defichain.node.buildamounts method)": [[6, "defichain.node.BuildAmounts.add"]], "add_transfer() (defichain.node.buildtransferdomaindata method)": [[6, "defichain.node.BuildTransferDomainData.add_transfer"]], "build() (defichain.node.buildaddressamounts method)": [[6, "defichain.node.BuildAddressAmounts.build"]], "build() (defichain.node.buildamounts method)": [[6, "defichain.node.BuildAmounts.build"]], "build() (defichain.node.buildtransferdomaindata method)": [[6, "defichain.node.BuildTransferDomainData.build"]], "defichain.node": [[6, "module-defichain.node"]], "loan (class in defichain.node)": [[7, "defichain.node.Loan"]], "createloanscheme() (defichain.node.loan method)": [[7, "defichain.node.Loan.createloanscheme"]], "destroyloanscheme() (defichain.node.loan method)": [[7, "defichain.node.Loan.destroyloanscheme"]], "getcollateraltoken() (defichain.node.loan method)": [[7, "defichain.node.Loan.getcollateraltoken"]], "getinterest() (defichain.node.loan method)": [[7, "defichain.node.Loan.getinterest"]], "getloaninfo() (defichain.node.loan method)": [[7, "defichain.node.Loan.getloaninfo"]], "getloanscheme() (defichain.node.loan method)": [[7, "defichain.node.Loan.getloanscheme"]], "getloantoken() (defichain.node.loan method)": [[7, "defichain.node.Loan.getloantoken"]], "listcollateraltokens() (defichain.node.loan method)": [[7, "defichain.node.Loan.listcollateraltokens"]], "listloanschemes() (defichain.node.loan method)": [[7, "defichain.node.Loan.listloanschemes"]], "listloantokens() (defichain.node.loan method)": [[7, "defichain.node.Loan.listloantokens"]], "paybackloan() (defichain.node.loan method)": [[7, "defichain.node.Loan.paybackloan"]], "setcollateraltoken() (defichain.node.loan method)": [[7, "defichain.node.Loan.setcollateraltoken"]], "setdefaultloanscheme() (defichain.node.loan method)": [[7, "defichain.node.Loan.setdefaultloanscheme"]], "setloantoken() (defichain.node.loan method)": [[7, "defichain.node.Loan.setloantoken"]], "takeloan() (defichain.node.loan method)": [[7, "defichain.node.Loan.takeloan"]], "updateloanscheme() (defichain.node.loan method)": [[7, "defichain.node.Loan.updateloanscheme"]], "updateloantoken() (defichain.node.loan method)": [[7, "defichain.node.Loan.updateloantoken"]], "masternodes (class in defichain.node)": [[8, "defichain.node.Masternodes"]], "createmasternode() (defichain.node.masternodes method)": [[8, "defichain.node.Masternodes.createmasternode"]], "getactivemasternodecount() (defichain.node.masternodes method)": [[8, "defichain.node.Masternodes.getactivemasternodecount"]], "getanchorteams() (defichain.node.masternodes method)": [[8, "defichain.node.Masternodes.getanchorteams"]], "getmasternode() (defichain.node.masternodes method)": [[8, "defichain.node.Masternodes.getmasternode"]], "getmasternodeblocks() (defichain.node.masternodes method)": [[8, "defichain.node.Masternodes.getmasternodeblocks"]], "listanchors() (defichain.node.masternodes method)": [[8, "defichain.node.Masternodes.listanchors"]], "listmasternodes() (defichain.node.masternodes method)": [[8, "defichain.node.Masternodes.listmasternodes"]], "resignmasternode() (defichain.node.masternodes method)": [[8, "defichain.node.Masternodes.resignmasternode"]], "updatemasternode() (defichain.node.masternodes method)": [[8, "defichain.node.Masternodes.updatemasternode"]], "mining (class in defichain.node)": [[9, "defichain.node.Mining"]], "getblocktemplate() (defichain.node.mining method)": [[9, "defichain.node.Mining.getblocktemplate"]], "getmininginfo() (defichain.node.mining method)": [[9, "defichain.node.Mining.getmininginfo"]], "getmintinginfo() (defichain.node.mining method)": [[9, "defichain.node.Mining.getmintinginfo"]], "getnetworkhashps() (defichain.node.mining method)": [[9, "defichain.node.Mining.getnetworkhashps"]], "prioritisetransaction() (defichain.node.mining method)": [[9, "defichain.node.Mining.prioritisetransaction"]], "submitblock() (defichain.node.mining method)": [[9, "defichain.node.Mining.submitblock"]], "submitheader() (defichain.node.mining method)": [[9, "defichain.node.Mining.submitheader"]], "network (class in defichain.node)": [[10, "defichain.node.Network"]], "addnode() (defichain.node.network method)": [[10, "defichain.node.Network.addnode"]], "clearbanned() (defichain.node.network method)": [[10, "defichain.node.Network.clearbanned"]], "disconnectnode() (defichain.node.network method)": [[10, "defichain.node.Network.disconnectnode"]], "getaddednodeinfo() (defichain.node.network method)": [[10, "defichain.node.Network.getaddednodeinfo"]], "getconnectioncount() (defichain.node.network method)": [[10, "defichain.node.Network.getconnectioncount"]], "getnettotals() (defichain.node.network method)": [[10, "defichain.node.Network.getnettotals"]], "getnetworkinfo() (defichain.node.network method)": [[10, "defichain.node.Network.getnetworkinfo"]], "getnodeaddresses() (defichain.node.network method)": [[10, "defichain.node.Network.getnodeaddresses"]], "getpeerinfo() (defichain.node.network method)": [[10, "defichain.node.Network.getpeerinfo"]], "getversioninfo() (defichain.node.network method)": [[10, "defichain.node.Network.getversioninfo"]], "listbanned() (defichain.node.network method)": [[10, "defichain.node.Network.listbanned"]], "ping() (defichain.node.network method)": [[10, "defichain.node.Network.ping"]], "setban() (defichain.node.network method)": [[10, "defichain.node.Network.setban"]], "setnetworkactive() (defichain.node.network method)": [[10, "defichain.node.Network.setnetworkactive"]], "node (class in defichain)": [[11, "defichain.Node"]], "decrypt_wallet() (defichain.node method)": [[11, "defichain.Node.decrypt_wallet"]], "load_wallet() (defichain.node method)": [[11, "defichain.Node.load_wallet"]], "test_connection() (defichain.node method)": [[11, "defichain.Node.test_connection"]], "oracles (class in defichain.node)": [[12, "defichain.node.Oracles"]], "appointoracle() (defichain.node.oracles method)": [[12, "defichain.node.Oracles.appointoracle"]], "getdusdswapblock() (defichain.node.oracles method)": [[12, "defichain.node.Oracles.getdusdswapblock"]], "getfixedintervalprice() (defichain.node.oracles method)": [[12, "defichain.node.Oracles.getfixedintervalprice"]], "getfutureswapblock() (defichain.node.oracles method)": [[12, "defichain.node.Oracles.getfutureswapblock"]], "getoracledata() (defichain.node.oracles method)": [[12, "defichain.node.Oracles.getoracledata"]], "getprice() (defichain.node.oracles method)": [[12, "defichain.node.Oracles.getprice"]], "listfixedintervalprices() (defichain.node.oracles method)": [[12, "defichain.node.Oracles.listfixedintervalprices"]], "listlatestrawprices() (defichain.node.oracles method)": [[12, "defichain.node.Oracles.listlatestrawprices"]], "listoracles() (defichain.node.oracles method)": [[12, "defichain.node.Oracles.listoracles"]], "listprices() (defichain.node.oracles method)": [[12, "defichain.node.Oracles.listprices"]], "removeoracle() (defichain.node.oracles method)": [[12, "defichain.node.Oracles.removeoracle"]], "setoracledata() (defichain.node.oracles method)": [[12, "defichain.node.Oracles.setoracledata"]], "updateoracle() (defichain.node.oracles method)": [[12, "defichain.node.Oracles.updateoracle"]], "poolpair (class in defichain.node)": [[13, "defichain.node.Poolpair"]], "addpoolliquidity() (defichain.node.poolpair method)": [[13, "defichain.node.Poolpair.addpoolliquidity"]], "compositeswap() (defichain.node.poolpair method)": [[13, "defichain.node.Poolpair.compositeswap"]], "createpoolpair() (defichain.node.poolpair method)": [[13, "defichain.node.Poolpair.createpoolpair"]], "getpoolpair() (defichain.node.poolpair method)": [[13, "defichain.node.Poolpair.getpoolpair"]], "listpoolpairs() (defichain.node.poolpair method)": [[13, "defichain.node.Poolpair.listpoolpairs"]], "listpoolshares() (defichain.node.poolpair method)": [[13, "defichain.node.Poolpair.listpoolshares"]], "poolswap() (defichain.node.poolpair method)": [[13, "defichain.node.Poolpair.poolswap"]], "removepoolliquidity() (defichain.node.poolpair method)": [[13, "defichain.node.Poolpair.removepoolliquidity"]], "testpoolswap() (defichain.node.poolpair method)": [[13, "defichain.node.Poolpair.testpoolswap"]], "updatepoolpair() (defichain.node.poolpair method)": [[13, "defichain.node.Poolpair.updatepoolpair"]], "proposals (class in defichain.node)": [[14, "defichain.node.Proposals"]], "creategovcfp() (defichain.node.proposals method)": [[14, "defichain.node.Proposals.creategovcfp"]], "creategovvoc() (defichain.node.proposals method)": [[14, "defichain.node.Proposals.creategovvoc"]], "getgovproposal() (defichain.node.proposals method)": [[14, "defichain.node.Proposals.getgovproposal"]], "listgovproposals() (defichain.node.proposals method)": [[14, "defichain.node.Proposals.listgovproposals"]], "listgovproposalvotes() (defichain.node.proposals method)": [[14, "defichain.node.Proposals.listgovproposalvotes"]], "votegov() (defichain.node.proposals method)": [[14, "defichain.node.Proposals.votegov"]], "rawtransactions (class in defichain.node)": [[16, "defichain.node.Rawtransactions"]], "analyzepsbt() (defichain.node.rawtransactions method)": [[16, "defichain.node.Rawtransactions.analyzepsbt"]], "combinepsbt() (defichain.node.rawtransactions method)": [[16, "defichain.node.Rawtransactions.combinepsbt"]], "combinerawtransaction() (defichain.node.rawtransactions method)": [[16, "defichain.node.Rawtransactions.combinerawtransaction"]], "converttopsbt() (defichain.node.rawtransactions method)": [[16, "defichain.node.Rawtransactions.converttopsbt"]], "createpsbt() (defichain.node.rawtransactions method)": [[16, "defichain.node.Rawtransactions.createpsbt"]], "createrawtransaction() (defichain.node.rawtransactions method)": [[16, "defichain.node.Rawtransactions.createrawtransaction"]], "decodepsbt() (defichain.node.rawtransactions method)": [[16, "defichain.node.Rawtransactions.decodepsbt"]], "decoderawtransaction() (defichain.node.rawtransactions method)": [[16, "defichain.node.Rawtransactions.decoderawtransaction"]], "decodescript() (defichain.node.rawtransactions method)": [[16, "defichain.node.Rawtransactions.decodescript"]], "finalizepsbt() (defichain.node.rawtransactions method)": [[16, "defichain.node.Rawtransactions.finalizepsbt"]], "fundrawtransaction() (defichain.node.rawtransactions method)": [[16, "defichain.node.Rawtransactions.fundrawtransaction"]], "getrawtransaction() (defichain.node.rawtransactions method)": [[16, "defichain.node.Rawtransactions.getrawtransaction"]], "joinpsbts() (defichain.node.rawtransactions method)": [[16, "defichain.node.Rawtransactions.joinpsbts"]], "sendrawtransaction() (defichain.node.rawtransactions method)": [[16, "defichain.node.Rawtransactions.sendrawtransaction"]], "signrawtransactionwithkey() (defichain.node.rawtransactions method)": [[16, "defichain.node.Rawtransactions.signrawtransactionwithkey"]], "testmempoolaccept() (defichain.node.rawtransactions method)": [[16, "defichain.node.Rawtransactions.testmempoolaccept"]], "utxoupdatepsbt() (defichain.node.rawtransactions method)": [[16, "defichain.node.Rawtransactions.utxoupdatepsbt"]], "spv (class in defichain.node)": [[17, "defichain.node.Spv"]], "stats (class in defichain.node)": [[18, "defichain.node.Stats"]], "getrpcstats() (defichain.node.stats method)": [[18, "defichain.node.Stats.getrpcstats"]], "listrpcstats() (defichain.node.stats method)": [[18, "defichain.node.Stats.listrpcstats"]], "tokens (class in defichain.node)": [[19, "defichain.node.Tokens"]], "burntokens() (defichain.node.tokens method)": [[19, "defichain.node.Tokens.burntokens"]], "createtoken() (defichain.node.tokens method)": [[19, "defichain.node.Tokens.createtoken"]], "decodecustomtx() (defichain.node.tokens method)": [[19, "defichain.node.Tokens.decodecustomtx"]], "getcustomtx() (defichain.node.tokens method)": [[19, "defichain.node.Tokens.getcustomtx"]], "gettoken() (defichain.node.tokens method)": [[19, "defichain.node.Tokens.gettoken"]], "listtokens() (defichain.node.tokens method)": [[19, "defichain.node.Tokens.listtokens"]], "minttokens() (defichain.node.tokens method)": [[19, "defichain.node.Tokens.minttokens"]], "updatetoken() (defichain.node.tokens method)": [[19, "defichain.node.Tokens.updatetoken"]], "util (class in defichain.node)": [[20, "defichain.node.Util"]], "createmultisig() (defichain.node.util method)": [[20, "defichain.node.Util.createmultisig"]], "deriveaddresses() (defichain.node.util method)": [[20, "defichain.node.Util.deriveaddresses"]], "estimatesmartfee() (defichain.node.util method)": [[20, "defichain.node.Util.estimatesmartfee"]], "getdescriptorinfo() (defichain.node.util method)": [[20, "defichain.node.Util.getdescriptorinfo"]], "signmessagewithprivkey() (defichain.node.util method)": [[20, "defichain.node.Util.signmessagewithprivkey"]], "validateaddress() (defichain.node.util method)": [[20, "defichain.node.Util.validateaddress"]], "verifymessage() (defichain.node.util method)": [[20, "defichain.node.Util.verifymessage"]], "vault (class in defichain.node)": [[21, "defichain.node.Vault"]], "closevault() (defichain.node.vault method)": [[21, "defichain.node.Vault.closevault"]], "createvault() (defichain.node.vault method)": [[21, "defichain.node.Vault.createvault"]], "deposittovault() (defichain.node.vault method)": [[21, "defichain.node.Vault.deposittovault"]], "estimatecollateral() (defichain.node.vault method)": [[21, "defichain.node.Vault.estimatecollateral"]], "estimateloan() (defichain.node.vault method)": [[21, "defichain.node.Vault.estimateloan"]], "estimatevault() (defichain.node.vault method)": [[21, "defichain.node.Vault.estimatevault"]], "getvault() (defichain.node.vault method)": [[21, "defichain.node.Vault.getvault"]], "listauctionhistory() (defichain.node.vault method)": [[21, "defichain.node.Vault.listauctionhistory"]], "listauctions() (defichain.node.vault method)": [[21, "defichain.node.Vault.listauctions"]], "listvaulthistory() (defichain.node.vault method)": [[21, "defichain.node.Vault.listvaulthistory"]], "listvaults() (defichain.node.vault method)": [[21, "defichain.node.Vault.listvaults"]], "paybackwithcollateral() (defichain.node.vault method)": [[21, "defichain.node.Vault.paybackwithcollateral"]], "placeauctionbid() (defichain.node.vault method)": [[21, "defichain.node.Vault.placeauctionbid"]], "updatevault() (defichain.node.vault method)": [[21, "defichain.node.Vault.updatevault"]], "withdrawfromvault() (defichain.node.vault method)": [[21, "defichain.node.Vault.withdrawfromvault"]], "wallet (class in defichain.node)": [[22, "defichain.node.Wallet"]], "abandontransaction() (defichain.node.wallet method)": [[22, "defichain.node.Wallet.abandontransaction"]], "abortrescan() (defichain.node.wallet method)": [[22, "defichain.node.Wallet.abortrescan"]], "addmultisigaddress() (defichain.node.wallet method)": [[22, "defichain.node.Wallet.addmultisigaddress"]], "addressmap() (defichain.node.wallet method)": [[22, "defichain.node.Wallet.addressmap"]], "backupwallet() (defichain.node.wallet method)": [[22, "defichain.node.Wallet.backupwallet"]], "bumpfee() (defichain.node.wallet method)": [[22, "defichain.node.Wallet.bumpfee"]], "createwallet() (defichain.node.wallet method)": [[22, "defichain.node.Wallet.createwallet"]], "dumpprivkey() (defichain.node.wallet method)": [[22, "defichain.node.Wallet.dumpprivkey"]], "dumpwallet() (defichain.node.wallet method)": [[22, "defichain.node.Wallet.dumpwallet"]], "encryptwallet() (defichain.node.wallet method)": [[22, "defichain.node.Wallet.encryptwallet"]], "getaddressesbylabel() (defichain.node.wallet method)": [[22, "defichain.node.Wallet.getaddressesbylabel"]], "getaddressinfo() (defichain.node.wallet method)": [[22, "defichain.node.Wallet.getaddressinfo"]], "getbalance() (defichain.node.wallet method)": [[22, "defichain.node.Wallet.getbalance"]], "getbalances() (defichain.node.wallet method)": [[22, "defichain.node.Wallet.getbalances"]], "getnewaddress() (defichain.node.wallet method)": [[22, "defichain.node.Wallet.getnewaddress"]], "getrawchangeaddress() (defichain.node.wallet method)": [[22, "defichain.node.Wallet.getrawchangeaddress"]], "getreceivedbyaddress() (defichain.node.wallet method)": [[22, "defichain.node.Wallet.getreceivedbyaddress"]], "getreceivedbylabel() (defichain.node.wallet method)": [[22, "defichain.node.Wallet.getreceivedbylabel"]], "gettransaction() (defichain.node.wallet method)": [[22, "defichain.node.Wallet.gettransaction"]], "getunconfirmedbalance() (defichain.node.wallet method)": [[22, "defichain.node.Wallet.getunconfirmedbalance"]], "getwalletinfo() (defichain.node.wallet method)": [[22, "defichain.node.Wallet.getwalletinfo"]], "importaddress() (defichain.node.wallet method)": [[22, "defichain.node.Wallet.importaddress"]], "importmulti() (defichain.node.wallet method)": [[22, "defichain.node.Wallet.importmulti"]], "importprivkey() (defichain.node.wallet method)": [[22, "defichain.node.Wallet.importprivkey"]], "importprunedfunds() (defichain.node.wallet method)": [[22, "defichain.node.Wallet.importprunedfunds"]], "importpubkey() (defichain.node.wallet method)": [[22, "defichain.node.Wallet.importpubkey"]], "importwallet() (defichain.node.wallet method)": [[22, "defichain.node.Wallet.importwallet"]], "keypoolrefill() (defichain.node.wallet method)": [[22, "defichain.node.Wallet.keypoolrefill"]], "listaddressgroupings() (defichain.node.wallet method)": [[22, "defichain.node.Wallet.listaddressgroupings"]], "listlabels() (defichain.node.wallet method)": [[22, "defichain.node.Wallet.listlabels"]], "listlockunspent() (defichain.node.wallet method)": [[22, "defichain.node.Wallet.listlockunspent"]], "listreceivedbyaddress() (defichain.node.wallet method)": [[22, "defichain.node.Wallet.listreceivedbyaddress"]], "listreceivedbylabel() (defichain.node.wallet method)": [[22, "defichain.node.Wallet.listreceivedbylabel"]], "listsinceblock() (defichain.node.wallet method)": [[22, "defichain.node.Wallet.listsinceblock"]], "listtransactions() (defichain.node.wallet method)": [[22, "defichain.node.Wallet.listtransactions"]], "listunspent() (defichain.node.wallet method)": [[22, "defichain.node.Wallet.listunspent"]], "listwalletdir() (defichain.node.wallet method)": [[22, "defichain.node.Wallet.listwalletdir"]], "listwallets() (defichain.node.wallet method)": [[22, "defichain.node.Wallet.listwallets"]], "loadwallet() (defichain.node.wallet method)": [[22, "defichain.node.Wallet.loadwallet"]], "lockunspent() (defichain.node.wallet method)": [[22, "defichain.node.Wallet.lockunspent"]], "removeprunedfunds() (defichain.node.wallet method)": [[22, "defichain.node.Wallet.removeprunedfunds"]], "rescanblockchain() (defichain.node.wallet method)": [[22, "defichain.node.Wallet.rescanblockchain"]], "sendmany() (defichain.node.wallet method)": [[22, "defichain.node.Wallet.sendmany"]], "sendtoaddress() (defichain.node.wallet method)": [[22, "defichain.node.Wallet.sendtoaddress"]], "sethdseed() (defichain.node.wallet method)": [[22, "defichain.node.Wallet.sethdseed"]], "setlabel() (defichain.node.wallet method)": [[22, "defichain.node.Wallet.setlabel"]], "settxfee() (defichain.node.wallet method)": [[22, "defichain.node.Wallet.settxfee"]], "setwalletflag() (defichain.node.wallet method)": [[22, "defichain.node.Wallet.setwalletflag"]], "signmessage() (defichain.node.wallet method)": [[22, "defichain.node.Wallet.signmessage"]], "signrawtransactionwithwallet() (defichain.node.wallet method)": [[22, "defichain.node.Wallet.signrawtransactionwithwallet"]], "unloadwallet() (defichain.node.wallet method)": [[22, "defichain.node.Wallet.unloadwallet"]], "walletcreatefundedpsbt() (defichain.node.wallet method)": [[22, "defichain.node.Wallet.walletcreatefundedpsbt"]], "walletlock() (defichain.node.wallet method)": [[22, "defichain.node.Wallet.walletlock"]], "walletpassphrase() (defichain.node.wallet method)": [[22, "defichain.node.Wallet.walletpassphrase"]], "walletpassphrasechange() (defichain.node.wallet method)": [[22, "defichain.node.Wallet.walletpassphrasechange"]], "walletprocesspsbt() (defichain.node.wallet method)": [[22, "defichain.node.Wallet.walletprocesspsbt"]], "zmq (class in defichain.node)": [[23, "defichain.node.Zmq"]], "getzmqnotifications() (defichain.node.zmq method)": [[23, "defichain.node.Zmq.getzmqnotifications"]], "address (class in defichain.ocean)": [[24, "defichain.ocean.Address"]], "getaccounthistory() (defichain.ocean.address method)": [[24, "defichain.ocean.Address.getAccountHistory"]], "getaggregation() (defichain.ocean.address method)": [[24, "defichain.ocean.Address.getAggregation"]], "getbalance() (defichain.ocean.address method)": [[24, "defichain.ocean.Address.getBalance"]], "listaccounthistory() (defichain.ocean.address method)": [[24, "defichain.ocean.Address.listAccountHistory"]], "listtoken() (defichain.ocean.address method)": [[24, "defichain.ocean.Address.listToken"]], "listtransaction() (defichain.ocean.address method)": [[24, "defichain.ocean.Address.listTransaction"]], "listtransactionunspent() (defichain.ocean.address method)": [[24, "defichain.ocean.Address.listTransactionUnspent"]], "listvault() (defichain.ocean.address method)": [[24, "defichain.ocean.Address.listVault"]], "blocks (class in defichain.ocean)": [[25, "defichain.ocean.Blocks"]], "get() (defichain.ocean.blocks method)": [[25, "defichain.ocean.Blocks.get"]], "gettransactions() (defichain.ocean.blocks method)": [[25, "defichain.ocean.Blocks.getTransactions"]], "list() (defichain.ocean.blocks method)": [[25, "defichain.ocean.Blocks.list"]], "consortium (class in defichain.ocean)": [[26, "defichain.ocean.Consortium"]], "getassetbreakdown() (defichain.ocean.consortium method)": [[26, "defichain.ocean.Consortium.getAssetBreakdown"]], "getmemberstats() (defichain.ocean.consortium method)": [[26, "defichain.ocean.Consortium.getMemberStats"]], "fee (class in defichain.ocean)": [[27, "defichain.ocean.Fee"]], "estimate() (defichain.ocean.fee method)": [[27, "defichain.ocean.Fee.estimate"]], "governance (class in defichain.ocean)": [[28, "defichain.ocean.Governance"]], "getgovproposal() (defichain.ocean.governance method)": [[28, "defichain.ocean.Governance.getGovProposal"]], "listgovproposalvotes() (defichain.ocean.governance method)": [[28, "defichain.ocean.Governance.listGovProposalVotes"]], "listgovproposals() (defichain.ocean.governance method)": [[28, "defichain.ocean.Governance.listGovProposals"]], "loan (class in defichain.ocean)": [[30, "defichain.ocean.Loan"]], "getcollateraltoken() (defichain.ocean.loan method)": [[30, "defichain.ocean.Loan.getCollateralToken"]], "getloantoken() (defichain.ocean.loan method)": [[30, "defichain.ocean.Loan.getLoanToken"]], "getscheme() (defichain.ocean.loan method)": [[30, "defichain.ocean.Loan.getScheme"]], "getvault() (defichain.ocean.loan method)": [[30, "defichain.ocean.Loan.getVault"]], "listauction() (defichain.ocean.loan method)": [[30, "defichain.ocean.Loan.listAuction"]], "listcollateraltoken() (defichain.ocean.loan method)": [[30, "defichain.ocean.Loan.listCollateralToken"]], "listloantoken() (defichain.ocean.loan method)": [[30, "defichain.ocean.Loan.listLoanToken"]], "listscheme() (defichain.ocean.loan method)": [[30, "defichain.ocean.Loan.listScheme"]], "listvault() (defichain.ocean.loan method)": [[30, "defichain.ocean.Loan.listVault"]], "listvaultauctionhistory() (defichain.ocean.loan method)": [[30, "defichain.ocean.Loan.listVaultAuctionHistory"]], "masternodes (class in defichain.ocean)": [[31, "defichain.ocean.Masternodes"]], "get() (defichain.ocean.masternodes method)": [[31, "defichain.ocean.Masternodes.get"]], "list() (defichain.ocean.masternodes method)": [[31, "defichain.ocean.Masternodes.list"]], "ocean (class in defichain)": [[32, "defichain.Ocean"]], "oracles (class in defichain.ocean)": [[33, "defichain.ocean.Oracles"]], "getoraclebyaddress() (defichain.ocean.oracles method)": [[33, "defichain.ocean.Oracles.getOracleByAddress"]], "getpricefeed() (defichain.ocean.oracles method)": [[33, "defichain.ocean.Oracles.getPriceFeed"]], "list() (defichain.ocean.oracles method)": [[33, "defichain.ocean.Oracles.list"]], "poolpairs (class in defichain.ocean)": [[34, "defichain.ocean.Poolpairs"]], "get() (defichain.ocean.poolpairs method)": [[34, "defichain.ocean.Poolpairs.get"]], "getallpaths() (defichain.ocean.poolpairs method)": [[34, "defichain.ocean.Poolpairs.getAllPaths"]], "getbestpath() (defichain.ocean.poolpairs method)": [[34, "defichain.ocean.Poolpairs.getBestPath"]], "getswappabletokens() (defichain.ocean.poolpairs method)": [[34, "defichain.ocean.Poolpairs.getSwappableTokens"]], "list() (defichain.ocean.poolpairs method)": [[34, "defichain.ocean.Poolpairs.list"]], "listdexprices() (defichain.ocean.poolpairs method)": [[34, "defichain.ocean.Poolpairs.listDexPrices"]], "listpoolswapaggregates() (defichain.ocean.poolpairs method)": [[34, "defichain.ocean.Poolpairs.listPoolSwapAggregates"]], "listpoolswaps() (defichain.ocean.poolpairs method)": [[34, "defichain.ocean.Poolpairs.listPoolSwaps"]], "listpoolswapsverbose() (defichain.ocean.poolpairs method)": [[34, "defichain.ocean.Poolpairs.listPoolSwapsVerbose"]], "prices (class in defichain.ocean)": [[35, "defichain.ocean.Prices"]], "get() (defichain.ocean.prices method)": [[35, "defichain.ocean.Prices.get"]], "getfeed() (defichain.ocean.prices method)": [[35, "defichain.ocean.Prices.getFeed"]], "getfeedactive() (defichain.ocean.prices method)": [[35, "defichain.ocean.Prices.getFeedActive"]], "getfeedwithinterval() (defichain.ocean.prices method)": [[35, "defichain.ocean.Prices.getFeedWithInterval"]], "getoracles() (defichain.ocean.prices method)": [[35, "defichain.ocean.Prices.getOracles"]], "list() (defichain.ocean.prices method)": [[35, "defichain.ocean.Prices.list"]], "rawtx (class in defichain.ocean)": [[36, "defichain.ocean.RawTx"]], "get() (defichain.ocean.rawtx method)": [[36, "defichain.ocean.RawTx.get"]], "send() (defichain.ocean.rawtx method)": [[36, "defichain.ocean.RawTx.send"]], "test() (defichain.ocean.rawtx method)": [[36, "defichain.ocean.RawTx.test"]], "rpc (class in defichain.ocean)": [[37, "defichain.ocean.Rpc"]], "call() (defichain.ocean.rpc method)": [[37, "defichain.ocean.Rpc.call"]], "stats (class in defichain.ocean)": [[38, "defichain.ocean.Stats"]], "get() (defichain.ocean.stats method)": [[38, "defichain.ocean.Stats.get"]], "getburn() (defichain.ocean.stats method)": [[38, "defichain.ocean.Stats.getBurn"]], "getrewarddistribution() (defichain.ocean.stats method)": [[38, "defichain.ocean.Stats.getRewardDistribution"]], "getsupply() (defichain.ocean.stats method)": [[38, "defichain.ocean.Stats.getSupply"]], "tokens (class in defichain.ocean)": [[39, "defichain.ocean.Tokens"]], "get() (defichain.ocean.tokens method)": [[39, "defichain.ocean.Tokens.get"]], "list() (defichain.ocean.tokens method)": [[39, "defichain.ocean.Tokens.list"]], "transactions (class in defichain.ocean)": [[40, "defichain.ocean.Transactions"]], "get() (defichain.ocean.transactions method)": [[40, "defichain.ocean.Transactions.get"]], "getvins() (defichain.ocean.transactions method)": [[40, "defichain.ocean.Transactions.getVins"]], "getvouts() (defichain.ocean.transactions method)": [[40, "defichain.ocean.Transactions.getVouts"]], "account (class in defichain)": [[53, "defichain.Account"]], "derivationerror (class in defichain.exceptions.hdwallet)": [[54, "defichain.exceptions.hdwallet.DerivationError"]], "defichain.exceptions.hdwallet": [[54, "module-defichain.exceptions.hdwallet"]], "defichain.hdwallet.utils": [[56, "module-defichain.hdwallet.utils"]], "entropy_to_mnemonic() (in module defichain.hdwallet.utils)": [[56, "defichain.hdwallet.utils.entropy_to_mnemonic"]], "generate_entropy() (in module defichain.hdwallet.utils)": [[56, "defichain.hdwallet.utils.generate_entropy"]], "generate_mnemonic() (in module defichain.hdwallet.utils)": [[56, "defichain.hdwallet.utils.generate_mnemonic"]], "generate_passphrase() (in module defichain.hdwallet.utils)": [[56, "defichain.hdwallet.utils.generate_passphrase"]], "get_entropy_strength() (in module defichain.hdwallet.utils)": [[56, "defichain.hdwallet.utils.get_entropy_strength"]], "get_mnemonic_language() (in module defichain.hdwallet.utils)": [[56, "defichain.hdwallet.utils.get_mnemonic_language"]], "get_mnemonic_strength() (in module defichain.hdwallet.utils)": [[56, "defichain.hdwallet.utils.get_mnemonic_strength"]], "is_entropy() (in module defichain.hdwallet.utils)": [[56, "defichain.hdwallet.utils.is_entropy"]], "is_mnemonic() (in module defichain.hdwallet.utils)": [[56, "defichain.hdwallet.utils.is_mnemonic"]], "mnemonic_to_entropy() (in module defichain.hdwallet.utils)": [[56, "defichain.hdwallet.utils.mnemonic_to_entropy"]], "wallet (class in defichain)": [[57, "defichain.Wallet"]], "bech32_address() (defichain.wallet method)": [[57, "defichain.Wallet.bech32_address"]], "chain_code() (defichain.wallet method)": [[57, "defichain.Wallet.chain_code"]], "clean_derivation() (defichain.wallet method)": [[57, "defichain.Wallet.clean_derivation"]], "compressed() (defichain.wallet method)": [[57, "defichain.Wallet.compressed"]], "cryptocurrency() (defichain.wallet method)": [[57, "defichain.Wallet.cryptocurrency"]], "decrypt() (defichain.wallet static method)": [[57, "defichain.Wallet.decrypt"]], "default_address() (defichain.wallet method)": [[57, "defichain.Wallet.default_address"]], "dumps() (defichain.wallet method)": [[57, "defichain.Wallet.dumps"]], "encrypt() (defichain.wallet method)": [[57, "defichain.Wallet.encrypt"]], "entropy() (defichain.wallet method)": [[57, "defichain.Wallet.entropy"]], "finger_print() (defichain.wallet method)": [[57, "defichain.Wallet.finger_print"]], "from_entropy() (defichain.wallet method)": [[57, "defichain.Wallet.from_entropy"]], "from_index() (defichain.wallet method)": [[57, "defichain.Wallet.from_index"]], "from_mnemonic() (defichain.wallet method)": [[57, "defichain.Wallet.from_mnemonic"]], "from_path() (defichain.wallet method)": [[57, "defichain.Wallet.from_path"]], "from_private_key() (defichain.wallet method)": [[57, "defichain.Wallet.from_private_key"]], "from_public_key() (defichain.wallet method)": [[57, "defichain.Wallet.from_public_key"]], "from_seed() (defichain.wallet method)": [[57, "defichain.Wallet.from_seed"]], "from_wif() (defichain.wallet method)": [[57, "defichain.Wallet.from_wif"]], "from_xprivate_key() (defichain.wallet method)": [[57, "defichain.Wallet.from_xprivate_key"]], "from_xpublic_key() (defichain.wallet method)": [[57, "defichain.Wallet.from_xpublic_key"]], "get_account() (defichain.wallet method)": [[57, "defichain.Wallet.get_account"]], "hash() (defichain.wallet method)": [[57, "defichain.Wallet.hash"]], "language() (defichain.wallet method)": [[57, "defichain.Wallet.language"]], "legacy_address() (defichain.wallet method)": [[57, "defichain.Wallet.legacy_address"]], "mnemonic() (defichain.wallet method)": [[57, "defichain.Wallet.mnemonic"]], "network() (defichain.wallet method)": [[57, "defichain.Wallet.network"]], "p2pkh_address() (defichain.wallet method)": [[57, "defichain.Wallet.p2pkh_address"]], "p2sh_address() (defichain.wallet method)": [[57, "defichain.Wallet.p2sh_address"]], "p2wpkh_address() (defichain.wallet method)": [[57, "defichain.Wallet.p2wpkh_address"]], "passphrase() (defichain.wallet method)": [[57, "defichain.Wallet.passphrase"]], "path() (defichain.wallet method)": [[57, "defichain.Wallet.path"]], "private_key() (defichain.wallet method)": [[57, "defichain.Wallet.private_key"]], "public_key() (defichain.wallet method)": [[57, "defichain.Wallet.public_key"]], "root_xprivate_key() (defichain.wallet method)": [[57, "defichain.Wallet.root_xprivate_key"]], "root_xpublic_key() (defichain.wallet method)": [[57, "defichain.Wallet.root_xpublic_key"]], "seed() (defichain.wallet method)": [[57, "defichain.Wallet.seed"]], "semantic() (defichain.wallet method)": [[57, "defichain.Wallet.semantic"]], "strength() (defichain.wallet method)": [[57, "defichain.Wallet.strength"]], "symbol() (defichain.wallet method)": [[57, "defichain.Wallet.symbol"]], "uncompressed() (defichain.wallet method)": [[57, "defichain.Wallet.uncompressed"]], "wif() (defichain.wallet method)": [[57, "defichain.Wallet.wif"]], "address (class in defichain.transactions.address)": [[58, "defichain.transactions.address.Address"]], "from_address() (defichain.transactions.address.address static method)": [[58, "defichain.transactions.address.Address.from_address"]], "from_scriptpublickey() (defichain.transactions.address.address static method)": [[58, "defichain.transactions.address.Address.from_scriptPublicKey"]], "get_addresstype() (defichain.transactions.address.address static method)": [[58, "defichain.transactions.address.Address.get_addressType"]], "verify_address() (defichain.transactions.address.address static method)": [[58, "defichain.transactions.address.Address.verify_address"]], "p2pkh (class in defichain.transactions.address)": [[59, "defichain.transactions.address.P2PKH"]], "from_privatekey() (defichain.transactions.address.p2pkh static method)": [[59, "defichain.transactions.address.P2PKH.from_privateKey"]], "from_publickey() (defichain.transactions.address.p2pkh static method)": [[59, "defichain.transactions.address.P2PKH.from_publicKey"]], "from_scriptpublickey() (defichain.transactions.address.p2pkh static method)": [[59, "defichain.transactions.address.P2PKH.from_scriptPublicKey"]], "get_addresstype() (defichain.transactions.address.p2pkh method)": [[59, "defichain.transactions.address.P2PKH.get_addressType"]], "get_bytes_redeemscript() (defichain.transactions.address.p2pkh method)": [[59, "defichain.transactions.address.P2PKH.get_bytes_redeemScript"]], "get_bytes_scriptpublickey() (defichain.transactions.address.p2pkh method)": [[59, "defichain.transactions.address.P2PKH.get_bytes_scriptPublicKey"]], "get_redeemscript() (defichain.transactions.address.p2pkh method)": [[59, "defichain.transactions.address.P2PKH.get_redeemScript"]], "get_scriptpublickey() (defichain.transactions.address.p2pkh method)": [[59, "defichain.transactions.address.P2PKH.get_scriptPublicKey"]], "p2sh (class in defichain.transactions.address)": [[60, "defichain.transactions.address.P2SH"]], "from_privatekey() (defichain.transactions.address.p2sh static method)": [[60, "defichain.transactions.address.P2SH.from_privateKey"]], "from_publickey() (defichain.transactions.address.p2sh static method)": [[60, "defichain.transactions.address.P2SH.from_publicKey"]], "from_scriptpublickey() (defichain.transactions.address.p2sh static method)": [[60, "defichain.transactions.address.P2SH.from_scriptPublicKey"]], "get_addresstype() (defichain.transactions.address.p2sh method)": [[60, "defichain.transactions.address.P2SH.get_addressType"]], "get_bytes_redeemscript() (defichain.transactions.address.p2sh method)": [[60, "defichain.transactions.address.P2SH.get_bytes_redeemScript"]], "get_bytes_scriptpublickey() (defichain.transactions.address.p2sh method)": [[60, "defichain.transactions.address.P2SH.get_bytes_scriptPublicKey"]], "get_redeemscript() (defichain.transactions.address.p2sh method)": [[60, "defichain.transactions.address.P2SH.get_redeemScript"]], "get_scriptpublickey() (defichain.transactions.address.p2sh method)": [[60, "defichain.transactions.address.P2SH.get_scriptPublicKey"]], "p2wpkh (class in defichain.transactions.address)": [[61, "defichain.transactions.address.P2WPKH"]], "from_privatekey() (defichain.transactions.address.p2wpkh static method)": [[61, "defichain.transactions.address.P2WPKH.from_privateKey"]], "from_publickey() (defichain.transactions.address.p2wpkh static method)": [[61, "defichain.transactions.address.P2WPKH.from_publicKey"]], "from_scriptpublickey() (defichain.transactions.address.p2wpkh static method)": [[61, "defichain.transactions.address.P2WPKH.from_scriptPublicKey"]], "get_addresstype() (defichain.transactions.address.p2wpkh method)": [[61, "defichain.transactions.address.P2WPKH.get_addressType"]], "get_bytes_redeemscript() (defichain.transactions.address.p2wpkh method)": [[61, "defichain.transactions.address.P2WPKH.get_bytes_redeemScript"]], "get_bytes_scriptpublickey() (defichain.transactions.address.p2wpkh method)": [[61, "defichain.transactions.address.P2WPKH.get_bytes_scriptPublicKey"]], "get_redeemscript() (defichain.transactions.address.p2wpkh method)": [[61, "defichain.transactions.address.P2WPKH.get_redeemScript"]], "get_scriptpublickey() (defichain.transactions.address.p2wpkh method)": [[61, "defichain.transactions.address.P2WPKH.get_scriptPublicKey"]], "accounttoaccount (class in defichain.transactions.defitx)": [[62, "defichain.transactions.defitx.AccountToAccount"]], "accounttoutxos (class in defichain.transactions.defitx)": [[62, "defichain.transactions.defitx.AccountToUtxos"]], "anyaccounttoaccount (class in defichain.transactions.defitx)": [[62, "defichain.transactions.defitx.AnyAccountToAccount"]], "setfutureswap (class in defichain.transactions.defitx)": [[62, "defichain.transactions.defitx.SetFutureSwap"]], "utxostoaccount (class in defichain.transactions.defitx)": [[62, "defichain.transactions.defitx.UtxosToAccount"]], "createcfp (class in defichain.transactions.defitx)": [[63, "defichain.transactions.defitx.CreateCfp"]], "createvoc (class in defichain.transactions.defitx)": [[63, "defichain.transactions.defitx.CreateVoc"]], "vote (class in defichain.transactions.defitx)": [[63, "defichain.transactions.defitx.Vote"]], "paybackloan (class in defichain.transactions.defitx)": [[65, "defichain.transactions.defitx.PaybackLoan"]], "takeloan (class in defichain.transactions.defitx)": [[65, "defichain.transactions.defitx.TakeLoan"]], "createmasternode (class in defichain.transactions.defitx)": [[66, "defichain.transactions.defitx.CreateMasternode"]], "resignmasternode (class in defichain.transactions.defitx)": [[66, "defichain.transactions.defitx.ResignMasternode"]], "updatemasternode (class in defichain.transactions.defitx)": [[66, "defichain.transactions.defitx.UpdateMasternode"]], "addpoolliquidity (class in defichain.transactions.defitx)": [[67, "defichain.transactions.defitx.AddPoolLiquidity"]], "compositeswap (class in defichain.transactions.defitx)": [[67, "defichain.transactions.defitx.CompositeSwap"]], "poolswap (class in defichain.transactions.defitx)": [[67, "defichain.transactions.defitx.PoolSwap"]], "removepoolliquidity (class in defichain.transactions.defitx)": [[67, "defichain.transactions.defitx.RemovePoolLiquidity"]], "closevault (class in defichain.transactions.defitx)": [[68, "defichain.transactions.defitx.CloseVault"]], "createvault (class in defichain.transactions.defitx)": [[68, "defichain.transactions.defitx.CreateVault"]], "deposittovault (class in defichain.transactions.defitx)": [[68, "defichain.transactions.defitx.DepositToVault"]], "placeauctionbid (class in defichain.transactions.defitx)": [[68, "defichain.transactions.defitx.PlaceAuctionBid"]], "updatevault (class in defichain.transactions.defitx)": [[68, "defichain.transactions.defitx.UpdateVault"]], "withdrawfromvault (class in defichain.transactions.defitx)": [[68, "defichain.transactions.defitx.WithdrawFromVault"]], "privatekey (class in defichain.transactions.keys)": [[70, "defichain.transactions.keys.PrivateKey"]], "publickey (class in defichain.transactions.keys)": [[70, "defichain.transactions.keys.PublicKey"]], "estimate_fee() (in module defichain.transactions.rawtransactions)": [[71, "defichain.transactions.rawtransactions.estimate_fee"]], "sign_legacy_input() (in module defichain.transactions.rawtransactions.sign)": [[73, "defichain.transactions.rawtransactions.sign.sign_legacy_input"]], "sign_segwit_input() (in module defichain.transactions.rawtransactions.sign)": [[73, "defichain.transactions.rawtransactions.sign.sign_segwit_input"]], "transaction (class in defichain.transactions.rawtransactions)": [[74, "defichain.transactions.rawtransactions.Transaction"]], "deserialize() (defichain.transactions.rawtransactions.transaction static method)": [[74, "defichain.transactions.rawtransactions.Transaction.deserialize"]], "sign() (defichain.transactions.rawtransactions.transaction method)": [[74, "defichain.transactions.rawtransactions.Transaction.sign"]], "to_json() (defichain.transactions.rawtransactions.transaction method)": [[74, "defichain.transactions.rawtransactions.Transaction.to_json"]], "verify() (defichain.transactions.rawtransactions.transaction method)": [[74, "defichain.transactions.rawtransactions.Transaction.verify"]], "txcoinbaseinput (class in defichain.transactions.rawtransactions)": [[75, "defichain.transactions.rawtransactions.TxCoinbaseInput"]], "txinput (class in defichain.transactions.rawtransactions)": [[75, "defichain.transactions.rawtransactions.TxInput"]], "txp2pkhinput (class in defichain.transactions.rawtransactions)": [[75, "defichain.transactions.rawtransactions.TxP2PKHInput"]], "txp2shinput (class in defichain.transactions.rawtransactions)": [[75, "defichain.transactions.rawtransactions.TxP2SHInput"]], "txp2wpkhinput (class in defichain.transactions.rawtransactions)": [[75, "defichain.transactions.rawtransactions.TxP2WPKHInput"]], "deserialize() (defichain.transactions.rawtransactions.txcoinbaseinput static method)": [[75, "defichain.transactions.rawtransactions.TxCoinbaseInput.deserialize"]], "deserialize() (defichain.transactions.rawtransactions.txinput static method)": [[75, "defichain.transactions.rawtransactions.TxInput.deserialize"]], "deserialize() (defichain.transactions.rawtransactions.txp2pkhinput static method)": [[75, "defichain.transactions.rawtransactions.TxP2PKHInput.deserialize"]], "deserialize() (defichain.transactions.rawtransactions.txp2shinput static method)": [[75, "defichain.transactions.rawtransactions.TxP2SHInput.deserialize"]], "deserialize() (defichain.transactions.rawtransactions.txp2wpkhinput static method)": [[75, "defichain.transactions.rawtransactions.TxP2WPKHInput.deserialize"]], "to_json() (defichain.transactions.rawtransactions.txcoinbaseinput method)": [[75, "defichain.transactions.rawtransactions.TxCoinbaseInput.to_json"]], "to_json() (defichain.transactions.rawtransactions.txinput method)": [[75, "defichain.transactions.rawtransactions.TxInput.to_json"]], "to_json() (defichain.transactions.rawtransactions.txp2pkhinput method)": [[75, "defichain.transactions.rawtransactions.TxP2PKHInput.to_json"]], "to_json() (defichain.transactions.rawtransactions.txp2shinput method)": [[75, "defichain.transactions.rawtransactions.TxP2SHInput.to_json"]], "to_json() (defichain.transactions.rawtransactions.txp2wpkhinput method)": [[75, "defichain.transactions.rawtransactions.TxP2WPKHInput.to_json"]], "txaddressoutput (class in defichain.transactions.rawtransactions)": [[76, "defichain.transactions.rawtransactions.TxAddressOutput"]], "txcoinbaseoutput (class in defichain.transactions.rawtransactions)": [[76, "defichain.transactions.rawtransactions.TxCoinbaseOutput"]], "txdefioutput (class in defichain.transactions.rawtransactions)": [[76, "defichain.transactions.rawtransactions.TxDefiOutput"]], "txoutput (class in defichain.transactions.rawtransactions)": [[76, "defichain.transactions.rawtransactions.TxOutput"]], "deserialize() (defichain.transactions.rawtransactions.txaddressoutput static method)": [[76, "defichain.transactions.rawtransactions.TxAddressOutput.deserialize"]], "deserialize() (defichain.transactions.rawtransactions.txcoinbaseoutput static method)": [[76, "defichain.transactions.rawtransactions.TxCoinbaseOutput.deserialize"]], "deserialize() (defichain.transactions.rawtransactions.txdefioutput static method)": [[76, "defichain.transactions.rawtransactions.TxDefiOutput.deserialize"]], "deserialize() (defichain.transactions.rawtransactions.txoutput static method)": [[76, "defichain.transactions.rawtransactions.TxOutput.deserialize"]], "to_json() (defichain.transactions.rawtransactions.txaddressoutput method)": [[76, "defichain.transactions.rawtransactions.TxAddressOutput.to_json"]], "to_json() (defichain.transactions.rawtransactions.txcoinbaseoutput method)": [[76, "defichain.transactions.rawtransactions.TxCoinbaseOutput.to_json"]], "to_json() (defichain.transactions.rawtransactions.txdefioutput method)": [[76, "defichain.transactions.rawtransactions.TxDefiOutput.to_json"]], "to_json() (defichain.transactions.rawtransactions.txoutput method)": [[76, "defichain.transactions.rawtransactions.TxOutput.to_json"]], "witness (class in defichain.transactions.rawtransactions)": [[77, "defichain.transactions.rawtransactions.Witness"]], "witnesshash (class in defichain.transactions.rawtransactions)": [[77, "defichain.transactions.rawtransactions.WitnessHash"]], "deserialize() (defichain.transactions.rawtransactions.witness static method)": [[77, "defichain.transactions.rawtransactions.Witness.deserialize"]], "deserialize() (defichain.transactions.rawtransactions.witnesshash static method)": [[77, "defichain.transactions.rawtransactions.WitnessHash.deserialize"]], "verify() (defichain.transactions.rawtransactions.witness method)": [[77, "defichain.transactions.rawtransactions.Witness.verify"]], "verify() (defichain.transactions.rawtransactions.witnesshash method)": [[77, "defichain.transactions.rawtransactions.WitnessHash.verify"]], "remotedatanode (class in defichain.transactions.remotedata)": [[79, "defichain.transactions.remotedata.RemoteDataNode"]], "check_masternode() (defichain.transactions.remotedata.remotedatanode method)": [[79, "defichain.transactions.remotedata.RemoteDataNode.check_masternode"]], "get_unspent() (defichain.transactions.remotedata.remotedatanode method)": [[79, "defichain.transactions.remotedata.RemoteDataNode.get_unspent"]], "send_tx() (defichain.transactions.remotedata.remotedatanode method)": [[79, "defichain.transactions.remotedata.RemoteDataNode.send_tx"]], "test_tx() (defichain.transactions.remotedata.remotedatanode method)": [[79, "defichain.transactions.remotedata.RemoteDataNode.test_tx"]], "remotedataocean (class in defichain.transactions.remotedata)": [[80, "defichain.transactions.remotedata.RemoteDataOcean"]], "check_masternode() (defichain.transactions.remotedata.remotedataocean method)": [[80, "defichain.transactions.remotedata.RemoteDataOcean.check_masternode"]], "get_unspent() (defichain.transactions.remotedata.remotedataocean method)": [[80, "defichain.transactions.remotedata.RemoteDataOcean.get_unspent"]], "send_tx() (defichain.transactions.remotedata.remotedataocean method)": [[80, "defichain.transactions.remotedata.RemoteDataOcean.send_tx"]], "test_tx() (defichain.transactions.remotedata.remotedataocean method)": [[80, "defichain.transactions.remotedata.RemoteDataOcean.test_tx"]], "calculate (class in defichain.transactions.utils)": [[81, "defichain.transactions.utils.Calculate"]], "converter (class in defichain.transactions.utils)": [[81, "defichain.transactions.utils.Converter"]], "token (class in defichain.transactions.utils)": [[81, "defichain.transactions.utils.Token"]], "verify (class in defichain.transactions.utils)": [[81, "defichain.transactions.utils.Verify"]], "float_to_int() (defichain.transactions.utils.converter static method)": [[81, "defichain.transactions.utils.Converter.float_to_int"]], "int_to_float() (defichain.transactions.utils.converter static method)": [[81, "defichain.transactions.utils.Converter.int_to_float"]], "accounts (class in defichain.transactions.builder.modules)": [[82, "defichain.transactions.builder.modules.Accounts"]], "accounttoaccount() (defichain.transactions.builder.modules.accounts method)": [[82, "defichain.transactions.builder.modules.Accounts.accounttoaccount"]], "accounttoutxos() (defichain.transactions.builder.modules.accounts method)": [[82, "defichain.transactions.builder.modules.Accounts.accounttoutxos"]], "utxostoaccount() (defichain.transactions.builder.modules.accounts method)": [[82, "defichain.transactions.builder.modules.Accounts.utxostoaccount"]], "data (class in defichain.transactions.builder.modules)": [[83, "defichain.transactions.builder.modules.Data"]], "hex_data() (defichain.transactions.builder.modules.data method)": [[83, "defichain.transactions.builder.modules.Data.hex_data"]], "str_data() (defichain.transactions.builder.modules.data method)": [[83, "defichain.transactions.builder.modules.Data.str_data"]], "governance (class in defichain.transactions.builder.modules)": [[84, "defichain.transactions.builder.modules.Governance"]], "vote() (defichain.transactions.builder.modules.governance method)": [[84, "defichain.transactions.builder.modules.Governance.vote"]], "loans (class in defichain.transactions.builder.modules)": [[86, "defichain.transactions.builder.modules.Loans"]], "paybackloan() (defichain.transactions.builder.modules.loans method)": [[86, "defichain.transactions.builder.modules.Loans.paybackloan"]], "takeloan() (defichain.transactions.builder.modules.loans method)": [[86, "defichain.transactions.builder.modules.Loans.takeloan"]], "masternode (class in defichain.transactions.builder.modules)": [[87, "defichain.transactions.builder.modules.Masternode"]], "createmasternode() (defichain.transactions.builder.modules.masternode method)": [[87, "defichain.transactions.builder.modules.Masternode.createmasternode"]], "resignmasternode() (defichain.transactions.builder.modules.masternode method)": [[87, "defichain.transactions.builder.modules.Masternode.resignmasternode"]], "updatemasternode() (defichain.transactions.builder.modules.masternode method)": [[87, "defichain.transactions.builder.modules.Masternode.updatemasternode"]], "pool (class in defichain.transactions.builder.modules)": [[88, "defichain.transactions.builder.modules.Pool"]], "addpoolliquidity() (defichain.transactions.builder.modules.pool method)": [[88, "defichain.transactions.builder.modules.Pool.addpoolliquidity"]], "compositeswap() (defichain.transactions.builder.modules.pool method)": [[88, "defichain.transactions.builder.modules.Pool.compositeswap"]], "poolswap() (defichain.transactions.builder.modules.pool method)": [[88, "defichain.transactions.builder.modules.Pool.poolswap"]], "removepoolliquidity() (defichain.transactions.builder.modules.pool method)": [[88, "defichain.transactions.builder.modules.Pool.removepoolliquidity"]], "txbuilder (class in defichain.transactions.builder)": [[89, "defichain.transactions.builder.TxBuilder"]], "get_account() (defichain.transactions.builder.txbuilder method)": [[89, "defichain.transactions.builder.TxBuilder.get_account"]], "get_address() (defichain.transactions.builder.txbuilder method)": [[89, "defichain.transactions.builder.TxBuilder.get_address"]], "get_datasource() (defichain.transactions.builder.txbuilder method)": [[89, "defichain.transactions.builder.TxBuilder.get_dataSource"]], "get_feeperbyte() (defichain.transactions.builder.txbuilder method)": [[89, "defichain.transactions.builder.TxBuilder.get_feePerByte"]], "get_inputs_tx() (defichain.transactions.builder.txbuilder method)": [[89, "defichain.transactions.builder.TxBuilder.get_inputs_tx"]], "get_replaceable() (defichain.transactions.builder.txbuilder method)": [[89, "defichain.transactions.builder.TxBuilder.get_replaceable"]], "send_tx() (defichain.transactions.builder.txbuilder method)": [[89, "defichain.transactions.builder.TxBuilder.send_tx"]], "test_tx() (defichain.transactions.builder.txbuilder method)": [[89, "defichain.transactions.builder.TxBuilder.test_tx"]], "utxo (class in defichain.transactions.builder.modules)": [[90, "defichain.transactions.builder.modules.UTXO"]], "send() (defichain.transactions.builder.modules.utxo method)": [[90, "defichain.transactions.builder.modules.UTXO.send"]], "sendall() (defichain.transactions.builder.modules.utxo method)": [[90, "defichain.transactions.builder.modules.UTXO.sendall"]], "sendmany() (defichain.transactions.builder.modules.utxo method)": [[90, "defichain.transactions.builder.modules.UTXO.sendmany"]], "vault (class in defichain.transactions.builder.modules)": [[91, "defichain.transactions.builder.modules.Vault"]], "createvault() (defichain.transactions.builder.modules.vault method)": [[91, "defichain.transactions.builder.modules.Vault.createvault"]], "deposittovault() (defichain.transactions.builder.modules.vault method)": [[91, "defichain.transactions.builder.modules.Vault.deposittovault"]], "withdrawfromvault() (defichain.transactions.builder.modules.vault method)": [[91, "defichain.transactions.builder.modules.Vault.withdrawfromvault"]], "addresserror (class in defichain.exceptions.transactions)": [[92, "defichain.exceptions.transactions.AddressError"]], "defitxerror (class in defichain.exceptions.transactions)": [[92, "defichain.exceptions.transactions.DefiTxError"]], "deserializeerror (class in defichain.exceptions.transactions)": [[92, "defichain.exceptions.transactions.DeserializeError"]], "inputerror (class in defichain.exceptions.transactions)": [[92, "defichain.exceptions.transactions.InputError"]], "keyerror (class in defichain.exceptions.transactions)": [[92, "defichain.exceptions.transactions.KeyError"]], "notyetsupportederror (class in defichain.exceptions.transactions)": [[92, "defichain.exceptions.transactions.NotYetSupportedError"]], "rawtransactionerror (class in defichain.exceptions.transactions)": [[92, "defichain.exceptions.transactions.RawTransactionError"]], "tokenerror (class in defichain.exceptions.transactions)": [[92, "defichain.exceptions.transactions.TokenError"]], "txbuildererror (class in defichain.exceptions.transactions)": [[92, "defichain.exceptions.transactions.TxBuilderError"]], "verifyerror (class in defichain.exceptions.transactions)": [[92, "defichain.exceptions.transactions.VerifyError"]], "defichain.exceptions.transactions": [[92, "module-defichain.exceptions.transactions"]], "defichain.transactions.utils": [[93, "module-defichain.transactions.utils"]], "logger (class in defichain.logger)": [[94, "defichain.logger.Logger"]], "defichain.logger": [[94, "module-defichain.logger"]], "mnemonic (class in defichain.mnemonic)": [[95, "defichain.mnemonic.Mnemonic"]], "check() (defichain.mnemonic.mnemonic method)": [[95, "defichain.mnemonic.Mnemonic.check"]], "defichain.mnemonic": [[95, "module-defichain.mnemonic"]], "detect_language() (defichain.mnemonic.mnemonic class method)": [[95, "defichain.mnemonic.Mnemonic.detect_language"]], "generate() (defichain.mnemonic.mnemonic method)": [[95, "defichain.mnemonic.Mnemonic.generate"]], "list_languages() (defichain.mnemonic.mnemonic class method)": [[95, "defichain.mnemonic.Mnemonic.list_languages"]]}})