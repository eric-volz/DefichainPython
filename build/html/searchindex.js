Search.setIndex({"docnames": ["api/exceptions", "api/node/accounts", "api/node/blockchain", "api/node/control", "api/node/generating", "api/node/index", "api/node/loan", "api/node/masternodes", "api/node/mining", "api/node/network", "api/node/node", "api/node/oracles", "api/node/poolpair", "api/node/proposals", "api/node/rawMethodsOverview", "api/node/rawtransactions", "api/node/spv", "api/node/stats", "api/node/tokens", "api/node/util", "api/node/vault", "api/node/wallet", "api/node/zmq", "api/ocean/address", "api/ocean/blocks", "api/ocean/consortium", "api/ocean/fee", "api/ocean/governance", "api/ocean/index", "api/ocean/loan", "api/ocean/masternodes", "api/ocean/ocean", "api/ocean/oracles", "api/ocean/poolpair", "api/ocean/prices", "api/ocean/rawTx", "api/ocean/rpc", "api/ocean/stats", "api/ocean/tokens", "api/ocean/transactions", "guides/example/chainedTransactions", "guides/example/extractPrivateKeys", "guides/example/index", "guides/guides/basicUsageOfRawTransactions", "guides/guides/index", "guides/index", "index", "legal/community", "legal/licenseAndDisclaimer", "main/quickstart", "main/statusAndTasks", "sdk/hdwallet/account", "sdk/hdwallet/exceptions", "sdk/hdwallet/index", "sdk/hdwallet/utils", "sdk/hdwallet/wallet", "sdk/transactions/advanced/address/index", "sdk/transactions/advanced/address/p2pkh", "sdk/transactions/advanced/address/p2sh", "sdk/transactions/advanced/address/p2wpkh", "sdk/transactions/advanced/defitx/accounts", "sdk/transactions/advanced/defitx/governance", "sdk/transactions/advanced/defitx/index", "sdk/transactions/advanced/defitx/loans", "sdk/transactions/advanced/defitx/masternode", "sdk/transactions/advanced/defitx/pool", "sdk/transactions/advanced/defitx/vault", "sdk/transactions/advanced/index", "sdk/transactions/advanced/keys", "sdk/transactions/advanced/rawtransactions/fee", "sdk/transactions/advanced/rawtransactions/index", "sdk/transactions/advanced/rawtransactions/sign", "sdk/transactions/advanced/rawtransactions/tx", "sdk/transactions/advanced/rawtransactions/txinput", "sdk/transactions/advanced/rawtransactions/txoutput", "sdk/transactions/advanced/rawtransactions/witness", "sdk/transactions/advanced/remotedata/index", "sdk/transactions/advanced/remotedata/node", "sdk/transactions/advanced/remotedata/ocean", "sdk/transactions/advanced/utils", "sdk/transactions/builder/accounts", "sdk/transactions/builder/data", "sdk/transactions/builder/governance", "sdk/transactions/builder/index", "sdk/transactions/builder/loans", "sdk/transactions/builder/masternode", "sdk/transactions/builder/pool", "sdk/transactions/builder/txbuilder", "sdk/transactions/builder/utxo", "sdk/transactions/builder/vault", "sdk/transactions/exceptions", "sdk/transactions/index", "utils/logger", "utils/mnemonic"], "filenames": ["api/exceptions.rst", "api/node/accounts.rst", "api/node/blockchain.rst", "api/node/control.rst", "api/node/generating.rst", "api/node/index.rst", "api/node/loan.rst", "api/node/masternodes.rst", "api/node/mining.rst", "api/node/network.rst", "api/node/node.rst", "api/node/oracles.rst", "api/node/poolpair.rst", "api/node/proposals.rst", "api/node/rawMethodsOverview.rst", "api/node/rawtransactions.rst", "api/node/spv.rst", "api/node/stats.rst", "api/node/tokens.rst", "api/node/util.rst", "api/node/vault.rst", "api/node/wallet.rst", "api/node/zmq.rst", "api/ocean/address.rst", "api/ocean/blocks.rst", "api/ocean/consortium.rst", "api/ocean/fee.rst", "api/ocean/governance.rst", "api/ocean/index.rst", "api/ocean/loan.rst", "api/ocean/masternodes.rst", "api/ocean/ocean.rst", "api/ocean/oracles.rst", "api/ocean/poolpair.rst", "api/ocean/prices.rst", "api/ocean/rawTx.rst", "api/ocean/rpc.rst", "api/ocean/stats.rst", "api/ocean/tokens.rst", "api/ocean/transactions.rst", "guides/example/chainedTransactions.rst", "guides/example/extractPrivateKeys.rst", "guides/example/index.rst", "guides/guides/basicUsageOfRawTransactions.rst", "guides/guides/index.rst", "guides/index.rst", "index.rst", "legal/community.rst", "legal/licenseAndDisclaimer.rst", "main/quickstart.rst", "main/statusAndTasks.rst", "sdk/hdwallet/account.rst", "sdk/hdwallet/exceptions.rst", "sdk/hdwallet/index.rst", "sdk/hdwallet/utils.rst", "sdk/hdwallet/wallet.rst", "sdk/transactions/advanced/address/index.rst", "sdk/transactions/advanced/address/p2pkh.rst", "sdk/transactions/advanced/address/p2sh.rst", "sdk/transactions/advanced/address/p2wpkh.rst", "sdk/transactions/advanced/defitx/accounts.rst", "sdk/transactions/advanced/defitx/governance.rst", "sdk/transactions/advanced/defitx/index.rst", "sdk/transactions/advanced/defitx/loans.rst", "sdk/transactions/advanced/defitx/masternode.rst", "sdk/transactions/advanced/defitx/pool.rst", "sdk/transactions/advanced/defitx/vault.rst", "sdk/transactions/advanced/index.rst", "sdk/transactions/advanced/keys.rst", "sdk/transactions/advanced/rawtransactions/fee.rst", "sdk/transactions/advanced/rawtransactions/index.rst", "sdk/transactions/advanced/rawtransactions/sign.rst", "sdk/transactions/advanced/rawtransactions/tx.rst", "sdk/transactions/advanced/rawtransactions/txinput.rst", "sdk/transactions/advanced/rawtransactions/txoutput.rst", "sdk/transactions/advanced/rawtransactions/witness.rst", "sdk/transactions/advanced/remotedata/index.rst", "sdk/transactions/advanced/remotedata/node.rst", "sdk/transactions/advanced/remotedata/ocean.rst", "sdk/transactions/advanced/utils.rst", "sdk/transactions/builder/accounts.rst", "sdk/transactions/builder/data.rst", "sdk/transactions/builder/governance.rst", "sdk/transactions/builder/index.rst", "sdk/transactions/builder/loans.rst", "sdk/transactions/builder/masternode.rst", "sdk/transactions/builder/pool.rst", "sdk/transactions/builder/txbuilder.rst", "sdk/transactions/builder/utxo.rst", "sdk/transactions/builder/vault.rst", "sdk/transactions/exceptions.rst", "sdk/transactions/index.rst", "utils/logger.rst", "utils/mnemonic.rst"], "titles": ["HTTP Exceptions", "Accounts", "Blockchain", "Control", "Generating", "Node / RPC", "Loan", "Masternodes", "Mining", "Network", "Node", "Oracles", "Poolpair", "Proposals", "Raw Methods Overview", "Rawtransactions", "Spv", "Stats", "Tokens", "Util", "Vault", "Wallet", "Zmq", "Address", "Blocks", "Consortium", "Fee", "Governance", "Ocean", "Loan", "Masternodes", "Ocean", "Oracles", "Poolpairs", "Prices", "RawTx", "Rpc", "Stats", "Tokens", "Transactions", "Chain Transactions", "Extract Private Keys", "Examples", "Basic Usage Of Transactions Builder", "Guides", "Guides and Examples", "Installation", "Community", "License &amp; Disclaimer", "Quickstart", "Status and Tasks", "Account", "Wallet Exceptions", "HDWallet", "Utils", "Wallet", "Addresses", "P2PKH", "P2SH", "P2WPKH", "Accounts", "Governance", "DefiTx", "Loans", "Masternode", "Pool", "Vault", "Advanced", "Keys", "Fee", "Raw Transactions", "Sign", "Transaction", "Transactions Inputs", "Transactions Output", "Wittness", "Remote Data Source", "Remote Data Node", "Remote Data Ocean", "Utils", "Accounts", "Data", "Governance", "Transaction Builder", "Loans", "Masternode", "Pool", "TxBuilder", "UTXO", "Vault", "Transactions Exceptions", "Transactions", "Logger", "Mnemonic"], "terms": {"class": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 51, 52, 53, 55, 56, 57, 58, 59, 60, 61, 63, 64, 65, 66, 68, 72, 73, 74, 75, 77, 78, 79, 80, 81, 82, 84, 85, 86, 87, 88, 89, 90, 92, 93], "defichain": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 43, 46, 51, 52, 54, 55, 56, 57, 58, 59, 60, 61, 63, 64, 65, 66, 68, 69, 71, 72, 73, 74, 75, 77, 78, 79, 80, 81, 82, 84, 85, 86, 87, 88, 89, 90, 92, 93], "badmethod": 0, "msg": [0, 9, 90], "The": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 17, 18, 19, 20, 21, 28, 31, 40, 41, 43, 46, 47, 48, 49, 53, 56, 57, 58, 59, 61, 72, 80, 81, 82, 84, 85, 86, 87, 88, 89, 93], "call": [0, 2, 3, 4, 7, 9, 11, 12, 13, 15, 17, 18, 21, 36, 72, 73, 74, 75], "method": [0, 3, 5, 21, 28, 36, 46, 53, 72, 73, 74, 75, 80, 81, 82, 84, 85, 86, 87, 88, 89, 92], "i": [0, 1, 2, 3, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 18, 19, 20, 21, 28, 31, 40, 41, 43, 46, 47, 48, 49, 50, 53, 55, 56, 60, 72, 74, 77, 78, 79, 87, 92, 93], "exist": [0, 5, 6, 15, 21, 77, 78], "badrequest": 0, "server": [0, 3, 8, 9, 21], "cannot": [0, 7, 21, 40], "process": [0, 2, 9, 19, 21], "request": [0, 1, 7, 8, 9, 10, 11, 12, 13, 14, 19, 20, 21, 46], "due": [0, 2, 9, 21], "an": [0, 1, 2, 3, 5, 6, 7, 8, 9, 11, 12, 14, 15, 18, 19, 20, 21, 23, 31, 32, 36, 43, 46, 47, 48, 49, 50, 60, 74, 77, 78, 79, 84, 86, 87, 89], "appar": 0, "client": [0, 8], "error": [0, 2, 15, 19, 21, 43, 92], "forbidden": 0, "contain": [0, 1, 2, 3, 6, 7, 8, 9, 11, 12, 18, 19, 20, 21, 43, 63, 66, 77, 78, 84, 87, 89], "valid": [0, 2, 3, 6, 7, 8, 13, 14, 15, 18, 19, 20, 21, 27, 41, 46, 54, 56, 87, 93], "data": [0, 2, 3, 8, 9, 11, 14, 15, 18, 19, 20, 21, 23, 26, 28, 41, 49, 55, 67, 71, 82, 83, 86, 87], "wa": [0, 2, 8, 9, 18, 19, 21, 47, 49, 72, 73, 74, 75], "understood": 0, "refus": [0, 81], "action": [0, 2, 14, 48], "internalservererror": 0, "A": [0, 2, 3, 6, 8, 12, 15, 19, 21, 43, 48, 93], "gener": [0, 2, 3, 5, 7, 8, 14, 19, 21, 41, 49, 54, 57, 58, 59, 73, 93], "messag": [0, 9, 14, 19, 21, 22], "given": [0, 2, 7, 8, 9, 10, 11, 12, 18, 19, 20, 21, 27, 28, 29, 30, 33, 43, 56, 57, 58, 59, 71, 72, 73, 75, 77, 78, 79, 85, 87], "when": [0, 2, 3, 8, 9, 12, 15, 16, 21, 40, 41, 43, 53, 73], "unexpect": 0, "condit": [0, 48], "encount": [0, 19, 21], "more": [0, 2, 5, 15, 19, 21, 28, 49, 53], "specif": [0, 1, 2, 5, 7, 8, 9, 10, 11, 12, 15, 18, 20, 21, 25, 28, 65, 74, 86], "suitabl": 0, "notfound": 0, "resourc": [0, 28], "could": [0, 2, 3, 21, 41, 43], "found": [0, 2, 5, 8, 10, 15, 19, 28, 53], "mai": [0, 1, 2, 5, 7, 8, 11, 12, 15, 18, 20, 21], "avail": [0, 1, 2, 3, 6, 8, 9, 14, 15, 18, 20, 21], "futur": [0, 1, 2, 11], "serviceunavail": [0, 10], "handl": [0, 9], "unauthor": 0, "similar": [0, 2], "403": 0, "us": [0, 1, 2, 3, 5, 6, 7, 8, 9, 10, 11, 12, 15, 17, 18, 19, 21, 28, 31, 40, 41, 43, 46, 48, 49, 53, 55, 57, 58, 59, 63, 72, 73, 74, 75, 81, 87, 93], "authent": 0, "requir": [0, 1, 2, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 15, 17, 18, 19, 20, 21, 23, 24, 25, 27, 29, 30, 32, 33, 34, 35, 36, 38, 39, 41, 43, 55, 56, 57, 58, 59, 60, 61, 63, 64, 65, 66, 69, 71, 72, 73, 74, 75, 80, 81, 82, 84, 85, 86, 87, 88, 89, 93], "ha": [0, 2, 3, 9, 12, 15, 18, 19, 21, 40, 46, 50, 56, 71], "fail": [0, 2, 3, 12, 21], "yet": [0, 2, 15, 21, 43], "been": [0, 3, 15, 17, 19, 21, 40], "provid": [0, 2, 9, 12, 15, 18, 19, 21, 41, 43, 48, 72, 87, 93], "unprocessableent": 0, "well": [0, 2, 21, 46], "form": [0, 11, 15, 19, 20, 21], "unabl": 0, "follow": [0, 1, 2, 3, 8, 19, 40, 43, 46, 48, 50], "semant": [0, 55], "wrongparamet": 0, "If": [0, 1, 2, 3, 5, 6, 7, 8, 9, 10, 11, 12, 15, 18, 19, 20, 21, 28, 31, 41, 43, 46, 47, 72, 87, 92, 93], "expect": [0, 1, 2], "paremet": 0, "were": [0, 2, 14, 15, 21], "pass": [0, 2, 6, 8, 21, 43, 53, 87, 92], "node": [1, 2, 3, 4, 6, 7, 8, 9, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 41, 43, 53, 76, 81, 87, 92], "accounthistorycount": [1, 14], "owner": [1, 7, 12, 14, 18, 20, 23, 30, 32, 64, 85], "str": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 17, 18, 19, 20, 21, 23, 24, 25, 26, 27, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 51, 52, 54, 55, 56, 57, 58, 59, 60, 61, 63, 64, 65, 66, 68, 71, 72, 73, 74, 75, 77, 78, 80, 81, 82, 84, 85, 86, 87, 88, 89, 92, 93], "mine": [1, 2, 4, 5, 13, 14, 20, 21, 27], "no_reward": [1, 14], "bool": [1, 2, 3, 6, 7, 8, 9, 11, 12, 13, 14, 15, 18, 19, 20, 21, 23, 27, 33, 34, 38, 54, 55, 56, 72, 75, 77, 78, 87, 93], "none": [1, 2, 3, 5, 6, 7, 8, 9, 10, 11, 12, 13, 15, 18, 19, 20, 21, 23, 24, 27, 29, 30, 31, 32, 33, 34, 35, 38, 39, 41, 52, 54, 55, 64, 73, 77, 78, 81, 85, 87, 88], "token": [1, 2, 5, 6, 11, 12, 14, 20, 21, 23, 24, 25, 28, 29, 32, 33, 34, 37, 39, 40, 43, 60, 63, 65, 74, 80, 84, 86, 89, 92], "txtype": [1, 14, 20], "int": [1, 2, 3, 4, 6, 7, 8, 9, 10, 11, 12, 13, 15, 18, 19, 20, 21, 23, 24, 26, 27, 29, 30, 32, 33, 34, 37, 38, 39, 41, 54, 55, 60, 64, 65, 69, 72, 73, 74, 79, 80, 85, 86, 88, 93], "return": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 15, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 49, 54, 55, 56, 57, 58, 59, 69, 71, 72, 73, 74, 75, 77, 78, 79, 80, 81, 82, 84, 85, 86, 87, 88, 89, 93], "count": [1, 2, 8, 9, 14, 17, 21, 34, 37], "histori": [1, 17, 19, 20, 23, 29], "paramet": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 15, 17, 18, 19, 20, 21, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 38, 39, 43, 53, 54, 55, 56, 57, 58, 59, 60, 61, 63, 64, 65, 66, 69, 71, 72, 73, 74, 75, 77, 78, 79, 80, 81, 82, 84, 85, 86, 87, 88, 89, 92, 93], "option": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 18, 19, 20, 21, 23, 24, 26, 27, 29, 30, 31, 32, 33, 34, 35, 37, 38, 39, 55, 60, 64, 73, 74, 80, 81, 82, 84, 85, 86, 87, 88, 89, 92, 93], "singl": [1, 5, 9, 15, 20, 21], "id": [1, 2, 5, 6, 7, 8, 9, 11, 12, 13, 14, 15, 18, 20, 21, 23, 24, 25, 27, 29, 30, 32, 33, 34, 38, 39, 60, 63, 66, 73, 80, 84, 85, 89], "cscript": [1, 20], "address": [1, 2, 4, 6, 7, 9, 11, 12, 13, 14, 15, 18, 19, 20, 21, 22, 28, 29, 30, 32, 37, 40, 41, 46, 55, 57, 58, 59, 60, 63, 64, 65, 66, 67, 73, 74, 77, 78, 80, 81, 84, 85, 86, 87, 88, 89, 92], "reserv": [1, 20, 33], "word": [1, 20, 41, 43, 54, 55, 93], "list": [1, 2, 3, 5, 6, 7, 8, 9, 11, 12, 17, 20, 21, 23, 24, 28, 29, 30, 31, 32, 33, 34, 38, 39, 43, 46, 49, 72, 77, 78, 93], "all": [1, 2, 3, 5, 6, 7, 8, 9, 11, 13, 14, 15, 20, 21, 23, 24, 27, 28, 33, 43, 46, 48, 50, 53, 55, 65, 72, 77, 78, 86, 87, 88, 92, 93], "own": [1, 20, 41, 43, 46, 81, 82], "whole": [1, 20, 21], "db": [1, 3, 20], "default": [1, 2, 6, 7, 8, 9, 10, 12, 13, 15, 18, 20, 21, 41, 54, 55, 60, 64, 80, 85, 87, 92, 93], "filter": [1, 2, 20, 21], "out": [1, 2, 9, 15, 19, 21, 40, 48, 69, 84], "reward": [1, 2, 7, 12, 24, 33, 37, 64, 85], "transact": [1, 2, 5, 6, 7, 8, 9, 11, 12, 13, 14, 15, 18, 19, 20, 21, 23, 24, 26, 28, 35, 42, 44, 47, 56, 57, 58, 59, 60, 61, 63, 64, 65, 66, 67, 68, 69, 71, 75, 77, 78, 79, 80, 81, 82, 84, 85, 86, 87, 88, 89], "type": [1, 2, 9, 12, 13, 14, 15, 18, 19, 20, 21, 22, 23, 27, 33, 39, 41, 46, 53, 55, 56, 57, 58, 59, 72, 92, 93], "support": [1, 8, 9, 11, 15, 16, 20, 21, 43, 46, 50], "letter": [1, 20, 49], "from": [1, 2, 3, 5, 6, 7, 9, 10, 11, 12, 14, 15, 18, 20, 21, 28, 29, 31, 33, 40, 41, 43, 46, 48, 49, 54, 55, 57, 58, 59, 65, 66, 72, 73, 74, 75, 77, 78, 80, 84, 86, 87, 88, 89, 92, 93], "customtxtyp": [1, 20], "exampl": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 15, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 43, 49, 53, 72, 74, 92], "true": [1, 2, 3, 6, 7, 8, 9, 11, 12, 15, 18, 19, 20, 21, 27, 28, 40, 41, 54, 55, 56, 72, 77, 78, 93], "accounttoaccount": [1, 14, 43, 80], "_from": [1, 6, 12, 18, 20], "input": [1, 2, 6, 7, 8, 11, 12, 13, 15, 18, 19, 20, 21, 40, 41, 43, 70, 72, 75, 77, 78, 80, 81, 82, 84, 85, 86, 87, 88, 89, 92], "creat": [1, 5, 6, 7, 11, 12, 13, 15, 18, 19, 20, 21, 28, 31, 40, 43, 46, 49, 53, 56, 66, 72, 80, 81, 82, 84, 85, 86, 87, 88, 89, 92, 93], "submit": [1, 6, 7, 8, 11, 12, 15, 18, 20, 35, 40, 43, 81], "local": [1, 2, 6, 7, 8, 9, 11, 12, 15, 18, 20, 21], "network": [1, 2, 5, 6, 7, 8, 11, 12, 14, 15, 18, 20, 31, 35, 40, 41, 46, 49, 51, 55, 56, 57, 58, 59, 68, 72, 73, 74, 75, 81, 87], "transfer": [1, 5, 6, 12, 21, 63, 84], "specifi": [1, 2, 3, 4, 5, 7, 8, 9, 10, 11, 12, 15, 18, 19, 20, 21, 24, 43, 46, 53, 55, 56, 74, 80, 81, 84, 86, 87, 88], "specfi": 1, "first": [1, 2, 7, 11, 12, 20, 21, 40, 41, 43, 46, 47, 53, 55], "argument": [1, 3, 5, 7, 8, 9, 11, 12, 15, 18, 20, 21], "empti": [1, 2, 5, 7, 9, 11, 12, 18, 20, 21], "arrai": [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 13, 15, 17, 18, 19, 20, 21, 22, 36, 93], "utxo": [1, 2, 5, 7, 11, 12, 15, 18, 20, 21, 40, 46, 60, 73, 74, 80, 81, 83, 89], "spend": [1, 2, 5, 7, 11, 12, 18, 20, 21, 73, 80, 81, 82, 84, 85, 86, 88, 89, 93], "defi": [1, 2, 3, 5, 9, 10, 12, 15, 19, 21, 37, 41, 43, 46, 60, 61, 63, 64, 65, 66, 74], "sender": [1, 15, 21, 60, 88], "json": [1, 2, 3, 5, 6, 7, 8, 9, 11, 12, 13, 15, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 29, 30, 32, 33, 34, 35, 36, 37, 38, 39, 60, 72, 73, 74, 80, 81, 86, 88], "object": [1, 2, 3, 5, 6, 7, 8, 9, 10, 11, 12, 13, 15, 17, 18, 19, 20, 21, 22, 28, 31, 43, 46, 55, 56, 57, 58, 59, 60, 69, 72, 73, 74, 75, 87, 92], "amount": [1, 2, 3, 6, 7, 11, 12, 13, 14, 15, 18, 20, 21, 23, 27, 29, 32, 33, 34, 37, 46, 60, 63, 65, 66, 69, 80, 81, 84, 86, 88, 89], "hash": [1, 2, 4, 6, 7, 8, 11, 12, 13, 14, 15, 18, 20, 21, 23, 24, 29, 32, 33, 34, 39, 43, 55, 75], "string": [1, 2, 3, 5, 6, 7, 8, 9, 11, 12, 13, 15, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 29, 30, 32, 33, 34, 35, 36, 37, 38, 39, 54, 55, 57, 58, 59, 81, 84, 86, 87, 89, 93], "hex": [1, 2, 5, 6, 7, 8, 11, 12, 13, 14, 15, 18, 19, 20, 21, 23, 35, 39, 54, 55, 71, 72, 73, 74, 75, 77, 78, 81, 87], "encod": [1, 2, 6, 7, 8, 11, 12, 13, 15, 18, 19, 20, 21, 55, 93], "broadcast": [1, 2, 6, 7, 11, 12, 13, 15, 18, 20, 21, 43, 46, 87], "sender_address": 1, "address1": [1, 5], "1": [1, 2, 3, 4, 5, 7, 8, 9, 10, 12, 13, 15, 19, 20, 21, 27, 28, 40, 41, 49, 53, 55, 79, 80, 84, 86, 87, 88, 89], "0": [1, 2, 3, 5, 6, 7, 8, 9, 10, 12, 13, 15, 19, 20, 21, 24, 27, 29, 33, 38, 40, 41, 43, 46, 49, 53, 55, 60, 64, 72, 74, 79, 80, 85, 86, 87], "dfi": [1, 2, 4, 5, 6, 9, 11, 12, 13, 15, 18, 19, 20, 21, 34, 40, 43, 46, 49, 55, 60, 74, 80, 86, 88, 89], "address2": [1, 5], "2": [1, 2, 3, 5, 7, 19, 21, 28, 41, 47, 53, 55, 84], "btc": [1, 5, 9, 11, 12, 18, 40, 43, 46, 49, 80, 86], "3": [1, 2, 5, 15, 21, 28, 40, 41, 47, 53], "eth": [1, 5, 11, 49], "accounttoutxo": [1, 14, 80], "third": [1, 15, 40, 55], "100": [1, 11, 12, 18, 20, 21, 89], "executesmartcontract": [1, 14], "name": [1, 2, 3, 6, 8, 9, 10, 11, 12, 14, 17, 18, 21, 23, 25, 33, 38, 55], "send": [1, 4, 9, 14, 21, 35, 36, 41, 46, 74, 77, 78, 80, 81, 86, 88], "either": [1, 2, 7, 9, 15, 19, 21, 43], "fund": [1, 13, 21, 43, 46, 47], "execut": [1, 2, 5, 11, 21, 28, 40, 46, 49], "smart": [1, 2], "contract": [1, 2, 48], "dbtcdfiswap": 1, "1000": [1, 2, 13, 15, 20, 43], "futureswap": [1, 3, 14], "destin": [1, 14, 18, 20, 21, 66, 89], "receiv": [1, 2, 9, 13, 15, 20, 21], "result": [1, 2, 3, 5, 9, 12, 15, 18, 21, 28, 43], "dtoken": [1, 6, 14], "dusd": [1, 6, 11, 20, 33, 40, 84, 86], "suppli": [1, 18, 21, 37, 43], "tsla": [1, 6, 11, 20, 86], "getaccount": [1, 14], "start": [1, 2, 7, 9, 11, 12, 14, 18, 20, 21, 34, 55, 60], "including_start": [1, 7, 11, 12, 14, 18, 20], "limit": [1, 7, 8, 9, 11, 12, 14, 18, 20, 21, 38, 48, 72], "indexed_amount": [1, 14], "fals": [1, 2, 3, 7, 8, 9, 11, 12, 13, 15, 18, 19, 20, 21, 27, 55], "inform": [1, 2, 3, 5, 6, 7, 8, 9, 11, 12, 13, 15, 18, 19, 20, 21, 22, 25, 27, 28, 29, 30, 38, 46, 49, 53, 72, 73, 74, 77, 78, 87], "about": [1, 2, 3, 5, 6, 7, 9, 11, 12, 13, 15, 18, 19, 20, 21, 22, 27, 28, 29, 30, 38, 43, 46, 50, 53, 72, 73, 74, 77, 78], "base58": [1, 15], "bech32": [1, 15, 19, 21, 23, 41, 49, 53, 55], "kei": [1, 2, 3, 5, 7, 8, 9, 11, 12, 14, 15, 18, 19, 20, 21, 29, 32, 33, 34, 40, 42, 43, 46, 51, 55, 56, 57, 58, 59, 60, 65, 67, 71, 72, 87], "iter": [1, 4, 7, 11, 12, 20], "lexicograph": [1, 7, 11, 12, 20], "order": [1, 3, 7, 11, 12, 20, 23, 24, 39, 72], "typic": [1, 7, 11, 12, 20, 21], "": [1, 2, 6, 7, 8, 9, 11, 12, 15, 18, 20, 21, 40, 72, 93], "set": [1, 2, 3, 6, 7, 8, 9, 10, 11, 12, 13, 15, 18, 20, 21, 23, 27, 28, 29, 30, 33, 38, 43, 93], "last": [1, 2, 7, 8, 9, 11, 12, 17, 20, 21, 53, 55], "tokenid": [1, 12, 21, 23, 25, 29, 33, 39, 43, 60, 74, 80], "previou": [1, 2, 7, 8, 11, 12, 15, 20, 21, 27, 28, 73], "includ": [1, 2, 3, 7, 8, 9, 11, 12, 20, 21, 40, 48, 53, 74, 81, 82], "posit": [1, 7, 11, 12, 15, 20, 21], "maximum": [1, 2, 7, 8, 11, 12, 20, 21, 28, 35, 65, 77, 78, 86, 87], "number": [1, 2, 3, 5, 7, 8, 9, 11, 12, 15, 17, 18, 19, 20, 21, 27, 29, 32, 34, 41, 43, 55, 73, 79, 93], "format": [1, 2, 5, 6, 11, 12, 14, 18, 20, 21, 23, 28, 43, 53, 55, 66, 72, 73, 74], "output": [1, 2, 5, 8, 14, 15, 19, 21, 28, 40, 43, 60, 70, 72, 73, 87, 92], "obj": [1, 12, 14], "mxxa2sqmetjfbxcnbnbuzesbctn1jshxst": [1, 6], "getaccounthistori": [1, 14, 23], "blockheight": [1, 2, 7, 14], "txn": [1, 14, 23], "block": [1, 2, 4, 6, 7, 8, 9, 10, 11, 12, 15, 18, 19, 20, 21, 23, 26, 28, 29, 31, 32, 33, 34, 37, 39, 40, 49, 73], "height": [1, 2, 6, 7, 8, 9, 10, 14, 18, 20, 21, 23, 24, 29, 30, 32, 33, 34, 38, 39, 49], "search": [1, 5, 18, 28], "103": 1, "getburninfo": [1, 14], "burn": [1, 18, 25, 37], "burnt": 1, "coin": [1, 5, 12, 21, 40, 41, 84], "full": [1, 8, 9, 11, 21, 41], "acindex": 1, "correct": [1, 28, 56, 72], "feeburn": [1, 37], "valu": [1, 2, 3, 5, 6, 7, 8, 11, 12, 14, 15, 19, 20, 21, 23, 28, 37, 39, 43, 60, 65, 73, 74, 77, 78, 92, 93], "n": [1, 2, 5, 6, 7, 8, 9, 11, 13, 14, 15, 18, 19, 20, 21, 22, 23, 27, 39, 41], "nnnnnnnn": [1, 2, 11, 20], "fee": [1, 2, 7, 8, 9, 15, 19, 20, 21, 27, 28, 33, 35, 37, 43, 70, 77, 78, 87, 89], "emissionburn": [1, 37], "non": [1, 2, 8, 9, 15, 18, 21, 55], "coinbas": [1, 2, 8, 21, 39, 73, 74], "getpendingdusdswap": [1, 14], "get": [1, 3, 5, 11, 17, 18, 20, 21, 23, 24, 25, 26, 27, 28, 29, 30, 32, 33, 34, 35, 37, 38, 39, 40, 41, 54, 55, 56, 57, 58, 59, 92], "pend": [1, 2, 8, 21], "swap": [1, 3, 11, 12, 33, 49, 65, 86], "getpendingfutureswap": [1, 14], "tokensymbol": [1, 25], "symbol": [1, 6, 12, 14, 18, 20, 21, 23, 32, 33, 34, 38, 55, 60, 66], "gettokenbal": [1, 14], "symbol_lookup": [1, 14], "balanc": [1, 2, 11, 21, 23, 33, 46], "belong": [1, 5, 7, 18, 23, 87], "wallet": [1, 5, 6, 7, 10, 11, 12, 13, 14, 15, 18, 20, 40, 41, 46, 87], "listaccounthistori": [1, 14, 23], "maxblockheight": [1, 14, 20], "depth": [1, 7, 14, 20], "downto": [1, 20], "genesi": [1, 2, 7, 20], "chaintip": 1, "record": [1, 20, 27, 32, 33, 34], "unlimit": 1, "160": [1, 55, 93], "10": [1, 3, 6, 12, 18, 20, 21, 23, 26, 33, 41, 43, 53, 64, 85], "listaccount": [1, 14], "verbos": [1, 2, 7, 12, 14, 15, 18, 20], "is_mine_onli": [1, 12, 14], "chain": [1, 2, 8, 14, 15, 18, 21, 27, 42, 55], "flag": [1, 7, 8, 12, 14, 20, 21, 43], "otherwis": [1, 7, 9, 12, 15, 20, 21, 27, 48], "ar": [1, 2, 3, 4, 5, 7, 8, 9, 10, 12, 14, 15, 19, 20, 21, 28, 40, 41, 43, 46, 49, 53, 55, 65, 72, 73, 86, 87, 92, 93], "listburnhistori": [1, 14], "down": [1, 20], "listcommunitybal": [1, 14], "commun": [1, 10, 13, 31, 37, 50], "balance_typ": 1, "listpendingdusdswap": [1, 14], "to_dusd": 1, "have": [1, 2, 7, 8, 9, 15, 19, 21, 28, 40, 43, 46, 47, 72, 87], "field": [1, 2, 9, 13, 15, 21], "listpendingfutureswap": [1, 14], "sendtokenstoaddress": [1, 14], "selectionmod": [1, 14], "pie": 1, "your": [1, 5, 7, 10, 18, 21, 28, 41, 43, 46, 47, 53, 80, 81, 82], "pick": 1, "manuali": 1, "autoselect": 1, "param": [1, 27, 36], "thi": [1, 2, 3, 5, 6, 7, 8, 9, 10, 13, 14, 15, 17, 18, 19, 21, 28, 31, 40, 41, 43, 46, 47, 48, 50, 53, 72, 73, 74, 75, 80, 81, 82, 84, 85, 86, 87, 88, 89, 92, 93], "indic": [1, 2, 3, 8, 21], "mode": [1, 2, 3, 8, 14, 15, 19, 21], "onc": [1, 7, 9, 15, 21], "forward": [1, 8], "select": [1, 2, 6, 8, 12, 15, 17, 20, 21], "without": [1, 3, 15, 19, 21, 41, 46, 48], "sort": [1, 23, 28, 29, 30, 32, 33, 34], "just": [1, 9, 21, 46, 49, 53, 87, 88], "crumb": 1, "ascend": 1, "sum": [1, 2, 21], "It": [1, 2, 5, 8, 19, 21, 40, 41, 43, 46], "mean": [1, 2, 3, 6, 7, 9, 12, 20, 21, 40], "we": [1, 2, 9, 21], "minim": 1, "neccessari": 1, "descend": [1, 2, 21], "maxim": 1, "srcaddress1": 1, "srcaddress2": 1, "dstaddress1": 1, "5": [1, 6, 9, 12, 17, 40, 53, 64, 85], "sendutxosfrom": [1, 14], "chang": [1, 2, 6, 8, 14, 15, 21, 31, 65, 85, 86, 88], "from_address": [1, 56], "to_address": 1, "utxostoaccount": [1, 14, 40, 43, 80], "second": [1, 2, 3, 8, 9, 15, 18, 21, 40, 47, 55], "withdrawfutureswap": [1, 14], "withdraw": [1, 20, 66, 89], "back": [1, 20, 21, 84], "clearmempool": [2, 14], "clear": [2, 9, 21], "memori": [2, 3, 21], "pool": [2, 12, 14, 21, 33, 40, 43, 46, 49, 62, 83], "remov": [2, 3, 7, 9, 11, 12, 21, 65, 86], "getbestblockhash": [2, 14], "best": [2, 21, 33], "tip": [2, 8, 21], "most": [2, 5, 15, 21, 28, 53], "work": [2, 8, 15, 21, 28, 43, 73], "fulli": [2, 15, 18], "getblock": [2, 14], "blockhash": [2, 14, 15, 18, 21], "serial": [2, 15, 18, 21, 43, 87], "each": [2, 8, 9, 12, 15, 21, 40, 43, 46, 88], "same": [2, 10, 15, 21, 40, 72], "confirm": [2, 7, 15, 18, 19, 21, 26], "numer": [2, 3, 5, 6, 7, 8, 9, 11, 15, 17, 18, 19, 21, 22], "main": [2, 5, 8, 10, 21, 28, 31, 53, 87], "size": [2, 8, 15, 17, 19, 21, 23, 24, 27, 29, 30, 32, 33, 34, 38, 39, 43, 69, 81, 93], "strippeds": 2, "exclud": [2, 3, 21, 43], "wit": [2, 8, 15, 18, 19, 21, 34, 43, 55], "weight": [2, 8, 15, 24, 39], "defin": [2, 6, 8, 19, 53, 93], "bip": [2, 8, 9, 15, 19, 21], "141": [2, 19], "index": [2, 8, 9, 14, 15, 20, 21, 28, 29, 40, 52, 53, 55], "version": [2, 3, 8, 9, 15, 19, 21, 24, 31, 37, 39, 40, 43], "versionhex": 2, "00000000": [2, 20], "hexadecim": [2, 8, 19, 72, 73, 74, 81, 82], "merkleroot": [2, 24], "xxxx": [2, 8, 9, 21], "merkl": 2, "root": [2, 55], "nonutxo": 2, "tx": [2, 6, 7, 8, 12, 15, 18, 21, 30, 33, 38, 40, 46, 69, 75, 87], "transactionid": [2, 21], "time": [2, 3, 8, 9, 10, 13, 15, 17, 21, 23, 24, 29, 32, 33, 34, 39, 40, 64, 85], "ttt": [2, 3, 8, 9, 15, 21], "sinc": [2, 8, 9, 15, 21, 50], "epoch": [2, 8, 9, 15, 21], "jan": [2, 8, 9, 15, 21], "1970": [2, 8, 9, 15, 21], "gmt": [2, 8, 9, 15, 21], "mediantim": [2, 23, 24, 29, 32, 33, 34, 39], "median": 2, "nonc": [2, 8], "bit": [2, 8, 93], "1d00ffff": 2, "difficulti": [2, 8, 24, 37], "x": [2, 9, 15, 19, 21, 46], "xxx": [2, 3, 8, 9, 15, 21], "chainwork": 2, "produc": [2, 15], "up": [2, 3, 12, 15, 21, 43], "ntx": 2, "previousblockhash": [2, 8], "nextblockhash": 2, "next": [2, 8, 11, 15, 21, 23, 24, 27, 29, 30, 32, 33, 34, 38, 39, 40, 53, 55, 92], "getrawtransact": [2, 14, 15], "rpc": [2, 3, 4, 9, 14, 17, 21, 28, 43, 49], "differ": [2, 8, 15, 21, 41, 43, 53, 72, 88], "ffa579106ef8d396223c616b9a77b8dab22656648b55965fc9e541e864f0f9fd": 2, "getblockchaininfo": [2, 14], "variou": [2, 9, 21, 53], "state": [2, 3, 9, 13, 14, 20, 21, 29, 30], "info": [2, 3, 8, 9, 21, 37], "regard": [2, 9], "current": [2, 3, 6, 7, 8, 9, 13, 15, 16, 21, 23, 50], "bip70": [2, 8], "test": [2, 8, 10, 12, 15, 18, 21, 35, 77, 78, 87], "regtest": [2, 8, 53], "xxxxxx": [2, 3, 21], "header": [2, 8, 9], "bestblockhash": 2, "verificationprogress": 2, "estim": [2, 8, 12, 15, 19, 20, 21, 26, 33], "verif": [2, 15, 21], "progress": [2, 21, 46, 50], "initialblockdownload": 2, "debug": [2, 3], "whether": [2, 9, 15, 18, 19, 21, 48], "initi": [2, 28, 43, 92], "download": [2, 46], "total": [2, 3, 8, 9, 18, 20, 21, 33, 34, 37, 41, 43, 93], "activ": [2, 3, 6, 7, 9, 12, 15, 21, 22, 23, 34], "size_on_disk": 2, "undo": 2, "file": [2, 3, 19, 21, 48], "disk": [2, 3], "prune": [2, 3, 21], "xx": [2, 8, 21], "boolean": [2, 8, 9, 15, 18, 19, 21, 27], "subject": [2, 48], "pruneheight": 2, "lowest": 2, "complet": [2, 3, 13, 15, 21, 27], "store": [2, 21, 41, 55, 65, 92], "onli": [2, 3, 5, 7, 8, 9, 11, 12, 15, 18, 19, 20, 21, 28, 31, 40, 41, 43, 49, 53, 72, 73, 81, 92], "present": [2, 8, 15, 18, 21], "enabl": [2, 9, 15, 18, 21, 46, 77, 78], "automatic_prun": 2, "automat": [2, 5, 9, 12, 21, 87], "prune_target_s": 2, "target": [2, 8, 9, 15, 19, 20, 21], "softfork": [2, 8], "statu": [2, 3, 12, 13, 14, 15, 27, 33, 46], "one": [2, 5, 7, 8, 9, 12, 13, 15, 19, 21, 28, 33, 40, 41, 43, 49, 53, 56, 72, 80, 87, 88], "buri": 2, "bip9": 2, "locked_in": 2, "28": 2, "signal": 2, "starttim": 2, "minimum": [2, 6, 8, 9, 21], "past": [2, 21], "which": [2, 5, 6, 7, 8, 9, 10, 12, 13, 14, 15, 18, 19, 21, 28, 31, 41, 43, 46, 53, 55, 65, 73, 74, 80, 81, 86, 87, 88, 93], "gain": 2, "its": [2, 3, 15, 21, 93], "timeout": [2, 14, 21], "deploy": [2, 8], "consid": [2, 8, 21], "lock": [2, 3, 10, 15, 18, 21, 37, 64, 85], "appli": [2, 21], "statist": [2, 3, 23], "period": [2, 7, 64, 85], "length": [2, 9, 15, 54, 93], "threshold": [2, 19, 21], "featur": [2, 8, 21, 40], "elaps": [2, 10, 21], "begin": [2, 15, 19, 21], "possibl": [2, 5, 19, 21, 33, 41, 46, 53, 72, 93], "enough": [2, 15, 19, 21], "left": [2, 5, 9, 21, 28], "rule": [2, 8], "enforc": [2, 8, 21], "mempool": [2, 3, 8, 9, 15, 18, 21, 35], "warn": [2, 8, 9, 21], "ani": [2, 7, 8, 9, 12, 13, 15, 18, 19, 20, 21, 41, 46, 48, 55, 56, 57, 58, 59, 68, 72, 73, 74, 75], "getblockcount": [2, 3, 5, 10, 14, 17, 36, 49], "getblockfilt": [2, 14], "filtertyp": [2, 14], "basic": [2, 5, 28, 44], "retriev": [2, 21, 46, 49], "157": 2, "content": [2, 8, 13], "particular": [2, 48], "getblockhash": [2, 14], "getblockhead": [2, 14], "blockhead": 2, "0000": 2, "1f3": 2, "getblockstat": [2, 14], "hash_or_height": [2, 14], "stat": [2, 3, 5, 6, 14, 23, 25, 28], "comput": [2, 41, 43], "per": [2, 6, 8, 9, 19, 21, 32, 33, 34, 69, 87], "window": [2, 28], "satoshi": [2, 8, 9, 21, 87], "won": 2, "t": [2, 8, 9, 21, 41, 43], "some": [2, 3, 21, 43], "plot": 2, "see": [2, 8, 9, 15, 19, 21, 50], "below": [2, 5, 21, 28, 53], "avgfe": 2, "xxxxx": [2, 3, 8, 9, 21], "averag": [2, 17], "avgfeer": 2, "feerat": [2, 14, 15, 19, 21], "virtual": [2, 15, 19], "byte": [2, 3, 8, 9, 17, 57, 58, 59, 69, 71, 81, 87, 93], "avgtxsiz": 2, "check": [2, 7, 15, 43, 49, 54, 93], "potenti": [2, 9, 19, 21], "reorg": [2, 21], "feerate_percentil": 2, "10th": 2, "25th": 2, "50th": 2, "75th": 2, "90th": 2, "percentil": 2, "unit": [2, 6], "10th_percentile_feer": 2, "25th_percentile_feer": 2, "50th_percentile_feer": 2, "75th_percentile_feer": 2, "90th_percentile_feer": 2, "ins": 2, "maxfe": 2, "maxfeer": [2, 14, 15, 35, 77, 78, 87], "maxtxsiz": 2, "medianfe": 2, "truncat": 2, "mediantxs": 2, "minfe": 2, "minfeer": 2, "mintxsiz": 2, "subsidi": [2, 8], "swtotal_s": 2, "segwit": [2, 8, 9, 15, 19, 21], "swtotal_weight": 2, "divid": 2, "scale": 2, "factor": [2, 6, 14, 29], "4": [2, 12, 15, 33, 49, 53], "swtx": 2, "total_out": 2, "thu": [2, 3, 21], "ie": [2, 8], "totalfe": [2, 21], "total_s": 2, "total_weight": 2, "utxo_increas": 2, "increas": [2, 21, 43, 53, 55], "decreas": 2, "unspent": [2, 15, 21, 23, 40, 77, 78], "utxo_size_inc": 2, "discount": [2, 19], "op_return": 2, "getchaintip": [2, 14], "known": [2, 9, 11, 15, 18, 21], "tree": 2, "orphan": [2, 21], "branch": 2, "abaut": 2, "know": [2, 21, 40, 41, 43, 46, 50], "branchlen": 2, "zero": [2, 8, 9, 11, 15, 21, 74], "connect": [2, 5, 9, 10, 28, 31, 40, 43, 46, 48, 49, 81, 87], "fork": [2, 21], "invalid": [2, 8, 21, 54], "least": [2, 19, 21], "Not": [2, 72], "thei": [2, 21, 40], "never": [2, 21], "part": [2, 21, 32], "getchaintxstat": [2, 14], "nblock": [2, 4, 8, 14], "86400": [2, 9], "rate": [2, 6, 8, 9, 15, 19, 21, 35, 77, 78, 87], "end": [2, 3, 15, 19, 21, 34], "timestamp": [2, 8, 9, 11, 14, 17, 21], "final": [2, 8, 14, 15, 18, 38], "unix": [2, 9, 21], "txcount": [2, 21, 23], "point": [2, 3, 13, 21, 28, 40, 49], "window_final_block_hash": 2, "window_final_block_height": 2, "window_block_count": 2, "window_tx_count": 2, "window_interv": 2, "txrate": 2, "getdifficulti": [2, 14], "float": [2, 5, 6, 8, 11, 12, 13, 15, 18, 20, 21, 23, 24, 26, 33, 35, 37, 38, 65, 69, 77, 78, 79, 80, 86, 87, 88], "proof": [2, 14], "multipl": [2, 5, 12, 15, 21, 40, 88, 93], "nnn": [2, 8], "getgov": [2, 14], "govern": [2, 28, 62, 83], "variabl": 2, "attribut": [2, 21], "icx_takerfee_per_btc": 2, "lp_daily_loan_token_reward": 2, "lp_loan_token_split": 2, "lp_daily_dfi_reward": 2, "loan_liquidation_penalti": 2, "lp_split": 2, "oracle_block_interv": 2, "oracle_devi": 2, "getmempoolancestor": [2, 14], "txid": [2, 5, 8, 13, 14, 15, 18, 21, 23, 24, 27, 32, 33, 35, 39, 40, 43, 46, 61, 64, 73, 77, 78, 82, 87], "ancestor": [2, 21], "must": [2, 7, 8, 9, 15, 18, 19, 21, 53, 87, 93], "vsize": [2, 15, 24, 39], "actual": [2, 5, 6, 8, 21, 28], "deprec": [2, 8, 21], "defid": [2, 21], "deprecatedrpc": 2, "v0": [2, 31], "20": [2, 11, 33], "modifiedfe": 2, "delta": 2, "prioriti": [2, 8], "enter": [2, 10, 15, 21], "descendantcount": 2, "descendants": 2, "descendantfe": 2, "modifi": [2, 8, 15, 48], "abov": [2, 3, 19, 21, 48], "ancestorcount": 2, "ancestors": 2, "ancestorfe": 2, "wtxid": 2, "base": [2, 6, 8, 15, 19, 21, 27], "depend": [2, 8, 15, 20, 21, 40], "unconfirm": [2, 21], "parent": 2, "spentbi": 2, "child": [2, 19], "bip125": [2, 15, 21], "replac": [2, 9, 14, 15, 21, 73, 87], "getmempooldescend": [2, 14], "getmempoolentri": [2, 14], "getmempoolinfo": [2, 14], "detail": [2, 3, 18, 21], "load": [2, 10, 21], "becaus": [2, 21, 46], "usag": [2, 3, 44], "maxmempool": 2, "mempoolminfe": 2, "kb": [2, 9, 15, 19, 21], "accept": [2, 8, 9, 12, 15, 21, 35, 65, 86, 87], "minrelaytxfe": 2, "relai": [2, 9, 21], "getrawmempool": [2, 14], "hint": [2, 15, 21], "fetch": [2, 55], "gettxout": [2, 14], "include_mempool": [2, 14], "vout": [2, 5, 14, 15, 21, 23, 39, 43, 73, 77, 78], "note": [2, 8, 9, 15, 21], "spent": [2, 15, 21, 40], "appear": [2, 9, 15, 21], "detatil": 2, "unsep": 2, "bestblock": 2, "scriptpubkei": [2, 14, 15, 19, 21, 77, 78], "asm": [2, 15], "code": [2, 21, 49, 55], "reqsig": [2, 15], "signatur": [2, 14, 15, 19, 21, 43, 71, 72, 73, 75], "pubkeyhash": [2, 15, 21], "eg": [2, 6, 15, 21], "gettxoutproof": [2, 14, 21], "By": [2, 15, 21, 46, 48, 87], "function": [2, 5, 15, 21, 28, 43, 46], "sometim": 2, "To": [2, 7, 8, 9, 40, 43, 66], "make": [2, 5, 19, 21, 46, 73], "alwai": [2, 6, 15, 21, 40, 74, 87], "you": [2, 5, 7, 10, 12, 15, 21, 28, 31, 40, 41, 43, 46, 47, 48, 49, 50, 53, 55, 72, 74, 81, 89, 93], "need": [2, 7, 8, 10, 12, 15, 16, 19, 20, 21, 40, 43, 49, 77, 78], "maintain": 2, "txindex": [2, 15, 18], "command": [2, 3, 9, 14, 17, 21, 49], "line": [2, 21], "manual": [2, 15, 87], "look": [2, 5, 15, 18], "gettxoutsetinfo": [2, 14], "take": [2, 5, 6, 20, 21, 28, 40, 63, 65, 84, 86], "txout": [2, 21, 23], "bogos": 2, "meaningless": 2, "metric": 2, "hash_serialized_2": 2, "disk_siz": 2, "chainstat": 2, "total_amount": 2, "isappliedcustomtx": [2, 14], "custom": [2, 18, 21], "affect": [2, 21], "listgov": [2, 14], "prefix": [2, 14, 55], "One": [2, 7, 12, 18, 21], "gov": 2, "attr": 2, "live": 2, "view": [2, 46, 49], "other": [2, 3, 5, 9, 21, 40, 41, 46, 47, 48, 53, 80], "treat": [2, 21], "assum": [2, 8], "explicitli": [2, 8, 21], "listsmartcontract": [2, 14], "xxxxxxxx": [2, 8, 9], "preciousblock": [2, 14], "befor": [2, 4, 8, 10, 15, 21, 43], "later": 2, "can": [2, 5, 6, 7, 9, 10, 12, 15, 18, 20, 21, 28, 31, 40, 41, 43, 46, 49, 50, 53, 55, 72, 81, 87, 92, 93], "overrid": [2, 8, 21], "effect": [2, 6, 21], "earlier": 2, "retain": 2, "across": 2, "restart": [2, 41], "mark": [2, 15, 21, 22], "preciou": 2, "pruneblockchain": [2, 14], "discret": 2, "whose": [2, 15, 19], "hour": [2, 21], "older": 2, "than": [2, 3, 6, 12, 15, 18, 21], "savemempool": [2, 14], "dump": [2, 21, 55], "until": [2, 6, 9, 10, 15, 21, 93], "scantxoutset": [2, 14], "scanobject": [2, 14], "experiment": 2, "releas": [2, 49], "scan": [2, 21, 93], "entri": [2, 12, 72], "match": [2, 5, 21, 56, 87], "certain": [2, 8], "descriptor": [2, 14, 15, 19, 21], "addr": [2, 9], "correspond": [2, 15, 19, 21, 43, 72, 73, 74], "doe": [2, 21, 41], "p2pk": 2, "raw": [2, 5, 11, 15, 19, 21, 35, 67, 72, 73, 74, 77, 78], "script": [2, 15, 19, 21, 23, 39, 40, 41, 43, 56, 57, 58, 59, 74, 92], "equal": [2, 15, 19, 21], "combo": 2, "pubkei": [2, 14, 15, 19, 21], "p2pkh": [2, 7, 19, 21, 41, 43, 55, 56, 73], "p2wpkh": [2, 7, 21, 41, 43, 55, 56, 73], "p2sh": [2, 14, 15, 19, 21, 41, 43, 55, 56, 73], "pkh": [2, 19], "sh": [2, 19], "multi": [2, 19, 72], "multisig": [2, 15, 19, 21], "In": [2, 3, 19, 21, 43, 50], "refer": [2, 19], "fix": [2, 11, 19], "public": [2, 15, 19, 21, 43, 46, 55, 56, 57, 58, 59], "notat": [2, 19], "xpub": [2, 19], "xprv": [2, 19], "path": [2, 3, 10, 12, 14, 15, 19, 21, 33, 49, 55], "element": [2, 19, 28], "separ": [2, 19, 41, 72, 84, 86, 89], "unharden": 2, "h": [2, 19], "harden": [2, 19, 55], "latter": 2, "case": [2, 15, 21, 40, 43], "rang": [2, 8, 14, 15, 19, 21, 41, 53], "For": [2, 5, 8, 15, 19, 21, 28, 43, 49, 72, 74], "document": [2, 19, 48], "doc": [2, 19], "md": [2, 19], "abort": 2, "success": [2, 21], "report": [2, 9, 21], "everi": [2, 46, 72, 74], "metadata": [2, 6, 12, 18, 21], "desc": [2, 14, 15, 19, 21], "hd": [2, 15, 21, 55], "explor": [2, 15, 41], "special": [2, 3, 14, 46, 53], "setgov": [2, 14], "exact": 2, "8": [2, 6, 9, 12, 18, 20, 53], "setgovheight": [2, 14], "3000000": 2, "unsetgov": [2, 14], "unset": [2, 15, 19, 21], "verifychain": [2, 14], "checklevel": [2, 14], "6": [2, 9, 19, 21, 53], "verifi": [2, 19, 43, 56, 72, 75], "databas": [2, 11, 20], "how": [2, 4, 9, 19, 21, 28, 40, 41, 49, 53, 74], "thorough": 2, "verifytxoutproof": [2, 14], "commit": 2, "throw": [2, 8], "our": [2, 21], "getmemoryinfo": [3, 14], "determin": [3, 21, 40], "what": [3, 15, 21, 41, 43], "kind": [3, 41, 48, 81], "daemon": 3, "mallocinfo": 3, "xml": 3, "describ": [3, 43], "low": 3, "level": [3, 92], "heap": 3, "compil": 3, "glibc": 3, "malloc": 3, "manag": 3, "free": [3, 43, 48], "arena": 3, "xxxxxxx": [3, 21], "succeed": 3, "smaller": 3, "page": [3, 5, 28, 32, 33, 34, 46, 50, 53], "chunks_us": 3, "alloc": 3, "chunk": 3, "chunks_fre": 3, "unus": [3, 21], "getrpcinfo": [3, 14], "active_command": 3, "durat": [3, 21], "run": [3, 19, 41], "microsecond": 3, "logpath": 3, "log": [3, 5, 14, 28, 92], "help": [3, 5, 14], "optin": [3, 36], "text": [3, 15, 21], "configur": [3, 21], "categori": [3, 21], "being": [3, 21], "add": [3, 5, 8, 9, 12, 15, 21, 86], "evalu": 3, "item": [3, 28], "both": 3, "accountchang": 3, "addrman": 3, "anchor": [3, 7, 37], "bench": 3, "cmpctblock": 3, "coindb": 3, "estimatefe": 3, "http": [3, 8, 10, 31, 41, 46, 49], "leveldb": 3, "libev": 3, "loan": [3, 5, 14, 20, 28, 37, 40, 62, 83], "mempoolrej": 3, "net": [3, 37], "oracl": [3, 5, 14, 28, 34], "proxi": [3, 9], "rand": 3, "reindex": 3, "rpccach": 3, "selectcoin": 3, "spv": [3, 5, 9, 14], "stake": [3, 7], "tokensplit": 3, "tor": 3, "zmq": [3, 5, 14], "addit": [3, 18, 21, 80, 81, 82, 84, 85, 86, 88, 89], "repres": [3, 15, 19, 21, 28], "even": 3, "ignor": [3, 8, 21], "them": [3, 21, 40, 43], "include_categori": [3, 14], "exclude_categori": [3, 14], "where": [3, 10, 15, 19, 21, 31, 50, 55, 60, 65, 66, 86, 89, 92], "inact": 3, "stop": [3, 14, 21], "uptim": [3, 14], "generatetoaddress": [4, 14], "maxtri": [4, 14], "immedi": [4, 9], "mani": [4, 21, 28, 41, 74], "newli": [4, 49], "try": [4, 9, 40, 41], "11": 4, "myaddress": [4, 21], "control": [5, 14, 22, 28, 41, 53], "import": [5, 10, 21, 28, 31, 40, 41, 43, 46, 49, 54, 55, 56, 87, 92, 93], "care": [5, 28, 41, 43], "perform": [5, 21, 28], "made": [5, 13, 21, 28], "simplest": [5, 28, 53], "setup": [5, 28, 40, 53], "seen": [5, 7, 9, 28, 53], "quickstart": [5, 28, 53], "offer": [5, 9], "decrypt": [5, 10, 21, 55], "password": [5, 10, 46, 49, 55], "protect": [5, 9], "individu": [5, 28, 49, 87], "assign": [5, 21, 28], "These": [5, 28, 43, 53], "ones": [5, 21], "blockchain": [5, 6, 8, 9, 10, 14, 15, 21, 37, 43, 46, 49, 77, 78, 81, 87, 89], "compositeswap": [5, 12, 14, 49, 86], "poolpair": [5, 14, 28, 46, 49], "find": [5, 9, 28, 53, 55, 69], "explan": [5, 28, 43, 53], "want": [5, 28, 31, 40, 41, 49, 56, 74], "account": [5, 6, 12, 14, 18, 20, 23, 40, 46, 53, 55, 62, 83, 87], "masternod": [5, 8, 13, 14, 24, 28, 37, 62, 77, 78, 83], "propos": [5, 8, 14, 27, 61, 82], "rawtransact": [5, 14, 21, 69, 71, 72, 73, 74, 75], "util": [5, 6, 14, 41, 46, 49, 53, 67, 87], "vault": [5, 6, 14, 23, 29, 40, 49, 62, 63, 83, 84], "veri": [5, 28], "simpl": [5, 28], "consist": [5, 28], "three": [5, 7, 28, 41, 43, 53], "thing": [5, 15, 28], "previous": [5, 21, 28, 40, 43], "user": [5, 9, 10, 21, 46, 48, 49], "127": [5, 10, 46, 49], "8554": [5, 10, 46, 49], "sure": [5, 28], "locat": [5, 10, 21, 28, 53, 65, 86], "upper": [5, 28, 46, 87], "corner": [5, 28], "overview": 5, "often": [5, 28], "softwar": [5, 41, 43, 48], "There": [5, 40, 41, 43, 53, 92], "also": [5, 9, 15, 19, 21, 31, 43, 50, 53, 87, 92], "creation": [5, 6, 7, 12, 18, 21, 30, 33, 38, 43, 64, 77, 78, 89], "evan": 5, "easier": 5, "easi": [5, 43], "quickli": 5, "build": [5, 46, 60, 61, 63, 64, 65, 66, 87], "alreadi": [5, 10, 15, 21], "amount1": [5, 12], "t1": [5, 12], "amount2": [5, 12], "t2": [5, 12], "dctkz5sqrqf4vgvsgra76ptxenbcxprenp": 5, "df1qzkf582h0sgfksj0yn0wxz0r9amyqfferm5wyc": 5, "address_amount": 5, "createloanschem": [6, 14], "mincolratio": [6, 14, 29], "interestr": [6, 14, 29], "scheme": [6, 20, 29, 37, 40, 66, 89], "collater": [6, 7, 18, 20, 29, 37, 66, 89], "ratio": [6, 20], "integ": [6, 15, 21, 79], "interest": [6, 14, 29], "uniqu": [6, 7, 12, 18, 20], "identifi": [6, 7, 8, 9, 20, 32, 55], "char": [6, 20], "max": [6, 17, 20, 33, 37], "150": [6, 40], "myschem": 6, "destroyloanschem": [6, 14], "activate_after_block": [6, 14], "destroi": 6, "new": [6, 7, 8, 9, 12, 15, 18, 19, 21, 41, 49, 64, 85, 89, 93], "getcollateraltoken": [6, 14, 29], "getinterest": [6, 14], "global": [6, 15, 21], "interestperblock": 6, "ceil": 6, "min": [6, 17], "fi": 6, "decim": [6, 9, 14, 18, 38, 79], "howev": [6, 87], "less": [6, 15, 21], "continu": [6, 21, 40], "accru": 6, "payback": [6, 20, 37, 63], "sub": 6, "matur": 6, "realizedinterestperblock": 6, "realiz": 6, "accumul": 6, "getloaninfo": [6, 14], "getloanschem": [6, 14], "loanschem": [6, 29], "getloantoken": [6, 14, 29], "listcollateraltoken": [6, 14, 29], "setcollateraltoken": [6, 14], "listloanschem": [6, 14], "listloantoken": [6, 14, 29], "paybackloan": [6, 14, 84], "vaultid": [6, 14, 20, 29, 63, 66, 84, 89], "desir": [6, 19, 84], "repay": [6, 63, 84], "star": [6, 12, 20], "auto": [6, 12, 20], "84b22eee1964768304e624c416f29a91d78a01dc5e8e12db26bdac0670c67bb2": [6, 20], "fixedintervalpriceid": [6, 11, 14, 29], "activateafterblock": [6, 14, 29], "colleter": 6, "currenc": [6, 11, 14, 32, 34], "pair": [6, 11, 12, 15, 21, 32, 33], "price": [6, 11, 12, 28, 32, 33, 37, 65, 86], "after": [6, 7, 10, 15, 21, 40, 92], "usd": [6, 11, 20, 32, 33, 34, 37], "setdefaultloanschem": [6, 14], "setloantoken": [6, 14], "mintabl": [6, 14, 18, 38], "feed": [6, 21, 32, 34], "longer": [6, 12, 18, 19, 21], "128": [6, 18, 54, 93], "properti": [6, 12, 18, 19], "stock": 6, "takeloan": [6, 14, 40, 46, 84], "mint": [6, 8, 18, 25, 38, 40, 60, 73], "spy": [6, 49], "updateloanschem": [6, 14], "updat": [6, 7, 11, 12, 15, 20, 21, 46, 85], "updateloantoken": [6, 14], "tslaa": 6, "createmasternod": [7, 14, 85], "owneraddress": [7, 12, 14, 20, 29, 32, 33, 64, 66, 85, 89], "operatoraddress": [7, 14, 64, 85], "timelock": [7, 14, 30, 64, 85], "oper": [7, 9, 28, 30, 31, 46, 64, 85], "keep": [7, 9, 18, 21], "p2wkh": 7, "auth": [7, 18], "so": [7, 9, 15, 21, 40, 43, 48], "resign": [7, 15, 30, 77, 78, 85], "fiveyeartimelock": 7, "tenyeartimelock": 7, "five": 7, "ten": [7, 53], "year": [7, 21, 64, 85], "5x": 7, "power": 7, "respect": [7, 72, 92], "Be": [7, 41], "awar": 7, "whatev": 7, "getactivemasternodecount": [7, 14], "blockcount": [7, 10, 14], "20160": 7, "getanchorteam": [7, 14], "team": 7, "two": [7, 12, 40, 43, 49, 80], "getmasternod": [7, 14], "mn_id": [7, 14], "095d2bfb5d05ba73fa96502df85aca818ee79810b9ababa71a9dc97e2c360100": 7, "getmasternodeblock": [7, 14], "listanchor": [7, 14], "listmasternod": [7, 14], "1000000": [7, 21], "resignmasternod": [7, 14, 85], "unlock": [7, 14, 18, 21], "2016": 7, "mn": [7, 93], "updatemasternod": [7, 14, 85], "passphras": [7, 11, 12, 13, 14, 18, 21, 54, 55], "walletpassphras": [7, 11, 12, 13, 14, 18, 21], "rewardaddress": [7, 14, 64, 85], "getblocktempl": [8, 14], "template_request": [8, 14], "between": [8, 12, 15, 19, 21, 93], "templat": 8, "construct": 8, "22": 8, "23": 8, "9": [8, 53], "145": 8, "github": [8, 41, 46, 47, 49, 50], "com": [8, 31, 41, 46, 49], "bitcoin": [8, 43], "blob": 8, "master": [8, 15, 21, 55], "0022": 8, "mediawiki": 8, "0023": 8, "0009": 8, "getblocktemplate_chang": 8, "0145": 8, "spec": 8, "omit": [8, 15, 21], "capabl": 8, "side": [8, 21], "longpol": 8, "coinbasetxn": 8, "coinbasevalu": 8, "serverlist": 8, "workid": 8, "prefer": 8, "rulenam": 8, "vbavail": 8, "versionbit": 8, "bitnumb": 8, "readi": 8, "vbrequir": 8, "mask": 8, "submiss": 8, "highest": [8, 19], "should": [8, 12, 15, 18, 21, 28, 40, 41, 43, 55, 57, 58, 59, 65, 74, 75, 80, 81, 86, 88, 92], "littl": [8, 55], "endian": 8, "neg": [8, 21], "collect": 8, "unknown": [8, 9, 15, 20, 21, 27], "NOT": [8, 21, 48], "isn": 8, "sigop": 8, "cost": [8, 89], "purpos": [8, 14, 21, 48], "coinbaseaux": 8, "scriptsig": [8, 15, 21, 43, 73], "allow": [8, 11, 15, 21], "award": 8, "mintim": 8, "appropri": [8, 87], "mutabl": 8, "wai": [8, 49, 53, 71], "e": [8, 12, 15, 18, 21, 40], "g": [8, 15, 18, 21], "prevblock": 8, "noncerang": 8, "00000000ffffffff": 8, "sigoplimit": 8, "sizelimit": 8, "weightlimit": 8, "curtim": 8, "compress": [8, 21, 55], "getmininginfo": [8, 14], "relat": [8, 15, 18, 21], "currentblockweight": 8, "assembl": 8, "ever": 8, "currentblocktx": 8, "networkhashp": 8, "pooledtx": 8, "isoper": 8, "getmintinginfo": [8, 14], "getnetworkhashp": [8, 14], "120": 8, "speed": 8, "prioritisetransact": [8, 14], "fee_delta": [8, 14], "dummi": [8, 14, 21], "higher": [8, 15, 19, 21], "lower": 8, "api": [8, 28, 46], "compat": [8, 15, 21], "null": [8, 15, 21], "subtract": [8, 21], "absolut": [8, 9, 14, 21], "paid": [8, 12, 15, 21, 87], "algorithm": 8, "would": [8, 21, 87], "10000": 8, "submitblock": [8, 14], "hexdata": [8, 14], "attempt": [8, 9], "en": 8, "wiki": 8, "bip_0022": 8, "bip22": 8, "mydata": 8, "submithead": [8, 14], "decod": [8, 15, 18], "candid": 8, "abc": 8, "addnod": [9, 14], "Or": 9, "ad": [9, 15, 16, 21], "do": [9, 21, 31, 41, 43, 48, 55], "disconnect": 9, "outbound": [9, 22], "peer": [9, 15], "though": [9, 21], "sync": [9, 21], "getpeerinfo": [9, 14], "onetri": 9, "192": [9, 93], "168": 9, "8555": 9, "clearban": [9, 14], "ban": 9, "ip": [9, 10], "disconnectnod": [9, 14], "nodeid": [9, 14], "strictli": 9, "port": [9, 10, 46], "getaddednodeinfo": [9, 14], "here": [9, 10, 15, 21, 49], "addednod": 9, "201": 9, "re": [9, 21], "inbound": 9, "getconnectioncount": [9, 14], "getnettot": [9, 14], "traffic": 9, "totalbytesrecv": 9, "totalbytess": 9, "sent": [9, 15, 21, 65, 74, 80, 81, 86, 88, 92], "timemilli": 9, "millisecond": 9, "uploadtarget": 9, "timefram": 9, "measur": 9, "target_reach": 9, "reach": [9, 10, 21, 31], "serve_historical_block": 9, "serv": [9, 43], "histor": 9, "bytes_left_in_cycl": 9, "cycl": [9, 13, 14, 27], "time_left_in_cycl": 9, "getnetworkinfo": [9, 14, 21], "p2p": 9, "subvers": [9, 37], "protocolvers": [9, 37], "protocol": [9, 10, 31], "localservic": 9, "xxxxxxxxxxxxxxxx": 9, "servic": 9, "localrelai": 9, "timeoffset": 9, "offset": [9, 32, 34], "networkact": 9, "ipv4": 9, "ipv6": 9, "onion": 9, "onlynet": 9, "reachabl": 9, "host": 9, "proxy_randomize_credenti": 9, "random": [9, 93], "credenti": 9, "relayfe": 9, "incrementalfe": [9, 21], "increment": 9, "125": [9, 21], "localaddress": 9, "score": 9, "rel": [9, 21], "getnodeaddress": [9, 14], "track": [9, 21], "addrbind": 9, "bind": 9, "addrloc": 9, "relaytx": 9, "ask": [9, 46], "u": [9, 43, 46, 49], "lastsend": 9, "lastrecv": 9, "bytess": 9, "bytesrecv": 9, "conntim": 9, "pingtim": 9, "ping": [9, 10, 14], "minp": 9, "observ": [9, 19], "pingwait": 9, "wait": [9, 40], "v": 9, "70001": 9, "subver": 9, "startingheight": 9, "banscor": 9, "synced_head": 9, "common": [9, 21], "synced_block": 9, "inflight": 9, "whitelist": 9, "minfeefilt": 9, "bytessent_per_msg": 9, "aggreg": [9, 11, 14, 23, 33, 34], "bytesrecv_per_msg": 9, "under": [9, 10, 20, 53], "getversioninfo": [9, 14], "numericvers": 9, "fullvers": 9, "userag": 9, "agent": 9, "conform": 9, "14": 9, "protovers": 9, "protoversionmin": 9, "rpcversion": 9, "rpcversionmin": 9, "listban": [9, 14], "subnet": [9, 14], "band": 9, "queue": 9, "backlog": 9, "setban": [9, 14], "bantim": [9, 14], "netmask": 9, "32": [9, 11, 15, 21, 54, 93], "long": [9, 19, 21], "24h": 9, "overwritten": 9, "startup": 9, "setnetworkact": [9, 14], "disabl": [9, 21], "url": [10, 31, 46], "wallet_nam": [10, 14, 21], "wallet_path": 10, "wallet_password": 10, "wallet_timeout": 10, "60": [10, 21, 33, 34], "logger": [10, 31], "interfac": [10, 31], "conf": 10, "via": [10, 14, 21, 28, 41, 43, 46, 47, 50, 92], "witch": [10, 31, 46, 47, 55, 57, 58, 59, 72, 74, 81, 82, 92], "localhost": 10, "becom": [10, 93], "usabl": 10, "again": [10, 21, 41], "interact": [10, 21, 31, 46, 80], "mywallet": 10, "yourpassword": 10, "latest": [10, 11, 28, 31, 49], "print": [10, 28, 31, 40, 41, 43, 46, 53, 55], "decrypt_wallet": 10, "load_wallet": 10, "filesystem": 10, "test_connect": 10, "rais": [10, 41, 56], "except": [10, 40, 41, 56], "occur": [10, 21], "appointoracl": [11, 14], "pricefe": [11, 32, 34], "weightag": [11, 14, 32, 34], "appoint": 11, "save": [11, 20], "mwsdmvn1hoc8dsob7aklv7nxdrf5ja4jsf": [11, 20], "eur": 11, "getdusdswapblock": [11, 14], "getfixedintervalpric": [11, 14], "interv": [11, 33, 34], "activepric": [11, 29], "nextpric": 11, "activepriceblock": 11, "nextpriceblock": 11, "isliv": [11, 34], "getfutureswapblock": [11, 14], "getoracledata": [11, 14], "oracleid": [11, 14, 32, 34], "noracl": 11, "getpric": [11, 14], "listfixedintervalpric": [11, 14], "pricefeedid": 11, "listlatestrawpric": [11, 14], "through": [11, 28, 65, 86, 87], "listoracl": [11, 14], "listpric": [11, 14], "calcul": [11, 15, 21, 53, 55, 57, 58, 59], "nnnnnnn": 11, "ok": 11, "removeoracl": [11, 14], "0xabcd1234ac1243578697085986498694": 11, "setoracledata": [11, 14], "tokenamount": [11, 14], "5474b2e9bfa96446e5ef3c9594634e1aa22d3a0722cb79084d61253acbdf87bf": [11, 20], "1612237937": 11, "38293": 11, "12": 11, "1328": 11, "updateoracl": [11, 14], "addpoolliquid": [12, 14, 74, 86], "shareaddress": [12, 14, 65, 86], "liquid": [12, 29, 37, 65, 86], "exectli": 12, "b": [12, 15, 21], "combin": [12, 15, 46, 87], "credit": 12, "df1qpsg2v3fajhwfrc3dchsqpcwqfegdxpncwpcda2": [12, 18], "tokenfrom": [12, 14, 43, 46, 65, 86], "amountfrom": [12, 14, 43, 65, 86], "tokento": [12, 14, 43, 46, 65, 86], "maxpric": [12, 14, 43, 46, 65, 86], "composit": [12, 86], "tokena": [12, 14, 33], "tokenb": [12, 14, 33], "createpoolpair": [12, 14], "commiss": [12, 14, 33], "customreward": [12, 14, 33], "pairsymbol": [12, 14], "restrict": [12, 48], "usdc": 12, "getpoolpair": [12, 14], "creationtx": [12, 18, 21], "listpoolpair": [12, 14], "listpoolshar": [12, 14], "share": 12, "shown": [12, 15, 43], "poolswap": [12, 14, 33, 40, 43, 46, 74, 86], "removepoolliquid": [12, 14, 86], "testpoolswap": [12, 14], "direct": [12, 53], "updatepoolpair": [12, 14], "creategovcfp": [13, 14], "titl": [13, 14, 27], "context": [13, 14, 18, 27], "payoutaddress": [13, 14, 27], "contexthash": [13, 14, 27], "cfp": [13, 27, 46], "creategovvoc": [13, 14], "emerg": [13, 14], "vote": [13, 27, 82], "confid": 13, "voc": [13, 27], "getgovpropos": [13, 14, 27], "proposalid": [13, 14, 27, 61, 82], "real": [13, 69], "listgovpropos": [13, 14, 27], "reject": [13, 15, 27], "listgovproposalvot": [13, 14, 27], "show": [13, 21, 27, 28, 40], "votegov": [13, 14], "masternodeid": [13, 14, 27, 61, 64, 77, 78, 82, 85], "decis": [13, 14, 41, 61, 82], "ye": [13, 21, 27, 61, 82], "neutral": [13, 27, 61, 82], "icxorderbook": 14, "icx_claimdfchtlc": 14, "dfchtlctx": 14, "seed": [14, 21, 41, 43, 46, 49, 55, 93], "icx_closeoff": 14, "offertx": 14, "icx_closeord": 14, "ordertx": 14, "icx_createord": 14, "chainfrom": 14, "chainto": 14, "receivepubkei": 14, "orderpric": 14, "expiri": 14, "icx_getord": 14, "icx_listhtlc": 14, "close": [14, 20, 21], "icx_listord": 14, "icx_makeoff": 14, "icx_submitdfchtlc": 14, "icx_submitexthtlc": 14, "htlcscriptaddress": 14, "ownerpubkei": 14, "votegovbatch": 14, "sleeptim": 14, "analyzepsbt": [14, 15], "psbt": [14, 15, 21], "combinepsbt": [14, 15], "combinerawtransact": [14, 15], "hexstr": [14, 15, 18, 21], "converttopsbt": [14, 15], "permitsigdata": [14, 15], "iswit": [14, 15, 18, 19, 21], "createpsbt": [14, 15], "sequenc": [14, 15, 21, 39, 43, 73], "locktim": [14, 15, 21, 24, 39, 43, 72], "createrawtransact": [14, 15], "decodepsbt": [14, 15], "decoderawtransact": [14, 15], "decodescript": [14, 15], "finalizepsbt": [14, 15], "extract": [14, 15, 42, 43], "fundrawtransact": [14, 15, 21], "joinpsbt": [14, 15], "sendrawtransact": [14, 15], "signrawtransactionwithkei": [14, 15], "privatekei": [14, 15, 21, 57, 58, 59, 71], "redeemscript": [14, 15, 19, 21], "witnessscript": [14, 15, 21], "sighashtyp": [14, 15, 21], "testmempoolaccept": [14, 15], "rawtx": [14, 15, 28], "utxoupdatepsbt": [14, 15], "spv_claimhtlc": 14, "scriptaddress": 14, "destinationaddress": 14, "spv_createanchor": 14, "privkei": [14, 19, 21], "spv_createanchortempl": 14, "spv_createhtlc": 14, "receiverpubkei": 14, "spv_decodehtlcscript": 14, "spv_dumpprivkei": 14, "spv_estimateanchorcost": 14, "spv_getaddresspubkei": 14, "spv_getalladdress": 14, "spv_getbal": 14, "spv_getfeer": 14, "spv_gethtlcse": 14, "spv_getnewaddress": 14, "spv_getpeer": 14, "spv_getrawtransact": 14, "spv_gettxconfirm": 14, "txhash": 14, "spv_listanchorauth": 14, "spv_listanchorrewardconfirm": 14, "spv_listanchorreward": 14, "spv_listanchor": 14, "minbtcheight": 14, "maxbtcheight": 14, "minconf": [14, 21], "maxconf": [14, 21], "startbtcheight": 14, "spv_listanchorspend": 14, "spv_listanchorsunreward": 14, "spv_listhtlcoutput": 14, "spv_listreceivedbyaddress": 14, "address_filt": [14, 21], "spv_listtransact": 14, "spv_refundhtlc": 14, "spv_refundhtlcal": 14, "spv_rescan": 14, "spv_sendrawtx": 14, "spv_sendtoaddress": 14, "spv_syncstatu": 14, "spv_validateaddress": 14, "getrpcstat": [14, 17], "listrpcstat": [14, 17], "burntoken": [14, 18], "createtoken": [14, 18], "isdat": [14, 18, 23, 38], "tradeabl": [14, 18, 38], "collateraladdress": [14, 18, 38], "decodecustomtx": [14, 18], "getcustomtx": [14, 18], "gettoken": [14, 18], "listtoken": [14, 18, 23], "minttoken": [14, 18, 25], "updatetoken": [14, 18], "createmultisig": [14, 19], "nrequir": [14, 19, 21], "address_typ": [14, 19, 21], "deriveaddress": [14, 19], "estimatesmartfe": [14, 19, 21], "conf_target": [14, 15, 19, 21], "estimate_mod": [14, 15, 19, 21], "getdescriptorinfo": [14, 19], "signmessagewithprivkei": [14, 19], "validateaddress": [14, 19], "verifymessag": [14, 19], "closevault": [14, 20], "createvault": [14, 20, 40, 89], "loanschemeid": [14, 20], "deposittovault": [14, 20, 40, 89], "estimatecollater": [14, 20], "loanamount": [14, 20], "targetratio": [14, 20], "split": [14, 20, 21], "estimateloan": [14, 20], "estimatevault": [14, 20], "collateralamount": [14, 20], "getvault": [14, 20, 29], "listauctionhistori": [14, 20], "listauct": [14, 20, 29], "listvaulthistori": [14, 20], "listvault": [14, 20, 23, 29], "paybackwithcollater": [14, 20], "placeauctionbid": [14, 20], "updatevault": [14, 20], "withdrawfromvault": [14, 20, 89], "abandontransact": [14, 21], "abortrescan": [14, 21], "addmultisigaddress": [14, 15, 21], "label": [14, 21, 55], "backupwallet": [14, 21], "bumpfe": [14, 21], "createwallet": [14, 21], "disable_private_kei": [14, 21], "blank": [14, 21], "avoid_reus": [14, 21], "dumpprivkei": [14, 21], "dumpwallet": [14, 21], "filenam": [14, 21, 55], "encryptwallet": [14, 21], "getaddressesbylabel": [14, 21], "getaddressinfo": [14, 21], "getbal": [14, 21, 23, 46, 92], "include_watchonli": [14, 21], "with_token": [14, 21], "getnewaddress": [14, 21], "getrawchangeaddress": [14, 21], "getreceivedbyaddress": [14, 21], "getreceivedbylabel": [14, 21], "gettransact": [14, 15, 21, 24], "getunconfirmedbal": [14, 21], "getwalletinfo": [14, 21], "importaddress": [14, 15, 21], "rescan": [14, 21], "importmulti": [14, 21], "importprivkei": [14, 21, 41, 53], "importprunedfund": [14, 21], "txoutproof": [14, 21], "importpubkei": [14, 21], "importwallet": [14, 21], "keypoolrefil": [14, 21], "newsiz": [14, 21], "listaddressgroup": [14, 21], "listlabel": [14, 21], "listlockunsp": [14, 21], "listreceivedbyaddress": [14, 21], "include_empti": [14, 21], "listreceivedbylabel": [14, 21], "listsinceblock": [14, 21], "target_confirm": [14, 21], "include_remov": [14, 21], "listtransact": [14, 21, 23], "skip": [14, 21], "exclude_custom_tx": [14, 21], "listunsp": [14, 15, 21], "include_unsaf": [14, 21], "query_opt": 14, "listwalletdir": [14, 21], "listwallet": [14, 21], "loadwallet": [14, 21], "lockunsp": [14, 15, 21], "removeprunedfund": [14, 21], "rescanblockchain": [14, 21], "start_height": [14, 21], "stop_height": [14, 21], "sendmani": [14, 21, 88], "comment": [14, 21, 46], "sendtoaddress": [14, 21], "comment_to": [14, 21], "subtractfeefromamount": [14, 21], "sethdse": [14, 21], "newkeypool": [14, 21], "setlabel": [14, 21], "settxfe": [14, 21], "setwalletflag": [14, 21], "signmessag": [14, 19, 21], "signrawtransactionwithwallet": [14, 15, 21], "unloadwallet": [14, 21], "walletcreatefundedpsbt": [14, 15, 21], "bip32deriv": [14, 21], "walletlock": [14, 21], "walletpassphrasechang": [14, 21], "oldpassphras": [14, 21], "newpassphras": [14, 21], "walletprocesspsbt": [14, 21], "sign": [14, 15, 19, 21, 43, 46, 69, 70, 72, 73, 87], "getzmqnotif": [14, 22], "analyz": 15, "base64": [15, 21], "has_utxo": 15, "is_fin": 15, "miss": [15, 21], "keyid": 15, "hash160": [15, 21], "deriv": [15, 19, 21, 43, 46, 52, 55], "sha256": 15, "role": [15, 21], "person": [15, 21, 48], "go": 15, "estimated_vs": 15, "estimated_feer": 15, "slot": 15, "fill": [15, 21, 43], "partial": [15, 21], "implement": [15, 21, 43, 46], "mybase64_1": 15, "mybase64_2": 15, "mybase64_3": 15, "anoth": [15, 33, 41, 80, 88], "myhex1": 15, "myhex2": 15, "myhex3": 15, "convert": [15, 40, 60, 80, 81], "applic": [15, 47], "duplic": [15, 21], "That": [15, 21], "reason": [15, 21], "dictionari": [15, 21], "hold": [15, 21], "directli": [15, 21], "explicit": 15, "incompat": 15, "myid": [15, 21], "00010203": [15, 21], "ark": 15, "unsign": [15, 20, 72, 73], "layout": 15, "non_witness_utxo": 15, "witness_utxo": 15, "partial_signatur": 15, "sighash": [15, 71], "redeem_script": 15, "witness_script": 15, "bip32_deriv": 15, "master_fingerprint": 15, "fingerprint": 15, "final_scriptsig": 15, "final_scriptwit": 15, "heurist": [15, 18], "deseri": [15, 18, 43, 72, 73, 74, 75], "tri": [15, 18], "reflect": [15, 18], "caller": [15, 18], "vin": [15, 23, 39], "txinwit": [15, 39], "sig": 15, "12tvkaxcxzjsmdnbao16dkxc8trwfcf5oc": 15, "nonstandard": [15, 21], "scripthash": [15, 21], "nulldata": [15, 21], "witness_v0_scripthash": [15, 21], "witness_v0_keyhash": [15, 21], "witness_unknown": [15, 21], "wrap": 15, "redeem": [15, 21, 57, 58, 59], "represent": [15, 50], "extractor": 15, "normal": [15, 21], "instead": [15, 21, 43], "changeaddress": [15, 21, 81, 88], "changeposit": [15, 21], "change_typ": [15, 21], "includewatch": [15, 21], "subtractfeefromoutput": [15, 21], "meet": 15, "No": 15, "unless": 15, "standard": [15, 21, 31], "solvabl": [15, 19, 21], "pai": [15, 21, 55, 69, 77, 78, 84], "thereof": 15, "watch": [15, 21], "legaci": [15, 19, 21, 23, 41, 55, 64, 85], "deduct": [15, 21], "those": [15, 21], "recipi": [15, 21], "vout_index": [15, 21], "econom": [15, 19, 21], "conserv": [15, 19, 21], "extra": 15, "changepo": [15, 21], "rawtransactionhex": 15, "flase": 15, "in_active_chain": 15, "blocktim": [15, 21], "join": [15, 47], "distinct": 15, "uncondition": 15, "rebroadcast": 15, "degrad": 15, "privaci": [15, 21], "leak": 15, "origin": [15, 21, 49], "express": [15, 48], "signedhex": 15, "prevtx": [15, 21], "privat": [15, 19, 21, 40, 42, 43, 46, 55, 57, 58, 59, 71, 72, 87], "p2wsh": [15, 21], "anyonecanpai": [15, 21], "referenc": [15, 21], "exactli": [15, 40, 43], "now": [15, 21, 72], "insert": [15, 46, 92], "Will": [16, 18], "latenc": 17, "payload": 17, "lastusedtim": 17, "necessari": [18, 21, 87], "place": [18, 65, 79, 86], "mytoken": 18, "66ea2ac081e2917f075e2cca7c1c0baa12fb85c469f34561185fa64d7d2f9305": 18, "promot": 18, "demot": 18, "forev": 18, "m": [19, 41, 53, 55], "multisigaddress": [19, 21], "redempt": [19, 21], "03789ed0bb717d88f7d321a368d905e7430207ebbd82bd342cf11ae157a7ace5fd": 19, "03dbc6764b8884a92e871274b87583e6d5c2a58819473e17e107ef3f6aa5a61626": 19, "wpkh": 19, "nativ": [19, 43, 46], "d34db33f": 19, "84h": 19, "0h": 19, "xpub6dj2dnuysrn5vt36jh2klbt2i1auw1ttssomg8phqniutx8qx2svc9nrhu81ft41fvdunhmjezqgxnqjkeu3oaqmszhsrhmxyyoeamuhqbi": 19, "cjjspncu": 19, "approxim": [19, 87], "kilobyt": 19, "within": [19, 24, 28, 46, 53], "1008": 19, "satisfi": 19, "like": [19, 43], "suffici": 19, "respons": [19, 21], "short": [19, 43], "term": [19, 21, 46, 48], "drop": 19, "prevail": 19, "market": 19, "resturn": 19, "dure": [19, 21], "clamp": 19, "abl": [19, 21, 28, 43], "analys": [19, 43, 56], "decriptor": 19, "canon": 19, "checksum": 19, "chksum": 19, "israng": 19, "issolv": 19, "hasprivatekei": 19, "0279be667ef9dcbbac55a06295ce870b07029bfcdb2dce28d959f2815b16f81798": 19, "64": [19, 21], "my": [19, 21], "isvalid": 19, "isscript": [19, 21], "witness_vers": [19, 21], "program": [19, 21], "witness_program": [19, 21], "df1qduwqfyhz0n0duvmudlhmyx2uzk4u2xqmn627zr": 19, "signer": 19, "half": 20, "2mzfsnckjgcbnlen14cyrvtwgomfda5agyv": 20, "deposit": [20, 40, 66, 89], "84b22eee1964768304e624c416f29a91d78a01dc5e8e12db26bdac0670c67bb2i": 20, "percent": 20, "200": [20, 28], "collateralvalu": 20, "loanvalu": 20, "informativeratio": 20, "digit": 20, "precis": [20, 21], "collateralratio": 20, "uint": 20, "auction": [20, 29, 37, 43], "batch": [20, 29], "wether": 20, "bid": 20, "abandon": 21, "respent": 21, "stuck": 21, "evict": 21, "1075db55d416d3ca199f55b6084e2115b9345e16c5cf302fc80e9d5fbf5d48d": 21, "trigger": 21, "queri": [21, 23, 24, 27, 28, 29, 30, 33, 35, 38, 39, 43], "multisignatur": 21, "backup": 21, "intend": 21, "watchonli": 21, "16ssausf5pf2ukuwvkgq4qjnrzbzyqgel5": 21, "171sgjn4ytpu27adkkgrddwzrtxnrkbfkv": 21, "safe": 21, "copi": [21, 48], "directori": [21, 92], "dat": 21, "conftarget": 21, "bump": 21, "opt": 21, "rbf": 21, "reduc": 21, "big": 21, "altern": 21, "At": 21, "high": [21, 22], "rare": 21, "might": 21, "slightli": 21, "too": 21, "dust": 21, "still": 21, "unchang": 21, "0xfffffffe": 21, "practic": [21, 93], "origfe": 21, "e6ade425016b5c7025bc8a31b41e476f092eaeaeed6b69ac28d7ce988a499d18": 21, "encrypt": [21, 55], "reus": 21, "dirti": 21, "clean": [21, 55], "consider": 21, "mind": [21, 73], "successfulli": 21, "cleanli": 21, "new_wallet": 21, "reveal": 21, "Then": 21, "human": 21, "readabl": 21, "overwrit": 21, "dumpfil": 21, "bip173": 21, "etc": 21, "cover": 21, "itself": 21, "ensur": [21, 46, 87], "prior": 21, "phrase": 21, "charact": 21, "ismin": 21, "iswatchonli": 21, "lack": 21, "ischang": 21, "associ": [21, 48], "sigsrequir": 21, "publickeyhex": 21, "possibli": 21, "embed": 21, "relev": 21, "hdkeypath": 21, "hdseedid": 21, "iscompress": 21, "keypath": 21, "hdmasterfingerprint": 21, "fingperint": 21, "labelnam": 21, "1pssgefhdnknxieyfrd1wceahr9hrqddwc": 21, "spendabl": 21, "spendzeroconfchang": 21, "remain": [21, 81, 88], "backward": 21, "trust": [21, 43, 46, 47], "untrusted_pend": 21, "untrust": 21, "immatur": 21, "violat": 21, "anyth": [21, 31], "payment": 21, "book": 21, "link": [21, 46, 47], "1d1zrzne3juo7zyckeyqqiqawd9y54f4xx": 21, "blockindex": 21, "timereceiv": 21, "involv": [21, 43, 49], "fewer": 21, "respend": 21, "ident": 21, "walletnam": 21, "walletvers": 21, "unconfirmed_bal": 21, "immature_bal": 21, "keypoololdest": 21, "oldest": 21, "pre": [21, 40, 77, 78], "keypools": 21, "extern": 21, "keypoolsize_hd_intern": 21, "intern": 21, "unlocked_until": 21, "midnight": 21, "paytxfe": 21, "private_keys_en": 21, "percentag": 21, "over": 21, "lead": [21, 41, 43], "temporarili": 21, "incorrect": 21, "bogu": 21, "earliest": 21, "convers": 21, "substitut": 21, "far": 21, "bypass": 21, "entir": [21, 49], "give": [21, 41, 43], "incom": 21, "keypool": 21, "irrelev": 21, "1455191478": 21, "2nd": 21, "1455191480": 21, "mykei": 21, "aim": [21, 41], "toward": 21, "subsequ": 21, "mypubkei": 21, "group": [21, 46, 47], "had": 21, "ownership": 21, "unspend": 21, "haven": 21, "involveswatchonli": 21, "receivingaddress": 21, "recent": 21, "onward": 21, "addition": 21, "nth": 21, "lastblock": 21, "guarante": 21, "conflict": 21, "ago": 21, "hashvalu": 21, "structur": 21, "lastblockhash": 21, "sai": 21, "notifi": 21, "ve": 21, "plu": 21, "mincof": 21, "maxcof": 21, "9999999": 21, "minimumamount": 21, "maximumamount": 21, "maximumcount": 21, "minimumsumamount": 21, "inclus": 21, "descript": 21, "outsid": 21, "unsaf": 21, "elig": 21, "zapwallettx": 21, "upgradewallet": 21, "chosen": 21, "virtu": 21, "exit": [21, 53], "delet": 21, "meant": 21, "companion": 21, "a8d0c0184dde994a09ec054286f1ce581bebf46446a512166eae7628734ea0a5": 21, "didn": 21, "background": 21, "2000000": 21, "subtractfeefrom": 21, "doubl": 21, "regardless": 21, "01": [21, 23, 49], "1353tse8ymta4euv7dguxgjnff9kpvvkhz": 21, "02": 21, "kept": 21, "organ": 21, "avoid": 21, "1m72sfpbz1bppxfhz9m3cdqatr44jvaydd": 21, "upgrad": 21, "flush": 21, "old": 21, "regener": 21, "deplet": 21, "wif": [21, 40, 41, 53, 55, 68], "hdseed": 21, "teddi": 21, "00001": [21, 80, 86], "unload": 21, "endpoint": [21, 28], "creator": 21, "issu": [21, 46, 47, 50], "while": [21, 28, 40, 41], "cap": 21, "100000000": [21, 43], "zeromq": 22, "notif": 22, "pubhashtx": 22, "publish": [22, 47, 48, 49], "hwm": 22, "water": 22, "ocean": [23, 24, 25, 26, 27, 29, 30, 32, 33, 34, 35, 36, 37, 38, 39, 40, 43, 76, 81, 87, 92], "txno": [23, 33], "df1qwfpdfkvphwme3039pal4awq6cz66racsm8uek9": 23, "2341564": 23, "30": [23, 24, 27, 28, 29, 30, 31, 32, 33, 34, 38, 39, 49], "depoxjzwgia1aabz6zrb7ffsksewpn1v7a": 23, "b58": 23, "getaggreg": 23, "hid": 23, "txincount": 23, "txoutcount": 23, "txin": 23, "slice": [23, 24, 28, 39], "addresstoken": 23, "displaysymbol": [23, 33, 38], "symbolkei": [23, 38], "islp": [23, 38], "isloantoken": [23, 38], "vaultact": [23, 29], "vaultliquid": [23, 29], "addressact": 23, "typehex": [23, 43], "00": 23, "listtransactionunsp": 23, "addressunsp": 23, "previoushash": 24, "transactioncount": 24, "minter": 24, "minterblockcount": 24, "stakemodifi": 24, "sizestrip": 24, "vincount": [24, 39], "voutcount": [24, 39], "totalvoutvalu": [24, 39], "e5b266f18db7662628ea503eb9f889197f05660981f22c07b1b3b86f14329099": 24, "getassetbreakdown": 25, "asset": [25, 43], "breakdown": 25, "member": 25, "backingaddress": 25, "getmemberstat": 25, "memberid": 25, "membernam": 25, "tokendisplaysymbol": 25, "minteddaili": 25, "mintlimit": 25, "mintdailylimit": 25, "confirmationtarget": 26, "till": 26, "pagin": [27, 29, 38], "governanceproposaltyp": 27, "governanceproposalstatu": 27, "currentcycl": 27, "totalcycl": 27, "creationheight": 27, "cycleendheight": 27, "proposalendheight": 27, "votingperiod": 27, "approvalthreshold": 27, "quorum": 27, "votesposs": 27, "votespres": 27, "votespresentpct": 27, "votesy": 27, "votesyespct": 27, "a252bea49341adb75842dd30442e5836f9e204e7fa96a1585983eca3b3b5407c": 27, "NO": [27, 48], "consortium": 28, "rest": 28, "project": [28, 41, 46, 47, 50], "done": 28, "infinit": [28, 43], "loop": 28, "slize": 28, "scroll": 28, "pointer": 28, "2269079": 28, "listschem": 29, "getschem": 29, "min150": [29, 40, 89], "tokendata": 29, "loantoken": [29, 37], "8f87baa094aa166cf88dd61553ad996ea2c1f7694536c18f3d8390e436900300": 29, "listvaultauctionhistori": 29, "batchindex": 29, "866889122ba23be0a71fc6a9e853d6b8f2b42b018393f091922be5ebcc23b600": 29, "loanvaultst": 29, "in_liquid": 29, "liquidationheight": 29, "liquidationpenalti": 29, "batchcount": 29, "loanvaultliquidationbatch": 29, "masternodest": 30, "mintedblock": 30, "bbdd23cfb429680fd10a3ce169595ff6123ef576bb936add069812528f73ceaa": 30, "mainnet": [31, 40, 41, 43, 46, 53, 55, 87, 89], "lightwallet": [31, 41, 43], "instanc": [31, 55, 92, 93], "ocaen": 31, "getpricefe": 32, "fiat": [32, 34], "f95b8a0ef321bcd310a9cc57b90d74fa4423895448678fbf8487807a125a08ef": 32, "gold": 32, "getoraclebyaddress": 32, "df1q8cz47rwefsxme29sstumepw374gzeu025gqcy4": 32, "poolpairdata": 33, "blockcommiss": 33, "pct": 33, "inpct": 33, "outpct": 33, "priceratio": 33, "ab": 33, "ba": 33, "totalliquid": 33, "tradeen": 33, "rewardpct": 33, "rewardloanpct": 33, "apr": 33, "volum": 33, "d30": 33, "h24": 33, "listpoolswap": 33, "poolpairid": 33, "fromamount": 33, "fromtokenid": 33, "poolswapfromtodata": 33, "swaptyp": 33, "listpoolswapsverbos": 33, "listpoolswapaggreg": 33, "24": [33, 34, 43], "bucket": 33, "3600": 33, "getswappabletoken": 33, "swappabl": 33, "fromtoken": 33, "tokenidentifi": 33, "swappabletoken": 33, "getbestpath": 33, "totokenid": 33, "totoken": 33, "bestpath": 33, "swappathpoolpair": 33, "estimatedreturn": 33, "estimatedreturnlessdexfe": 33, "75": 33, "getallpath": 33, "listdexpric": 33, "denomin": 33, "dex": [33, 37], "denominationpric": 33, "pricetick": 34, "getfeedact": 34, "getfe": 34, "getfeedwithinterv": 34, "graph": 34, "15": 34, "900": 34, "getoracl": 34, "priceoracl": 34, "oraclepricefe": 34, "af6294e9729c6a4f31439e86374541658f35f4cc372a51e06c725429d875ac5c": 35, "upstream": 36, "tvl": 37, "emiss": 37, "usdt": 37, "week": 37, "collateraltoken": 37, "openvault": 37, "openauct": 37, "getrewarddistribut": 37, "distribut": [37, 48], "unalloc": 37, "getsuppli": 37, "circul": 37, "getburn": 37, "auctionburn": 37, "paybackburn": 37, "paybackburntoken": 37, "dexfeetoken": 37, "dfipaybackfe": 37, "dfipaybacktoken": 37, "paybackfe": 37, "paybacktoken": 37, "dfip2203": 37, "dfip2206f": 37, "destruct": 38, "8d654cdaeba4633aa08e46f1aa258aae7234e89945145f61bc1bd5b342df1069": 39, "getvin": 39, "getvout": 39, "txbuilder": [40, 43, 46, 83], "defichaintestnet": [40, 41, 43, 51, 53, 55], "defichainpython": [40, 41, 46, 47, 49], "librari": [40, 41, 43, 46, 49], "mostli": 40, "layer": 40, "hand": 40, "insid": 40, "ifth": 40, "outcom": 40, "defitx": [40, 60, 61, 63, 64, 65, 66, 67, 74], "system": [40, 41], "exchang": [40, 65, 86], "But": [40, 43, 53], "much": 40, "instal": [40, 41], "beta": 40, "packag": [40, 43, 46, 53], "pip": [40, 41, 43, 46, 49], "0b3": 40, "private_kei": [40, 55, 72], "ctbazs4lcqitnnis3zw34umhtqgbwsiuuetckfhfpkxyalgpoy6b": 40, "from_wif": [40, 55], "testnet": [40, 41, 46, 53, 89], "get_account": [40, 43, 46, 55, 87], "get_p2wpkh": [40, 43, 46, 87], "vault_id": 40, "9429280b52dff4784465b3b00174fc12722907d6459bb7c50f2fad0dc5c20083": 40, "builder": [40, 44, 46, 80, 81, 82, 84, 85, 86, 87, 88, 89, 91], "tx_utxos_to_account": 40, "700": 40, "tx_create_vault": 40, "c150": [40, 89], "tx_deposit_to_vault": 40, "500": 40, "tx_take_loan": 40, "tx_take_loan_unsp": 40, "get_unsp": [40, 77, 78], "poolswapt": 40, "tx_poolswap": [40, 43], "googl": 40, "99999999": [40, 43], "txid_take_loan": 40, "send_tx": [40, 43, 46, 77, 78, 87], "few": 40, "txid_poolswap": 40, "break": [40, 41], "sleep": 40, "f": [40, 41, 53, 79], "small": 41, "mnemon": [41, 43, 46, 49, 54, 55, 87], "eric": [41, 46, 48, 49], "volz": [41, 46, 47, 48, 49], "pypi": [41, 43, 46, 49], "org": 41, "everyon": 41, "cli": 41, "l5njafbrq4nu7ao7a3ocrcrt3n5pnyifthey8a31hldy3cy7d6cb": 41, "disclaim": 41, "compromis": [41, 43], "disclos": 41, "loss": [41, 43], "THE": [41, 48], "AS": [41, 48], "warranti": [41, 48], "OF": [41, 48], "hdwallet": [41, 47, 49, 52, 54, 55], "generate_mnemon": [41, 49, 53, 54], "defichainmainnet": [41, 46, 49, 51, 53, 55, 87], "welcometext": 41, "nor": 41, "offlin": 41, "elif": 41, "mnemonicseedtext": 41, "mnemonicseedprompt": 41, "mnemonicse": 41, "from_mnemon": [41, 43, 46, 49, 53, 55, 87], "ngener": 41, "space": 41, "addresstypetext": 41, "choos": 41, "addresstyp": [41, 56, 57, 58, 59], "numberofaddressestext": 41, "numberofaddress": 41, "from_path": [41, 53, 55], "1129": [41, 53, 55], "legacy_address": [41, 55], "default_address": [41, 55], "bech32_address": [41, 49, 53, 55], "python": [43, 46], "pleas": 43, "access": 43, "stolen": 43, "don": 43, "understand": 43, "recommend": 43, "learn": 43, "mydefichain": 43, "faucet": 43, "simplic": 43, "On": [43, 53], "50": 43, "feel": 43, "responsibli": 43, "deputi": [43, 46, 87], "armi": 43, "pluck": 43, "artwork": 43, "galleri": 43, "bracket": 43, "dilemma": 43, "section": [43, 49], "silent": 43, "coconut": 43, "chimnei": 43, "ridg": 43, "graviti": 43, "cloth": 43, "foot": 43, "secret": 43, "worri": 43, "brother": 43, "capit": 43, "spread": 43, "cheap": 43, "8fx8neka5wtsxmnzi2ndznf8vbyf3r1uju": 43, "dbhkc6up7r85eqaysenq8gbcrhccpup2w6": 43, "df1qqnrhvlfqp8rd40j86fa8wsrpg8pgjdm2y35ddd": 43, "illustr": 43, "2dc570673498c9e138336bd392a6971fe0996441d194947887ef0318d07b12da": 43, "03a5c791ba2a9c2668fc10b095e742b971d7acd50ffa77d6b40b9974937cb6064": 43, "sourc": [43, 67, 77, 78, 87], "yourself": [43, 46], "datasourc": [43, 87], "hart": 43, "hole": 43, "therebi": 43, "almost": [43, 74], "tx_sendal": 43, "sendal": [43, 46, 88], "minu": 43, "distinguish": 43, "99": 43, "consol": 43, "1fcbdcd1b18753fb24dcaeb259fffeb84123e29e04db688b37522fbe8ce49365": 43, "21f16f151f688f222c380b27c95a594643794b4b51c136bbf0da42c34dfdf9db": 43, "283": 43, "282": 43, "marker": 43, "inputtyp": 43, "1d9de1fb561fab9d7243d37c0b9308955bc777434e6f408a82f816da4cb40586": 43, "ffffffff": [43, 73], "tf1qqnrhvlfqp8rd40j86fa8wsrpg8pgjdm2hpw7df": 43, "4999999254": 43, "lengthsignatur": 43, "72": 43, "3045022100b11e61ff38835e09e5f4b4e5417808b99e1ddd3ccf792a60f929db22d3a93a2802203a3a69be756a4451e9461b1d795a13f0c837e104cc7081017c3dfd844529c21c01": 43, "lengthpublickei": 43, "33": 43, "publickei": [43, 57, 58, 59, 75], "outputtyp": 43, "defitxtyp": 43, "typenam": 43, "op_defi_tx_pool_swap": 43, "73": 43, "addressfrom": [43, 46, 60, 63, 65, 66, 80, 84, 86, 89], "addressto": [43, 46, 63, 65, 66, 84, 86, 88, 89], "9999999999": [43, 86], "6a4c4d446654787316001404c7767d2009c6dabe47d27a77406141c289376a0000e1f5050000000016001404c7767d2009c6dabe47d27a77406141c289376a016300000000000000ffe0f50500000000": 43, "4999998972": 43, "001404c7767d2009c6dabe47d27a77406141c289376a": 43, "040000000001018605b44cda16f8828a406f4e4377c75b9508930b7cd343729dab1f56fbe19d1d0100000000ffffffff020000000000000000506a4c4d446654787316001404c7767d2009c6dabe47d27a77406141c289376a0000e1f5050000000016001404c7767d2009c6dabe47d27a77406141c289376a016300000000000000ffe0f5050000000000fced052a0100000016001404c7767d2009c6dabe47d27a77406141c289376a0002483045022100b11e61ff38835e09e5f4b4e5417808b99e1ddd3ccf792a60f929db22d3a93a2802203a3a69be756a4451e9461b1d795a13f0c837e104cc7081017c3dfd844529c21c012103a5c791ba2a9c2668fc10b095e742b971d7acd50ffa77d6b40b9974937cb6064e00000000": 43, "easili": [43, 46], "001": 43, "Of": 44, "effortlessli": 46, "archiv": 46, "varieti": 46, "clone": [46, 49], "repositori": [46, 49], "git": [46, 49], "empow": [46, 93], "deal": [46, 48], "everyth": [46, 92], "els": [46, 49], "df1qn6utdvuaq0yshc4sah6puzf0dnlfkc2c8ryme8": 46, "3000": 46, "infrastructur": [46, 87], "birthdai": 46, "research": 46, "lot": 46, "getbalac": 46, "utxo_bal": 46, "hierarch": [46, 55], "determinist": [46, 55, 71], "avocado": [46, 87], "fan": [46, 87], "step": [46, 87], "egg": [46, 87], "engag": [46, 87], "winter": [46, 87], "attitud": [46, 87], "carri": [46, 87], "regret": [46, 87], "mix": [46, 87], "bodi": [46, 87], "parti": [46, 87], "trip": [46, 87], "oppos": [46, 87, 93], "ga": [46, 87], "suspect": [46, 87], "blur": [46, 87], "trade": [46, 87], "get_p2pkh": 46, "8kvwa4ocfahdyunk8pxjs8xnddsxy6zy7j": 46, "get_p2sh": 46, "duimdov5jxg3qkcy9yi6petuutrvbrezu": 46, "df1qx52ql637w4t7uk2vjdatj3a24cnvuu4fkxryrr": 46, "get_privatekei": 46, "c72f08c17b475d641a711ef1e16bcdb0cc0c1210e6da846060b2e04d5c2299b3": 46, "get_wif": 46, "l3tu3bx5n8awgcdd14btmpgxq8h5vybbnoodrnesaonom64ypnr9": 46, "thank": [46, 47], "right": [46, 48, 50], "modul": [46, 80, 81, 82, 84, 85, 86, 88, 89], "offici": 46, "suggest": [46, 47, 87], "improv": [46, 47], "idea": [46, 47], "open": [46, 47, 50], "write": [46, 47, 81], "me": [46, 47], "twitter": 46, "leav": 46, "telegram": [46, 92], "oldschool": 46, "email": [46, 47], "repo": [46, 48], "agre": [46, 48], "bound": [46, 48], "mit": [46, 48], "tweet": 47, "reddit": 47, "introduct": 47, "copyright": 48, "c": 48, "2023": 48, "permiss": 48, "herebi": 48, "grant": 48, "charg": 48, "obtain": 48, "merg": 48, "sublicens": 48, "sell": 48, "permit": 48, "whom": 48, "furnish": 48, "notic": 48, "shall": 48, "substanti": 48, "portion": 48, "OR": 48, "impli": 48, "BUT": 48, "TO": 48, "merchant": 48, "fit": [48, 55], "FOR": 48, "AND": 48, "noninfring": 48, "IN": 48, "event": 48, "author": 48, "holder": 48, "BE": 48, "liabl": 48, "claim": 48, "damag": [48, 53], "liabil": 48, "tort": 48, "aris": 48, "WITH": 48, "fromaddress": 49, "toaddress": 49, "wisdom": 49, "obscur": 49, "scrub": 49, "travel": 49, "vessel": 49, "bore": 49, "solar": 49, "truth": 49, "quiz": 49, "exhibit": 49, "mail": 49, "announc": 49, "outer": 49, "mirror": 49, "rug": 49, "df1q95vyvvu05sgpaem7w8lwufxwnzdchwk9xr7j0i": 49, "develop": 50, "board": 50, "notion": 50, "derivationerror": 52, "error_messag": 52, "error_detail": 52, "bad": 52, "around": 53, "defichainregtest": [53, 55, 58], "seper": 53, "folder": [53, 92], "easiest": 53, "sceptr": [53, 54, 55], "capter": [53, 54, 55], "se": [53, 54, 55], "quenc": [53, 54, 55], "giraf": [53, 54, 55], "absolu": [53, 54, 55], "relatif": [53, 54, 55], "fleur": [53, 54, 55], "zoologi": [53, 54, 55], "muscl": [53, 54, 55], "sirop": [53, 54, 55], "sabot": [53, 54, 55], "parur": [53, 54, 55], "kzn333nbqsaaspycmntb8ssuzqjjiaj8wdrbzaagpnojcdtnjqfq": 53, "df1qwhruysa0t04vtcmyezrc6feddwg0f8fdc5dwy7": 53, "salt": 53, "diari": 53, "jealou": 53, "biologi": 53, "uncl": 53, "detect": 53, "carbon": 53, "shadow": 53, "pelican": 53, "unusu": [53, 93], "mansion": 53, "paper": [53, 55], "vehicl": 53, "panther": 53, "obviou": 53, "orchard": 53, "skill": 53, "ball": 53, "scare": 53, "jar": 53, "df1q8ysut4vvchwzfz852w2tw8mc0ev6az5twhv7fh": 53, "l4csqwy2iaewqqz5mdsu8pyls3ppp756aqdlrkmsfmg8h3gdkkwd": 53, "df1q93qkyxapl3crdgyum2xw8yc6w7fzyf7k8qx7rh": 53, "kxbpxwewk2m1w1nbjbpdhpr2nhgqnadwq4fb2g7ludw46xsa9653": 53, "df1q8tyn7e05hnzqzhg2rm2xntu8t74y79lqrk0vm6": 53, "l4q5thugq6zl5hrequaw8wbsnmuec6ylapkwym4pgocskq7num5w": 53, "df1q8h3geevwhqmk7njsrq80dqf7uzsshgrdr583zj": 53, "l5x97wjmsqdfjwbjwdtezbu1pf7woshhfh5ijbbx5pjfggidwpyd": 53, "df1qmnqh6j9p55y56cws5vnuu3lrr9k8dwhvrwzqmj": 53, "kza8sb5exvwu5ft5jbdjajgky7iivvct2t3h2mwbd8oqjkeuhbzl": 53, "7": 53, "df1qmzusk8ns4evrduu5phmr0vc2exectum38qc27h": 53, "l2hrsrmemufmnyghcvbofkc4tcm8js8td4xtw1qg6hwmhyxrbeak": 53, "df1qy4pq4m6aq8rcdr7mhd34urzrarpnulsd5udd0c": 53, "kww1cipxukdfbhy5mcxtcuzkxzeyhaffi1esjufmveicz2b2a8nm": 53, "df1quk3sjkw7sy3jyu7j74uugxt3fcg9juh7myhzga": 53, "l4hfajm13ejcik8krttsgafzsz7f4h65e2ch2q36zvsw1t9sf9kr": 53, "df1qhzd5vka5lyvwvaqntpn8yzpr7af6nddr7m5llx": 53, "l23ih2udeupauznjznpsrhjatsehqf6t4x9eweond72s5z5bzblq": 53, "generate_passphras": 54, "entropi": [54, 55, 93], "n39rpfa3qvf2tm2npyobpxnibfxjywtz": 54, "generate_entropi": 54, "strength": [54, 55, 93], "ee535b143b0d9d1f87546f9df0d06b1a": [54, 55], "languag": [54, 55, 93], "english": [54, 55, 93], "256": [54, 93], "french": [54, 93], "is_entropi": 54, "is_mnemon": 54, "get_entropy_strength": 54, "get_mnemonic_strength": 54, "get_mnemonic_languag": 54, "entropy_to_mnemon": 54, "korean": [54, 93], "\u1112\u1161\u11a8\u1105\u1167\u11a8": 54, "\u110b\u116c\u110e\u1175\u11b7": 54, "\u110c\u116e\u1106\u1175\u11ab": 54, "\u1109\u1173\u110b\u1171\u110e\u1175": 54, "\u110e\u116e\u11af\u110b\u1167\u11ab": 54, "\u110b\u1167\u11ab\u1109\u1173\u11b8": 54, "\u1100\u1173\u11ab\u1107\u1169\u11ab": 54, "\u110b\u1167\u110c\u1165\u11ab\u1112\u1175": 54, "\u110b\u116e\u11af\u110b\u1173\u11b7": 54, "\u110b\u1162\u11a8\u1109\u116e": 54, "\u1100\u1171\u1109\u1175\u11ab": 54, "\u1106\u1161\u1102\u116e\u1105\u1161": 54, "mnemonic_to_entropi": 54, "enropi": 54, "use_default_path": 55, "extend": 55, "static": [55, 56, 57, 58, 59, 72, 73, 74, 75, 79], "from_entropi": 55, "0x7f6c94b7be50": 55, "0x7f2f5698de50": 55, "from_se": 55, "8d5f4fe5b81a6a6a18b08603b6b3f59df9f4bbb25d10c55d23e0cbdc5ee385e5fddad9d7e6114f11afdec45928328081f9a598151a7613dc5f5a0c16a4612aa4": 55, "0x7f61d053fe50": 55, "from_xprivate_kei": 55, "xprivate_kei": 55, "xprivat": 55, "xprv9s21zrqh143k3xpguzpogjektrdjhkk6mubjo8v7revrzt83xjgnclpmojxuf9wjfkfuhr4sgvfgdshh4t9vmjjre9usbunk3lfnna31lgf": 55, "0x7f9c26fe6e50": 55, "from_xpublic_kei": 55, "xpublic_kei": 55, "xpublic": 55, "xpub661mymwaqrbcgstjb2mp3sb4studhd2x986ubxkjqa2qsftcvqzda98qezjcncht1aazcmsjip1hj16jh97q72rwyffinhmg8zq6kbb5paq": 55, "0x7fbd211bce50": 55, "kzshwujsrtwuuhbgpfmmxllydih7nhen6z7mkhxd5qnkuwac4ten": 55, "0x7f6fd2509e50": 55, "from_private_kei": 55, "6cd78b0d69eab1a47bfa53a52b9d8c4331e858b5d7a599270a95d9735fdb0b94": 55, "0x7ff405eebe50": 55, "from_public_kei": 55, "public_kei": 55, "02f93f58b97c3bb616645c3dda256ec946d87c45baf531984c022dd0fd1503b0a8": 55, "0x7fb8c47ece50": 55, "forget": 55, "swith": 55, "0x7ff968489e50": 55, "from_index": 55, "0x7feb0fbe9e50": 55, "root_xprivate_kei": 55, "xprv9s21zrqh143k3wydj3rfdz2nyuehmj42skahqn62guhz5hr5n2qzpkzlnzrrsydi4dwoebeqkyjizqdisnr3yan2ymmmwwojqp2psc4bplp": 55, "root_xpublic_kei": 55, "xpub661mymwaqrbcgs3gq4xfagy7xwunbbmsoy6jdkveffexxwbduaaew8jpefvhykjctv1zxfdv6spon41mvknmdtczpxcqjorwgjvede7me9n": 55, "clean_deriv": 55, "uncompress": 55, "uncommpres": 55, "ventur": 55, "blush": 55, "april": 55, "rigid": 55, "volcano": 55, "crack": 55, "polar": 55, "dash": 55, "5af8506eb2b42f63842402cf4a462c0c4200797ab707acc5c215aee8a276a2c1b52749070d113497b118fa5aa1f5f1260475e1b6b766c4e0b84108c5322f1a7a": 55, "compres": 55, "commpres": 55, "025af8506eb2b42f63842402cf4a462c0c4200797ab707acc5c215aee8a276a2c1": 55, "56605e027fdb039e86fabdf3057b117fcd2c82ceaaa997a4a47afdf03ce9b155": 55, "f24afe7fc1418815ee7fd256beb55518e7c34ecd": 55, "cryptocurr": 55, "06ea9f5dd74699c50626ea80c6cf29ebc0d7d7536a489924928d9a1bba0a01ff37339d82f80f863fc0a326d86b7258a2ebd9e05b76e94a9afc87a260e30cf02b": 55, "drivat": 55, "chain_cod": 55, "6a6fe745530a2a5a2834293fb7aeda2f8d9253cd3241a28139da74acdff25ee2": 55, "ead6524e1ee52c7750e5cb2fe3dc3ab30a49b0c3": 55, "finger_print": 55, "finger": 55, "ead6524": 55, "nest": 55, "dkyzyqdmn9tfedzy46mftstbqylnougqzi": 55, "8cvzbaqgu11dyposphyyjakhcfq3nsiys6": 55, "df1qatt9yns7u5k8w589evh78hp6kv9ynvxr2xlvpn": 55, "p2pkh_address": 55, "p2wpkh_address": 55, "p2sh_address": 55, "kxgkleymbfrsy7t3x31fmadgqduqgyvhuacle4o1lxokvwtms1wu": 55, "dict": 55, "imform": 55, "xprv9s21zrqh143k3erirhbmtz27fbxhssjdpjy3c7g7rxlv7jkgyewzo8inw7tcnc1p7754tnpgw3wbwnsy5keu2uqlywxpkfxzsbsdjwxrikf": 55, "xpub661mymwaqrbcg8wbxjimq7xqodnmrltukxteqvfizhstz6eq5nfplw2rmq96dg7mhgtwd3u6uufmy2xijtqh7rwkng7x1nb8qhyu4cfq3gr": 55, "xprv9zihfayvszfdonyejxccch1jtgvrfqd3vlxkrmsdaht1xmyzvw8ych4965hyfexnnnzahvnga2jfbsplyhnrmryegvpmn33ghxezy5cj5ff": 55, "xpub6di3egwpindw2h47qyjcypx31jlm5jltrzsvf9rej3qzqzt93usnk5ncwmqhkns6s1vgqlzz7gjnrpa55gsgyycc27wlorzfhasi8a8fg4": 55, "e6ec494e1eb0b254e0d0a8fe783ec89d0ba33a4ddf33bf9f521912c34dd84115eeb3b6a4c7fb78fbdc81ad05ff216f0e8445bcfa46b9a3975f3aa65b00bf8202": 55, "02e6ec494e1eb0b254e0d0a8fe783ec89d0ba33a4ddf33bf9f521912c34dd84115": 55, "1f2d96f945df65d442c86b08fd4355cd7d1894beab060f47437f7d2721080900": 55, "get_addresstyp": [56, 57, 58, 59], "baseaddress": 56, "from_scriptpublickei": [56, 57, 58, 59], "scriptpublickei": [56, 57, 58, 59], "univers": 56, "verify_address": 56, "addresserror": [56, 90], "from_publickei": [57, 58, 59], "from_privatekei": [57, 58, 59], "get_scriptpublickei": [57, 58, 59], "get_redeemscript": [57, 58, 59], "get_bytes_scriptpublickei": [57, 58, 59], "get_bytes_redeemscript": [57, 58, 59], "mintingoutputsstart": 60, "addressamountto": [60, 80, 81, 88], "addressamount": [60, 63, 65], "todo": [60, 75], "mvp": 60, "asspoolliquid": 65, "quantiti": 65, "schemeid": [66, 89], "remot": [67, 87], "estimate_fe": 69, "feeperbyt": [69, 87], "witt": 70, "sign_legacy_input": 71, "sign_segwit_input": 71, "sting": [72, 73, 74], "to_json": [72, 73, 74], "txdataoutput": 74, "txinput": [74, 80, 81, 82, 84, 85, 86, 88, 89], "uxto": 74, "inpu": 74, "stand": 74, "basedefitx": 74, "txp2wpkhinput": 75, "txp2shinput": 75, "hei": 75, "txbase": 75, "remotedata": [77, 78], "remotedatanod": [77, 87], "check_masternod": [77, 78], "test_tx": [77, 78, 87], "remotedataocean": [78, 87], "int_to_float": 79, "turn": 79, "eight": 79, "1111": 79, "00001111": 79, "122222222": 79, "22222222": 79, "shift": 79, "float_to_int": 79, "df1qw8c57c3c4u7k2h4gv2d5x4jr4qgq6cugg33g6": [80, 86, 88, 89], "df1qzfwy63ggj5jfpul7r04kn2ss8kjz2sda57fa4m": [80, 88], "76": 81, "hex_data": 81, "str_data": 81, "48656c6c6f2044656669676874657273": 81, "automaticli": 81, "hello": 81, "defight": 81, "1f4039ab714cf73ff1d92b58608ed20a73a799cde88c103b679bdafd83eb472b": 82, "33abc61982725be797f83b47da6f41a344f4d64879d84e31d87a91281070add8": 82, "8040fe5eaa75f942dabf57bcdace3a5b71e3eb4fab53467e064e870396913800": 84, "df1qrvrnk0zyaen8x3pfrza3yznwrrrv5y08rkgrk2": 84, "8hz4omoussmovrghtasqmb4q74wpeicyhc": 85, "4e5a3a891653b7ea017a0560f5c873bdf183f52a013606341faa2823c54a2d9c": 85, "df1qtmk8nad9n03nwmanqfpug94h3jqjn3gyytl3gl": 85, "df1qm8fgh8l9sa336jrdf40sghgthvsmagagc4tq9x": 86, "addressamountfrom": 86, "0001": 86, "built": 87, "pull": 87, "get_inputs_tx": 87, "get_address": 87, "get_datasourc": 87, "get_feeperbyt": 87, "min1000": 89, "min500": 89, "min350": 89, "min200": 89, "min175": 89, "c1000": 89, "c500": 89, "c350": 89, "c200": 89, "c175": 89, "5cbe99407674a689fa9b8a522462b7a4b3e7893f61453ce3fa77f1307f7d0600": 89, "withdrawn": 89, "defitxerror": 90, "deserializeerror": 90, "inputerror": 90, "keyerror": 90, "notyetsupportederror": 90, "rawtransactionerror": 90, "tokenerror": 90, "txbuildererror": 90, "verifyerror": 90, "advanc": 91, "log_level": 92, "telegram_token": 92, "telegram_chatid": 92, "four": 92, "chatid": 92, "wrong_address": 92, "shoulder": 93, "sight": 93, "apart": 93, "cours": 93, "eager": 93, "diesel": 93, "rescu": 93, "diagram": 93, "denial": 93, "fun": 93, "rocket": 93, "chapter": 93, "spider": 93, "paddl": 93, "benefit": 93, "purs": 93, "detect_languag": 93, "chinese_simplifi": 93, "chinese_tradit": 93, "italian": 93, "japanes": 93, "spanish": 93, "classmethod": 93, "list_languag": 93, "unambigu": 93, "As": 93, "bip39": 93, "therefor": 93, "224": 93, "randomli": 93}, "objects": {"defichain": [[51, 0, 1, "", "Account"], [10, 0, 1, "", "Node"], [31, 0, 1, "", "Ocean"], [55, 0, 1, "", "Wallet"], [92, 2, 0, "-", "logger"], [93, 2, 0, "-", "mnemonic"], [5, 2, 0, "-", "node"]], "defichain.Node": [[10, 1, 1, "", "decrypt_wallet"], [10, 1, 1, "", "load_wallet"], [10, 1, 1, "", "test_connection"]], "defichain.Wallet": [[55, 1, 1, "", "bech32_address"], [55, 1, 1, "", "chain_code"], [55, 1, 1, "", "clean_derivation"], [55, 1, 1, "", "compressed"], [55, 1, 1, "", "cryptocurrency"], [55, 1, 1, "", "decrypt"], [55, 1, 1, "", "default_address"], [55, 1, 1, "", "dumps"], [55, 1, 1, "", "encrypt"], [55, 1, 1, "", "entropy"], [55, 1, 1, "", "finger_print"], [55, 1, 1, "", "from_entropy"], [55, 1, 1, "", "from_index"], [55, 1, 1, "", "from_mnemonic"], [55, 1, 1, "", "from_path"], [55, 1, 1, "", "from_private_key"], [55, 1, 1, "", "from_public_key"], [55, 1, 1, "", "from_seed"], [55, 1, 1, "", "from_wif"], [55, 1, 1, "", "from_xprivate_key"], [55, 1, 1, "", "from_xpublic_key"], [55, 1, 1, "", "get_account"], [55, 1, 1, "", "hash"], [55, 1, 1, "", "language"], [55, 1, 1, "", "legacy_address"], [55, 1, 1, "", "mnemonic"], [55, 1, 1, "", "network"], [55, 1, 1, "", "p2pkh_address"], [55, 1, 1, "", "p2sh_address"], [55, 1, 1, "", "p2wpkh_address"], [55, 1, 1, "", "passphrase"], [55, 1, 1, "", "path"], [55, 1, 1, "", "private_key"], [55, 1, 1, "", "public_key"], [55, 1, 1, "", "root_xprivate_key"], [55, 1, 1, "", "root_xpublic_key"], [55, 1, 1, "", "seed"], [55, 1, 1, "", "semantic"], [55, 1, 1, "", "strength"], [55, 1, 1, "", "symbol"], [55, 1, 1, "", "uncompressed"], [55, 1, 1, "", "wif"]], "defichain.exceptions": [[52, 2, 0, "-", "hdwallet"], [0, 2, 0, "-", "http"], [90, 2, 0, "-", "transactions"]], "defichain.exceptions.hdwallet": [[52, 0, 1, "", "DerivationError"]], "defichain.exceptions.http": [[0, 0, 1, "", "BadMethod"], [0, 0, 1, "", "BadRequest"], [0, 0, 1, "", "Forbidden"], [0, 0, 1, "", "InternalServerError"], [0, 0, 1, "", "NotFound"], [0, 0, 1, "", "ServiceUnavailable"], [0, 0, 1, "", "Unauthorized"], [0, 0, 1, "", "UnprocessableEntity"], [0, 0, 1, "", "WrongParameters"]], "defichain.exceptions.transactions": [[90, 0, 1, "", "AddressError"], [90, 0, 1, "", "DefiTxError"], [90, 0, 1, "", "DeserializeError"], [90, 0, 1, "", "InputError"], [90, 0, 1, "", "KeyError"], [90, 0, 1, "", "NotYetSupportedError"], [90, 0, 1, "", "RawTransactionError"], [90, 0, 1, "", "TokenError"], [90, 0, 1, "", "TxBuilderError"], [90, 0, 1, "", "VerifyError"]], "defichain.hdwallet": [[54, 2, 0, "-", "utils"]], "defichain.hdwallet.utils": [[54, 3, 1, "", "entropy_to_mnemonic"], [54, 3, 1, "", "generate_entropy"], [54, 3, 1, "", "generate_mnemonic"], [54, 3, 1, "", "generate_passphrase"], [54, 3, 1, "", "get_entropy_strength"], [54, 3, 1, "", "get_mnemonic_language"], [54, 3, 1, "", "get_mnemonic_strength"], [54, 3, 1, "", "is_entropy"], [54, 3, 1, "", "is_mnemonic"], [54, 3, 1, "", "mnemonic_to_entropy"]], "defichain.logger": [[92, 0, 1, "", "Logger"]], "defichain.mnemonic": [[93, 0, 1, "", "Mnemonic"]], "defichain.mnemonic.Mnemonic": [[93, 1, 1, "", "check"], [93, 1, 1, "", "detect_language"], [93, 1, 1, "", "generate"], [93, 1, 1, "", "list_languages"]], "defichain.node": [[1, 0, 1, "", "Accounts"], [2, 0, 1, "", "Blockchain"], [5, 0, 1, "", "BuildAddressAmounts"], [5, 0, 1, "", "BuildAmounts"], [3, 0, 1, "", "Control"], [4, 0, 1, "", "Generating"], [6, 0, 1, "", "Loan"], [7, 0, 1, "", "Masternodes"], [8, 0, 1, "", "Mining"], [9, 0, 1, "", "Network"], [11, 0, 1, "", "Oracles"], [12, 0, 1, "", "Poolpair"], [13, 0, 1, "", "Proposals"], [15, 0, 1, "", "Rawtransactions"], [16, 0, 1, "", "Spv"], [17, 0, 1, "", "Stats"], [18, 0, 1, "", "Tokens"], [19, 0, 1, "", "Util"], [20, 0, 1, "", "Vault"], [21, 0, 1, "", "Wallet"], [22, 0, 1, "", "Zmq"]], "defichain.node.Accounts": [[1, 1, 1, "", "accounthistorycount"], [1, 1, 1, "", "accounttoaccount"], [1, 1, 1, "", "accounttoutxos"], [1, 1, 1, "", "executesmartcontract"], [1, 1, 1, "", "futureswap"], [1, 1, 1, "", "getaccount"], [1, 1, 1, "", "getaccounthistory"], [1, 1, 1, "", "getburninfo"], [1, 1, 1, "", "getpendingdusdswaps"], [1, 1, 1, "", "getpendingfutureswaps"], [1, 1, 1, "", "gettokenbalances"], [1, 1, 1, "", "listaccounthistory"], [1, 1, 1, "", "listaccounts"], [1, 1, 1, "", "listburnhistory"], [1, 1, 1, "", "listcommunitybalances"], [1, 1, 1, "", "listpendingdusdswaps"], [1, 1, 1, "", "listpendingfutureswaps"], [1, 1, 1, "", "sendtokenstoaddress"], [1, 1, 1, "", "sendutxosfrom"], [1, 1, 1, "", "utxostoaccount"], [1, 1, 1, "", "withdrawfutureswap"]], "defichain.node.Blockchain": [[2, 1, 1, "", "clearmempool"], [2, 1, 1, "", "getbestblockhash"], [2, 1, 1, "", "getblock"], [2, 1, 1, "", "getblockchaininfo"], [2, 1, 1, "", "getblockcount"], [2, 1, 1, "", "getblockfilter"], [2, 1, 1, "", "getblockhash"], [2, 1, 1, "", "getblockheader"], [2, 1, 1, "", "getblockstats"], [2, 1, 1, "", "getchaintips"], [2, 1, 1, "", "getchaintxstats"], [2, 1, 1, "", "getdifficulty"], [2, 1, 1, "", "getgov"], [2, 1, 1, "", "getmempoolancestors"], [2, 1, 1, "", "getmempooldescendants"], [2, 1, 1, "", "getmempoolentry"], [2, 1, 1, "", "getmempoolinfo"], [2, 1, 1, "", "getrawmempool"], [2, 1, 1, "", "gettxout"], [2, 1, 1, "", "gettxoutproof"], [2, 1, 1, "", "gettxoutsetinfo"], [2, 1, 1, "", "isappliedcustomtx"], [2, 1, 1, "", "listgovs"], [2, 1, 1, "", "listsmartcontracts"], [2, 1, 1, "", "preciousblock"], [2, 1, 1, "", "pruneblockchain"], [2, 1, 1, "", "savemempool"], [2, 1, 1, "", "scantxoutset"], [2, 1, 1, "", "setgov"], [2, 1, 1, "", "setgovheight"], [2, 1, 1, "", "unsetgov"], [2, 1, 1, "", "verifychain"], [2, 1, 1, "", "verifytxoutproof"]], "defichain.node.BuildAddressAmounts": [[5, 1, 1, "", "add"], [5, 1, 1, "", "build"]], "defichain.node.BuildAmounts": [[5, 1, 1, "", "add"], [5, 1, 1, "", "build"]], "defichain.node.Control": [[3, 1, 1, "", "getmemoryinfo"], [3, 1, 1, "", "getrpcinfo"], [3, 1, 1, "", "help"], [3, 1, 1, "", "logging"], [3, 1, 1, "", "stop"], [3, 1, 1, "", "uptime"]], "defichain.node.Generating": [[4, 1, 1, "", "generatetoaddress"]], "defichain.node.Loan": [[6, 1, 1, "", "createloanscheme"], [6, 1, 1, "", "destroyloanscheme"], [6, 1, 1, "", "getcollateraltoken"], [6, 1, 1, "", "getinterest"], [6, 1, 1, "", "getloaninfo"], [6, 1, 1, "", "getloanscheme"], [6, 1, 1, "", "getloantoken"], [6, 1, 1, "", "listcollateraltokens"], [6, 1, 1, "", "listloanschemes"], [6, 1, 1, "", "listloantokens"], [6, 1, 1, "", "paybackloan"], [6, 1, 1, "", "setcollateraltoken"], [6, 1, 1, "", "setdefaultloanscheme"], [6, 1, 1, "", "setloantoken"], [6, 1, 1, "", "takeloan"], [6, 1, 1, "", "updateloanscheme"], [6, 1, 1, "", "updateloantoken"]], "defichain.node.Masternodes": [[7, 1, 1, "", "createmasternode"], [7, 1, 1, "", "getactivemasternodecount"], [7, 1, 1, "", "getanchorteams"], [7, 1, 1, "", "getmasternode"], [7, 1, 1, "", "getmasternodeblocks"], [7, 1, 1, "", "listanchors"], [7, 1, 1, "", "listmasternodes"], [7, 1, 1, "", "resignmasternode"], [7, 1, 1, "", "updatemasternode"]], "defichain.node.Mining": [[8, 1, 1, "", "getblocktemplate"], [8, 1, 1, "", "getmininginfo"], [8, 1, 1, "", "getmintinginfo"], [8, 1, 1, "", "getnetworkhashps"], [8, 1, 1, "", "prioritisetransaction"], [8, 1, 1, "", "submitblock"], [8, 1, 1, "", "submitheader"]], "defichain.node.Network": [[9, 1, 1, "", "addnode"], [9, 1, 1, "", "clearbanned"], [9, 1, 1, "", "disconnectnode"], [9, 1, 1, "", "getaddednodeinfo"], [9, 1, 1, "", "getconnectioncount"], [9, 1, 1, "", "getnettotals"], [9, 1, 1, "", "getnetworkinfo"], [9, 1, 1, "", "getnodeaddresses"], [9, 1, 1, "", "getpeerinfo"], [9, 1, 1, "", "getversioninfo"], [9, 1, 1, "", "listbanned"], [9, 1, 1, "", "ping"], [9, 1, 1, "", "setban"], [9, 1, 1, "", "setnetworkactive"]], "defichain.node.Oracles": [[11, 1, 1, "", "appointoracle"], [11, 1, 1, "", "getdusdswapblock"], [11, 1, 1, "", "getfixedintervalprice"], [11, 1, 1, "", "getfutureswapblock"], [11, 1, 1, "", "getoracledata"], [11, 1, 1, "", "getprice"], [11, 1, 1, "", "listfixedintervalprices"], [11, 1, 1, "", "listlatestrawprices"], [11, 1, 1, "", "listoracles"], [11, 1, 1, "", "listprices"], [11, 1, 1, "", "removeoracle"], [11, 1, 1, "", "setoracledata"], [11, 1, 1, "", "updateoracle"]], "defichain.node.Poolpair": [[12, 1, 1, "", "addpoolliquidity"], [12, 1, 1, "", "compositeswap"], [12, 1, 1, "", "createpoolpair"], [12, 1, 1, "", "getpoolpair"], [12, 1, 1, "", "listpoolpairs"], [12, 1, 1, "", "listpoolshares"], [12, 1, 1, "", "poolswap"], [12, 1, 1, "", "removepoolliquidity"], [12, 1, 1, "", "testpoolswap"], [12, 1, 1, "", "updatepoolpair"]], "defichain.node.Proposals": [[13, 1, 1, "", "creategovcfp"], [13, 1, 1, "", "creategovvoc"], [13, 1, 1, "", "getgovproposal"], [13, 1, 1, "", "listgovproposals"], [13, 1, 1, "", "listgovproposalvotes"], [13, 1, 1, "", "votegov"]], "defichain.node.Rawtransactions": [[15, 1, 1, "", "analyzepsbt"], [15, 1, 1, "", "combinepsbt"], [15, 1, 1, "", "combinerawtransaction"], [15, 1, 1, "", "converttopsbt"], [15, 1, 1, "", "createpsbt"], [15, 1, 1, "", "createrawtransaction"], [15, 1, 1, "", "decodepsbt"], [15, 1, 1, "", "decoderawtransaction"], [15, 1, 1, "", "decodescript"], [15, 1, 1, "", "finalizepsbt"], [15, 1, 1, "", "fundrawtransaction"], [15, 1, 1, "", "getrawtransaction"], [15, 1, 1, "", "joinpsbts"], [15, 1, 1, "", "sendrawtransaction"], [15, 1, 1, "", "signrawtransactionwithkey"], [15, 1, 1, "", "testmempoolaccept"], [15, 1, 1, "", "utxoupdatepsbt"]], "defichain.node.Stats": [[17, 1, 1, "", "getrpcstats"], [17, 1, 1, "", "listrpcstats"]], "defichain.node.Tokens": [[18, 1, 1, "", "burntokens"], [18, 1, 1, "", "createtoken"], [18, 1, 1, "", "decodecustomtx"], [18, 1, 1, "", "getcustomtx"], [18, 1, 1, "", "gettoken"], [18, 1, 1, "", "listtokens"], [18, 1, 1, "", "minttokens"], [18, 1, 1, "", "updatetoken"]], "defichain.node.Util": [[19, 1, 1, "", "createmultisig"], [19, 1, 1, "", "deriveaddresses"], [19, 1, 1, "", "estimatesmartfee"], [19, 1, 1, "", "getdescriptorinfo"], [19, 1, 1, "", "signmessagewithprivkey"], [19, 1, 1, "", "validateaddress"], [19, 1, 1, "", "verifymessage"]], "defichain.node.Vault": [[20, 1, 1, "", "closevault"], [20, 1, 1, "", "createvault"], [20, 1, 1, "", "deposittovault"], [20, 1, 1, "", "estimatecollateral"], [20, 1, 1, "", "estimateloan"], [20, 1, 1, "", "estimatevault"], [20, 1, 1, "", "getvault"], [20, 1, 1, "", "listauctionhistory"], [20, 1, 1, "", "listauctions"], [20, 1, 1, "", "listvaulthistory"], [20, 1, 1, "", "listvaults"], [20, 1, 1, "", "paybackwithcollateral"], [20, 1, 1, "", "placeauctionbid"], [20, 1, 1, "", "updatevault"], [20, 1, 1, "", "withdrawfromvault"]], "defichain.node.Wallet": [[21, 1, 1, "", "abandontransaction"], [21, 1, 1, "", "abortrescan"], [21, 1, 1, "", "addmultisigaddress"], [21, 1, 1, "", "backupwallet"], [21, 1, 1, "", "bumpfee"], [21, 1, 1, "", "createwallet"], [21, 1, 1, "", "dumpprivkey"], [21, 1, 1, "", "dumpwallet"], [21, 1, 1, "", "encryptwallet"], [21, 1, 1, "", "getaddressesbylabel"], [21, 1, 1, "", "getaddressinfo"], [21, 1, 1, "", "getbalance"], [21, 1, 1, "", "getbalances"], [21, 1, 1, "", "getnewaddress"], [21, 1, 1, "", "getrawchangeaddress"], [21, 1, 1, "", "getreceivedbyaddress"], [21, 1, 1, "", "getreceivedbylabel"], [21, 1, 1, "", "gettransaction"], [21, 1, 1, "", "getunconfirmedbalance"], [21, 1, 1, "", "getwalletinfo"], [21, 1, 1, "", "importaddress"], [21, 1, 1, "", "importmulti"], [21, 1, 1, "", "importprivkey"], [21, 1, 1, "", "importprunedfunds"], [21, 1, 1, "", "importpubkey"], [21, 1, 1, "", "importwallet"], [21, 1, 1, "", "keypoolrefill"], [21, 1, 1, "", "listaddressgroupings"], [21, 1, 1, "", "listlabels"], [21, 1, 1, "", "listlockunspent"], [21, 1, 1, "", "listreceivedbyaddress"], [21, 1, 1, "", "listreceivedbylabel"], [21, 1, 1, "", "listsinceblock"], [21, 1, 1, "", "listtransactions"], [21, 1, 1, "", "listunspent"], [21, 1, 1, "", "listwalletdir"], [21, 1, 1, "", "listwallets"], [21, 1, 1, "", "loadwallet"], [21, 1, 1, "", "lockunspent"], [21, 1, 1, "", "removeprunedfunds"], [21, 1, 1, "", "rescanblockchain"], [21, 1, 1, "", "sendmany"], [21, 1, 1, "", "sendtoaddress"], [21, 1, 1, "", "sethdseed"], [21, 1, 1, "", "setlabel"], [21, 1, 1, "", "settxfee"], [21, 1, 1, "", "setwalletflag"], [21, 1, 1, "", "signmessage"], [21, 1, 1, "", "signrawtransactionwithwallet"], [21, 1, 1, "", "unloadwallet"], [21, 1, 1, "", "walletcreatefundedpsbt"], [21, 1, 1, "", "walletlock"], [21, 1, 1, "", "walletpassphrase"], [21, 1, 1, "", "walletpassphrasechange"], [21, 1, 1, "", "walletprocesspsbt"]], "defichain.node.Zmq": [[22, 1, 1, "", "getzmqnotifications"]], "defichain.ocean": [[23, 0, 1, "", "Address"], [24, 0, 1, "", "Blocks"], [25, 0, 1, "", "Consortium"], [26, 0, 1, "", "Fee"], [27, 0, 1, "", "Governance"], [29, 0, 1, "", "Loan"], [30, 0, 1, "", "Masternodes"], [32, 0, 1, "", "Oracles"], [33, 0, 1, "", "Poolpairs"], [34, 0, 1, "", "Prices"], [35, 0, 1, "", "RawTx"], [36, 0, 1, "", "Rpc"], [37, 0, 1, "", "Stats"], [38, 0, 1, "", "Tokens"], [39, 0, 1, "", "Transactions"]], "defichain.ocean.Address": [[23, 1, 1, "", "getAccountHistory"], [23, 1, 1, "", "getAggregation"], [23, 1, 1, "", "getBalance"], [23, 1, 1, "", "listAccountHistory"], [23, 1, 1, "", "listToken"], [23, 1, 1, "", "listTransaction"], [23, 1, 1, "", "listTransactionUnspent"], [23, 1, 1, "", "listVault"]], "defichain.ocean.Blocks": [[24, 1, 1, "", "get"], [24, 1, 1, "", "getTransactions"], [24, 1, 1, "", "list"]], "defichain.ocean.Consortium": [[25, 1, 1, "", "getAssetBreakdown"], [25, 1, 1, "", "getMemberStats"]], "defichain.ocean.Fee": [[26, 1, 1, "", "estimate"]], "defichain.ocean.Governance": [[27, 1, 1, "", "getGovProposal"], [27, 1, 1, "", "listGovProposalVotes"], [27, 1, 1, "", "listGovProposals"]], "defichain.ocean.Loan": [[29, 1, 1, "", "getCollateralToken"], [29, 1, 1, "", "getLoanToken"], [29, 1, 1, "", "getScheme"], [29, 1, 1, "", "getVault"], [29, 1, 1, "", "listAuction"], [29, 1, 1, "", "listCollateralToken"], [29, 1, 1, "", "listLoanToken"], [29, 1, 1, "", "listScheme"], [29, 1, 1, "", "listVault"], [29, 1, 1, "", "listVaultAuctionHistory"]], "defichain.ocean.Masternodes": [[30, 1, 1, "", "get"], [30, 1, 1, "", "list"]], "defichain.ocean.Oracles": [[32, 1, 1, "", "getOracleByAddress"], [32, 1, 1, "", "getPriceFeed"], [32, 1, 1, "", "list"]], "defichain.ocean.Poolpairs": [[33, 1, 1, "", "get"], [33, 1, 1, "", "getAllPaths"], [33, 1, 1, "", "getBestPath"], [33, 1, 1, "", "getSwappableTokens"], [33, 1, 1, "", "list"], [33, 1, 1, "", "listDexPrices"], [33, 1, 1, "", "listPoolSwapAggregates"], [33, 1, 1, "", "listPoolSwaps"], [33, 1, 1, "", "listPoolSwapsVerbose"]], "defichain.ocean.Prices": [[34, 1, 1, "", "get"], [34, 1, 1, "", "getFeed"], [34, 1, 1, "", "getFeedActive"], [34, 1, 1, "", "getFeedWithInterval"], [34, 1, 1, "", "getOracles"], [34, 1, 1, "", "list"]], "defichain.ocean.RawTx": [[35, 1, 1, "", "get"], [35, 1, 1, "", "send"], [35, 1, 1, "", "test"]], "defichain.ocean.Rpc": [[36, 1, 1, "", "call"]], "defichain.ocean.Stats": [[37, 1, 1, "", "get"], [37, 1, 1, "", "getBurn"], [37, 1, 1, "", "getRewardDistribution"], [37, 1, 1, "", "getSupply"]], "defichain.ocean.Tokens": [[38, 1, 1, "", "get"], [38, 1, 1, "", "list"]], "defichain.ocean.Transactions": [[39, 1, 1, "", "get"], [39, 1, 1, "", "getVins"], [39, 1, 1, "", "getVouts"]], "defichain.transactions.address": [[56, 0, 1, "", "Address"], [57, 0, 1, "", "P2PKH"], [58, 0, 1, "", "P2SH"], [59, 0, 1, "", "P2WPKH"]], "defichain.transactions.address.Address": [[56, 1, 1, "", "from_address"], [56, 1, 1, "", "from_scriptPublicKey"], [56, 1, 1, "", "get_addressType"], [56, 1, 1, "", "verify_address"]], "defichain.transactions.address.P2PKH": [[57, 1, 1, "", "from_privateKey"], [57, 1, 1, "", "from_publicKey"], [57, 1, 1, "", "from_scriptPublicKey"], [57, 1, 1, "", "get_addressType"], [57, 1, 1, "", "get_bytes_redeemScript"], [57, 1, 1, "", "get_bytes_scriptPublicKey"], [57, 1, 1, "", "get_redeemScript"], [57, 1, 1, "", "get_scriptPublicKey"]], "defichain.transactions.address.P2SH": [[58, 1, 1, "", "from_privateKey"], [58, 1, 1, "", "from_publicKey"], [58, 1, 1, "", "from_scriptPublicKey"], [58, 1, 1, "", "get_addressType"], [58, 1, 1, "", "get_bytes_redeemScript"], [58, 1, 1, "", "get_bytes_scriptPublicKey"], [58, 1, 1, "", "get_redeemScript"], [58, 1, 1, "", "get_scriptPublicKey"]], "defichain.transactions.address.P2WPKH": [[59, 1, 1, "", "from_privateKey"], [59, 1, 1, "", "from_publicKey"], [59, 1, 1, "", "from_scriptPublicKey"], [59, 1, 1, "", "get_addressType"], [59, 1, 1, "", "get_bytes_redeemScript"], [59, 1, 1, "", "get_bytes_scriptPublicKey"], [59, 1, 1, "", "get_redeemScript"], [59, 1, 1, "", "get_scriptPublicKey"]], "defichain.transactions.builder": [[87, 0, 1, "", "TxBuilder"]], "defichain.transactions.builder.TxBuilder": [[87, 1, 1, "", "get_account"], [87, 1, 1, "", "get_address"], [87, 1, 1, "", "get_dataSource"], [87, 1, 1, "", "get_feePerByte"], [87, 1, 1, "", "get_inputs_tx"], [87, 1, 1, "", "send_tx"], [87, 1, 1, "", "test_tx"]], "defichain.transactions.builder.modules": [[80, 0, 1, "", "Accounts"], [81, 0, 1, "", "Data"], [82, 0, 1, "", "Governance"], [84, 0, 1, "", "Loans"], [85, 0, 1, "", "Masternode"], [86, 0, 1, "", "Pool"], [88, 0, 1, "", "UTXO"], [89, 0, 1, "", "Vault"]], "defichain.transactions.builder.modules.Accounts": [[80, 1, 1, "", "accounttoaccount"], [80, 1, 1, "", "accounttoutxos"], [80, 1, 1, "", "utxostoaccount"]], "defichain.transactions.builder.modules.Data": [[81, 1, 1, "", "hex_data"], [81, 1, 1, "", "str_data"]], "defichain.transactions.builder.modules.Governance": [[82, 1, 1, "", "vote"]], "defichain.transactions.builder.modules.Loans": [[84, 1, 1, "", "paybackloan"], [84, 1, 1, "", "takeloan"]], "defichain.transactions.builder.modules.Masternode": [[85, 1, 1, "", "createmasternode"], [85, 1, 1, "", "resignmasternode"], [85, 1, 1, "", "updatemasternode"]], "defichain.transactions.builder.modules.Pool": [[86, 1, 1, "", "addpoolliquidity"], [86, 1, 1, "", "compositeswap"], [86, 1, 1, "", "poolswap"], [86, 1, 1, "", "removepoolliquidity"]], "defichain.transactions.builder.modules.UTXO": [[88, 1, 1, "", "send"], [88, 1, 1, "", "sendall"], [88, 1, 1, "", "sendmany"]], "defichain.transactions.builder.modules.Vault": [[89, 1, 1, "", "createvault"], [89, 1, 1, "", "deposittovault"], [89, 1, 1, "", "withdrawfromvault"]], "defichain.transactions.defitx": [[60, 0, 1, "", "AccountToAccount"], [60, 0, 1, "", "AccountToUtxos"], [65, 0, 1, "", "AddPoolLiquidity"], [60, 0, 1, "", "AnyAccountToAccount"], [66, 0, 1, "", "CloseVault"], [65, 0, 1, "", "CompositeSwap"], [61, 0, 1, "", "CreateCfp"], [64, 0, 1, "", "CreateMasternode"], [66, 0, 1, "", "CreateVault"], [61, 0, 1, "", "CreateVoc"], [66, 0, 1, "", "DepositToVault"], [63, 0, 1, "", "PaybackLoan"], [66, 0, 1, "", "PlaceAuctionBid"], [65, 0, 1, "", "PoolSwap"], [65, 0, 1, "", "RemovePoolLiquidity"], [64, 0, 1, "", "ResignMasternode"], [60, 0, 1, "", "SetFutureSwap"], [63, 0, 1, "", "TakeLoan"], [64, 0, 1, "", "UpdateMasternode"], [66, 0, 1, "", "UpdateVault"], [60, 0, 1, "", "UtxosToAccount"], [61, 0, 1, "", "Vote"], [66, 0, 1, "", "WithdrawFromVault"]], "defichain.transactions.keys": [[68, 0, 1, "", "PrivateKey"], [68, 0, 1, "", "PublicKey"]], "defichain.transactions.rawtransactions": [[72, 0, 1, "", "Transaction"], [74, 0, 1, "", "TxAddressOutput"], [73, 0, 1, "", "TxCoinbaseInput"], [74, 0, 1, "", "TxCoinbaseOutput"], [74, 0, 1, "", "TxDefiOutput"], [73, 0, 1, "", "TxInput"], [74, 0, 1, "", "TxOutput"], [73, 0, 1, "", "TxP2PKHInput"], [73, 0, 1, "", "TxP2SHInput"], [73, 0, 1, "", "TxP2WPKHInput"], [75, 0, 1, "", "Witness"], [75, 0, 1, "", "WitnessHash"], [69, 3, 1, "", "estimate_fee"]], "defichain.transactions.rawtransactions.Transaction": [[72, 1, 1, "", "deserialize"], [72, 1, 1, "", "sign"], [72, 1, 1, "", "to_json"], [72, 1, 1, "", "verify"]], "defichain.transactions.rawtransactions.TxAddressOutput": [[74, 1, 1, "", "deserialize"], [74, 1, 1, "", "to_json"]], "defichain.transactions.rawtransactions.TxCoinbaseInput": [[73, 1, 1, "", "deserialize"], [73, 1, 1, "", "to_json"]], "defichain.transactions.rawtransactions.TxCoinbaseOutput": [[74, 1, 1, "", "deserialize"], [74, 1, 1, "", "to_json"]], "defichain.transactions.rawtransactions.TxDefiOutput": [[74, 1, 1, "", "deserialize"], [74, 1, 1, "", "to_json"]], "defichain.transactions.rawtransactions.TxInput": [[73, 1, 1, "", "deserialize"], [73, 1, 1, "", "to_json"]], "defichain.transactions.rawtransactions.TxOutput": [[74, 1, 1, "", "deserialize"], [74, 1, 1, "", "to_json"]], "defichain.transactions.rawtransactions.TxP2PKHInput": [[73, 1, 1, "", "deserialize"], [73, 1, 1, "", "to_json"]], "defichain.transactions.rawtransactions.TxP2SHInput": [[73, 1, 1, "", "deserialize"], [73, 1, 1, "", "to_json"]], "defichain.transactions.rawtransactions.TxP2WPKHInput": [[73, 1, 1, "", "deserialize"], [73, 1, 1, "", "to_json"]], "defichain.transactions.rawtransactions.Witness": [[75, 1, 1, "", "deserialize"], [75, 1, 1, "", "verify"]], "defichain.transactions.rawtransactions.WitnessHash": [[75, 1, 1, "", "deserialize"], [75, 1, 1, "", "verify"]], "defichain.transactions.rawtransactions.sign": [[71, 3, 1, "", "sign_legacy_input"], [71, 3, 1, "", "sign_segwit_input"]], "defichain.transactions.remotedata": [[77, 0, 1, "", "RemoteDataNode"], [78, 0, 1, "", "RemoteDataOcean"]], "defichain.transactions.remotedata.RemoteDataNode": [[77, 1, 1, "", "check_masternode"], [77, 1, 1, "", "get_unspent"], [77, 1, 1, "", "send_tx"], [77, 1, 1, "", "test_tx"]], "defichain.transactions.remotedata.RemoteDataOcean": [[78, 1, 1, "", "check_masternode"], [78, 1, 1, "", "get_unspent"], [78, 1, 1, "", "send_tx"], [78, 1, 1, "", "test_tx"]], "defichain.transactions.utils": [[79, 0, 1, "", "Calculate"], [79, 0, 1, "", "Converter"], [79, 0, 1, "", "Token"], [79, 0, 1, "", "Verify"]], "defichain.transactions.utils.Converter": [[79, 1, 1, "", "float_to_int"], [79, 1, 1, "", "int_to_float"]]}, "objtypes": {"0": "py:class", "1": "py:method", "2": "py:module", "3": "py:function"}, "objnames": {"0": ["py", "class", "Python class"], "1": ["py", "method", "Python method"], "2": ["py", "module", "Python module"], "3": ["py", "function", "Python function"]}, "titleterms": {"http": 0, "except": [0, 52, 90], "account": [1, 43, 51, 60, 80], "blockchain": 2, "control": 3, "gener": [4, 43, 53], "node": [5, 10, 46, 49, 77], "rpc": [5, 36, 46], "new": [5, 28], "logger": [5, 28, 92], "avail": [5, 28], "modul": [5, 28, 83], "request": [5, 28, 49], "structur": [5, 28], "default": [5, 28], "input": [5, 28, 71, 73], "amount": [5, 91], "buildamount": 5, "address": [5, 23, 43, 49, 53, 56, 91], "buildaddressamount": 5, "loan": [6, 29, 63, 84], "masternod": [7, 30, 64, 85], "mine": 8, "network": [9, 43, 53], "oracl": [11, 32], "poolpair": [12, 33], "propos": 13, "raw": [14, 43, 70], "method": 14, "overview": 14, "rawtransact": 15, "spv": 16, "stat": [17, 37], "token": [18, 38, 79], "util": [19, 54, 79], "vault": [20, 66, 89], "wallet": [21, 43, 49, 52, 53, 55], "zmq": 22, "block": 24, "consortium": 25, "fee": [26, 69], "govern": [27, 61, 82], "ocean": [28, 31, 46, 49, 78], "pagin": 28, "size": 28, "next": [28, 47], "price": 34, "rawtx": 35, "transact": [39, 40, 43, 46, 70, 72, 73, 74, 83, 90, 91], "chain": 40, "extract": 41, "privat": [41, 53], "kei": [41, 53, 68], "exampl": [42, 45, 93], "basic": 43, "usag": 43, "Of": 43, "builder": [43, 83], "introduct": 43, "disclaim": [43, 46, 48], "inform": 43, "setup": [43, 49], "testnet": 43, "type": 43, "instal": [43, 46, 49], "build": 43, "1": [43, 46, 47], "depend": 43, "2": [43, 46], "3": [43, 46], "remot": [43, 76, 77, 78], "data": [43, 76, 77, 78, 81], "utxo": [43, 88], "defitx": [43, 62], "4": [43, 46], "view": 43, "5": 43, "send": 43, "full": 43, "code": 43, "guid": [44, 45], "featur": 46, "hdwallet": [46, 53], "commun": [46, 47], "licens": [46, 48], "telegram": 47, "twitter": 47, "resourc": 47, "announc": 47, "01": 47, "releas": 47, "v1": 47, "0": 47, "02": 47, "v2": 47, "03": 47, "bring": 47, "python": [47, 49], "defichain": [47, 49, 53], "level": 47, "cfp": 47, "2203": 47, "07": 47, "librari": 47, "800": 47, "dfi": 47, "ii": 47, "5000": 47, "quickstart": 49, "packag": 49, "make": 49, "get": [49, 53], "first": 49, "statu": 50, "task": 50, "oblig": 50, "path": 53, "import": 53, "lightwallet": 53, "compon": 53, "illustr": 53, "from": 53, "mnemon": [53, 93], "seed": 53, "iter": 53, "truth": 53, "p2pkh": 57, "p2sh": 58, "p2wpkh": 59, "utxostoaccount": 60, "accounttoutxo": 60, "accounttoaccount": 60, "anyaccounttoaccount": 60, "setfutureswap": 60, "createcfp": 61, "createvoc": 61, "vote": 61, "takeloan": 63, "paybackloan": 63, "createmasternod": 64, "resignmasternod": 64, "updatemasternod": 64, "pool": [65, 86], "poolswap": 65, "compositeswap": 65, "addpoolliquid": 65, "removepoolliquid": 65, "createvault": 66, "updatevault": 66, "deposittovault": 66, "withdrawfromvault": 66, "closevault": 66, "placeauctionbid": 66, "advanc": 67, "publickei": 68, "privatekei": 68, "estim": 69, "sign": 71, "legaci": 71, "segwit": 71, "txinput": 73, "txp2pkhinput": 73, "txp2shinput": 73, "txp2wpkhinput": 73, "txcoinbaseinput": 73, "output": 74, "txoutput": 74, "txaddressoutput": 74, "txdefioutput": 74, "txcoinbaseoutput": 74, "witt": 75, "witnesshash": 75, "wit": 75, "sourc": 76, "calcul": 79, "convert": 79, "verifi": 79, "txbuilder": 87}, "envversion": {"sphinx.domains.c": 2, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 8, "sphinx.domains.index": 1, "sphinx.domains.javascript": 2, "sphinx.domains.math": 2, "sphinx.domains.python": 3, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx": 57}, "alltitles": {"HTTP Exceptions": [[0, "module-defichain.exceptions.http"]], "Accounts": [[1, "accounts"], [60, "accounts"], [80, "accounts"]], "Blockchain": [[2, "blockchain"]], "Control": [[3, "control"]], "Generating": [[4, "generating"]], "Node / RPC": [[5, "node-rpc"]], "New Logger available": [[5, null], [28, null]], "Node Modules": [[5, "node-modules"]], "Request Structure": [[5, "request-structure"], [28, "request-structure"]], "Default Inputs": [[5, "default-inputs"], [28, "default-inputs"]], "Amounts": [[5, "amounts"], [91, "amounts"]], "BuildAmounts": [[5, "module-defichain.node"]], "Address Amount": [[5, "address-amount"], [91, "address-amount"]], "BuildAddressAmounts": [[5, "buildaddressamounts"]], "Inputs": [[5, "inputs"]], "Loan": [[6, "loan"], [29, "loan"]], "Masternodes": [[7, "masternodes"], [30, "masternodes"]], "Mining": [[8, "mining"]], "Network": [[9, "network"], [43, "network"]], "Node": [[10, "node"]], "Oracles": [[11, "oracles"], [32, "oracles"]], "Poolpair": [[12, "poolpair"]], "Proposals": [[13, "proposals"]], "Raw Methods Overview": [[14, "raw-methods-overview"]], "Methods": [[14, "methods"]], "Rawtransactions": [[15, "rawtransactions"]], "Spv": [[16, "spv"]], "Stats": [[17, "stats"], [37, "stats"]], "Tokens": [[18, "tokens"], [38, "tokens"]], "Util": [[19, "util"]], "Vault": [[20, "vault"], [66, "vault"], [89, "vault"]], "Wallet": [[21, "wallet"], [43, "wallet"], [55, "wallet"]], "Zmq": [[22, "zmq"]], "Address": [[23, "address"], [56, "address"]], "Blocks": [[24, "blocks"]], "Consortium": [[25, "consortium"]], "Fee": [[26, "fee"], [69, "fee"]], "Governance": [[27, "governance"], [61, "governance"], [82, "governance"]], "Ocean": [[28, "ocean"], [31, "ocean"]], "Ocean Modules": [[28, "ocean-modules"]], "Pagination": [[28, "pagination"]], "Size": [[28, "size"]], "Next": [[28, "next"]], "Poolpairs": [[33, "poolpairs"]], "Prices": [[34, "prices"]], "RawTx": [[35, "rawtx"]], "Rpc": [[36, "rpc"]], "Transactions": [[39, "transactions"], [91, "transactions"]], "Chain Transactions": [[40, "chain-transactions"]], "Extract Private Keys": [[41, "extract-private-keys"]], "Examples": [[42, "examples"]], "Basic Usage Of Transactions Builder": [[43, "basic-usage-of-transactions-builder"]], "Introduction": [[43, "introduction"]], "Disclaimer": [[43, null]], "General Information": [[43, "general-information"]], "Setup Testnet": [[43, "setup-testnet"]], "Address Types": [[43, "address-types"]], "Account": [[43, "account"], [51, "account"]], "Installation": [[43, "installation"], [46, "installation"]], "Building Raw Transaction": [[43, "building-raw-transaction"]], "1. Dependencies": [[43, "dependencies"]], "1.1 Wallet": [[43, "id1"]], "1.2 Account": [[43, "id2"]], "1.3 Remote Data": [[43, "remote-data"]], "2. Transaction Builder": [[43, "transaction-builder"]], "3. Build transaction": [[43, "build-transaction"]], "3.1 UTXO": [[43, "utxo"]], "3.2 DefiTx": [[43, "defitx"]], "4. View the transaction": [[43, "view-the-transaction"]], "5. Send transaction": [[43, "send-transaction"]], "Full Code": [[43, "full-code"]], "Guides": [[44, "guides"]], "Guides and Examples": [[45, "guides-and-examples"]], "Features": [[46, "features"]], "1. Node / RPC:": [[46, "node-rpc"]], "2. Ocean:": [[46, "ocean"]], "3. HDWallet:": [[46, "hdwallet"]], "4. Transactions:": [[46, "transactions"]], "Community": [[46, "community"], [47, "community"]], "License & Disclaimer": [[46, "license-disclaimer"], [48, "license-disclaimer"]], "Telegram": [[47, "telegram"]], "Twitter": [[47, "id1"]], "Community Resources": [[47, "community-resources"]], "Announcement 01: Release v1.0.0": [[47, null]], "Announcement 02: Release v2.0.0": [[47, null]], "Announcement 03: Bringing Python for Defichain to the next level!\ud83d\ude80\ud83d\udc0d": [[47, null]], "CFP-2203-07: DeFiChain Python Library (1 800 DFI)": [[47, null]], "Defichain Python Library II (5000 DFI)": [[47, null]], "Quickstart": [[49, "quickstart"]], "Install the Defichain Python Package": [[49, "install-the-defichain-python-package"]], "Make a request to the Node": [[49, "make-a-request-to-the-node"]], "Make a request to Ocean": [[49, "make-a-request-to-ocean"]], "Setup a wallet and get the first address": [[49, "setup-a-wallet-and-get-the-first-address"]], "Status and Tasks": [[50, "status-and-tasks"]], "Obligation": [[50, null]], "Status": [[50, "status"]], "Tasks": [[50, "tasks"]], "Wallet Exceptions": [[52, "module-defichain.exceptions.hdwallet"]], "HDWallet": [[53, "hdwallet"]], "Path": [[53, null]], "Import private keys": [[53, null]], "Defichain Lightwallet addresses": [[53, null]], "Wallet Components": [[53, "wallet-components"]], "Illustration": [[53, "illustration"]], "Get Networks": [[53, "get-networks"]], "Wallet from mnemonic seed": [[53, "wallet-from-mnemonic-seed"]], "Wallet from private key": [[53, "wallet-from-private-key"]], "Generate mnemonic seed": [[53, "generate-mnemonic-seed"]], "Iterate truth addresses and private keys": [[53, "iterate-truth-addresses-and-private-keys"]], "Utils": [[54, "module-defichain.hdwallet.utils"], [79, "utils"]], "Addresses": [[56, "addresses"]], "P2PKH": [[57, "p2pkh"]], "P2SH": [[58, "p2sh"]], "P2WPKH": [[59, "p2wpkh"]], "UtxosToAccount": [[60, "utxostoaccount"]], "AccountToUtxos": [[60, "accounttoutxos"]], "AccountToAccount": [[60, "accounttoaccount"]], "AnyAccountToAccount": [[60, "anyaccounttoaccount"]], "SetFutureSwap": [[60, "setfutureswap"]], "CreateCfp": [[61, "createcfp"]], "CreateVoc": [[61, "createvoc"]], "Vote": [[61, "vote"]], "DefiTx": [[62, "defitx"]], "Loans": [[63, "loans"], [84, "loans"]], "TakeLoan": [[63, "takeloan"]], "PaybackLoan": [[63, "paybackloan"]], "Masternode": [[64, "masternode"], [85, "masternode"]], "CreateMasternode": [[64, "createmasternode"]], "ResignMasternode": [[64, "resignmasternode"]], "UpdateMasternode": [[64, "updatemasternode"]], "Pool": [[65, "pool"], [86, "pool"]], "PoolSwap": [[65, "poolswap"]], "CompositeSwap": [[65, "compositeswap"]], "AddPoolLiquidity": [[65, "addpoolliquidity"]], "RemovePoolLiquidity": [[65, "removepoolliquidity"]], "CreateVault": [[66, "createvault"]], "UpdateVault": [[66, "updatevault"]], "DepositToVault": [[66, "deposittovault"]], "WithdrawFromVault": [[66, "withdrawfromvault"]], "CloseVault": [[66, "closevault"]], "PlaceAuctionBid": [[66, "placeauctionbid"]], "Advanced": [[67, "advanced"]], "Keys": [[68, "keys"]], "PublicKey": [[68, "publickey"]], "PrivateKey": [[68, "privatekey"]], "Estimate Fee": [[69, "estimate-fee"]], "Raw Transactions": [[70, "raw-transactions"]], "Sign": [[71, "sign"]], "Sign Legacy Input": [[71, "sign-legacy-input"]], "Sign Segwit Input": [[71, "sign-segwit-input"]], "Transaction": [[72, "transaction"]], "Transactions Inputs": [[73, "transactions-inputs"]], "TxInput": [[73, "txinput"]], "TxP2PKHInput": [[73, "txp2pkhinput"]], "TxP2SHInput": [[73, "txp2shinput"]], "TxP2WPKHInput": [[73, "txp2wpkhinput"]], "TxCoinbaseInput": [[73, "txcoinbaseinput"]], "Transactions Output": [[74, "transactions-output"]], "TxOutput": [[74, "txoutput"]], "TxAddressOutput": [[74, "txaddressoutput"]], "TxDefiOutput": [[74, "txdefioutput"]], "TxCoinbaseOutput": [[74, "txcoinbaseoutput"]], "Wittness": [[75, "wittness"]], "WitnessHash": [[75, "witnesshash"]], "Witness": [[75, "witness"]], "Remote Data Source": [[76, "remote-data-source"]], "Remote Data Node": [[77, "remote-data-node"]], "Remote Data Ocean": [[78, "remote-data-ocean"]], "Calculate": [[79, "calculate"]], "Converter": [[79, "converter"]], "Token": [[79, "token"]], "Verify": [[79, "verify"]], "Data": [[81, "data"]], "Transaction Builder": [[83, "transaction-builder"]], "Builder Modules": [[83, "builder-modules"]], "TxBuilder": [[87, "txbuilder"]], "UTXO": [[88, "utxo"]], "Transactions Exceptions": [[90, "transactions-exceptions"]], "Logger": [[92, "logger"]], "Mnemonic": [[93, "mnemonic"]], "Example": [[93, "example"]]}, "indexentries": {"badmethod (class in defichain.exceptions.http)": [[0, "defichain.exceptions.http.BadMethod"]], "badrequest (class in defichain.exceptions.http)": [[0, "defichain.exceptions.http.BadRequest"]], "forbidden (class in defichain.exceptions.http)": [[0, "defichain.exceptions.http.Forbidden"]], "internalservererror (class in defichain.exceptions.http)": [[0, "defichain.exceptions.http.InternalServerError"]], "notfound (class in defichain.exceptions.http)": [[0, "defichain.exceptions.http.NotFound"]], "serviceunavailable (class in defichain.exceptions.http)": [[0, "defichain.exceptions.http.ServiceUnavailable"]], "unauthorized (class in defichain.exceptions.http)": [[0, "defichain.exceptions.http.Unauthorized"]], "unprocessableentity (class in defichain.exceptions.http)": [[0, "defichain.exceptions.http.UnprocessableEntity"]], "wrongparameters (class in defichain.exceptions.http)": [[0, "defichain.exceptions.http.WrongParameters"]], "defichain.exceptions.http": [[0, "module-defichain.exceptions.http"]], "module": [[0, "module-defichain.exceptions.http"], [5, "module-defichain.node"], [52, "module-defichain.exceptions.hdwallet"], [54, "module-defichain.hdwallet.utils"], [90, "module-defichain.exceptions.transactions"], [92, "module-defichain.logger"], [93, "module-defichain.mnemonic"]], "accounts (class in defichain.node)": [[1, "defichain.node.Accounts"]], "accounthistorycount() (defichain.node.accounts method)": [[1, "defichain.node.Accounts.accounthistorycount"]], "accounttoaccount() (defichain.node.accounts method)": [[1, "defichain.node.Accounts.accounttoaccount"]], "accounttoutxos() (defichain.node.accounts method)": [[1, "defichain.node.Accounts.accounttoutxos"]], "executesmartcontract() (defichain.node.accounts method)": [[1, "defichain.node.Accounts.executesmartcontract"]], "futureswap() (defichain.node.accounts method)": [[1, "defichain.node.Accounts.futureswap"]], "getaccount() (defichain.node.accounts method)": [[1, "defichain.node.Accounts.getaccount"]], "getaccounthistory() (defichain.node.accounts method)": [[1, "defichain.node.Accounts.getaccounthistory"]], "getburninfo() (defichain.node.accounts method)": [[1, "defichain.node.Accounts.getburninfo"]], "getpendingdusdswaps() (defichain.node.accounts method)": [[1, "defichain.node.Accounts.getpendingdusdswaps"]], "getpendingfutureswaps() (defichain.node.accounts method)": [[1, "defichain.node.Accounts.getpendingfutureswaps"]], "gettokenbalances() (defichain.node.accounts method)": [[1, "defichain.node.Accounts.gettokenbalances"]], "listaccounthistory() (defichain.node.accounts method)": [[1, "defichain.node.Accounts.listaccounthistory"]], "listaccounts() (defichain.node.accounts method)": [[1, "defichain.node.Accounts.listaccounts"]], "listburnhistory() (defichain.node.accounts method)": [[1, "defichain.node.Accounts.listburnhistory"]], "listcommunitybalances() (defichain.node.accounts method)": [[1, "defichain.node.Accounts.listcommunitybalances"]], "listpendingdusdswaps() (defichain.node.accounts method)": [[1, "defichain.node.Accounts.listpendingdusdswaps"]], "listpendingfutureswaps() (defichain.node.accounts method)": [[1, "defichain.node.Accounts.listpendingfutureswaps"]], "sendtokenstoaddress() (defichain.node.accounts method)": [[1, "defichain.node.Accounts.sendtokenstoaddress"]], "sendutxosfrom() (defichain.node.accounts method)": [[1, "defichain.node.Accounts.sendutxosfrom"]], "utxostoaccount() (defichain.node.accounts method)": [[1, "defichain.node.Accounts.utxostoaccount"]], "withdrawfutureswap() (defichain.node.accounts method)": [[1, "defichain.node.Accounts.withdrawfutureswap"]], "blockchain (class in defichain.node)": [[2, "defichain.node.Blockchain"]], "clearmempool() (defichain.node.blockchain method)": [[2, "defichain.node.Blockchain.clearmempool"]], "getbestblockhash() (defichain.node.blockchain method)": [[2, "defichain.node.Blockchain.getbestblockhash"]], "getblock() (defichain.node.blockchain method)": [[2, "defichain.node.Blockchain.getblock"]], "getblockchaininfo() (defichain.node.blockchain method)": [[2, "defichain.node.Blockchain.getblockchaininfo"]], "getblockcount() (defichain.node.blockchain method)": [[2, "defichain.node.Blockchain.getblockcount"]], "getblockfilter() (defichain.node.blockchain method)": [[2, "defichain.node.Blockchain.getblockfilter"]], "getblockhash() (defichain.node.blockchain method)": [[2, "defichain.node.Blockchain.getblockhash"]], "getblockheader() (defichain.node.blockchain method)": [[2, "defichain.node.Blockchain.getblockheader"]], "getblockstats() (defichain.node.blockchain method)": [[2, "defichain.node.Blockchain.getblockstats"]], "getchaintips() (defichain.node.blockchain method)": [[2, "defichain.node.Blockchain.getchaintips"]], "getchaintxstats() (defichain.node.blockchain method)": [[2, "defichain.node.Blockchain.getchaintxstats"]], "getdifficulty() (defichain.node.blockchain method)": [[2, "defichain.node.Blockchain.getdifficulty"]], "getgov() (defichain.node.blockchain method)": [[2, "defichain.node.Blockchain.getgov"]], "getmempoolancestors() (defichain.node.blockchain method)": [[2, "defichain.node.Blockchain.getmempoolancestors"]], "getmempooldescendants() (defichain.node.blockchain method)": [[2, "defichain.node.Blockchain.getmempooldescendants"]], "getmempoolentry() (defichain.node.blockchain method)": [[2, "defichain.node.Blockchain.getmempoolentry"]], "getmempoolinfo() (defichain.node.blockchain method)": [[2, "defichain.node.Blockchain.getmempoolinfo"]], "getrawmempool() (defichain.node.blockchain method)": [[2, "defichain.node.Blockchain.getrawmempool"]], "gettxout() (defichain.node.blockchain method)": [[2, "defichain.node.Blockchain.gettxout"]], "gettxoutproof() (defichain.node.blockchain method)": [[2, "defichain.node.Blockchain.gettxoutproof"]], "gettxoutsetinfo() (defichain.node.blockchain method)": [[2, "defichain.node.Blockchain.gettxoutsetinfo"]], "isappliedcustomtx() (defichain.node.blockchain method)": [[2, "defichain.node.Blockchain.isappliedcustomtx"]], "listgovs() (defichain.node.blockchain method)": [[2, "defichain.node.Blockchain.listgovs"]], "listsmartcontracts() (defichain.node.blockchain method)": [[2, "defichain.node.Blockchain.listsmartcontracts"]], "preciousblock() (defichain.node.blockchain method)": [[2, "defichain.node.Blockchain.preciousblock"]], "pruneblockchain() (defichain.node.blockchain method)": [[2, "defichain.node.Blockchain.pruneblockchain"]], "savemempool() (defichain.node.blockchain method)": [[2, "defichain.node.Blockchain.savemempool"]], "scantxoutset() (defichain.node.blockchain method)": [[2, "defichain.node.Blockchain.scantxoutset"]], "setgov() (defichain.node.blockchain method)": [[2, "defichain.node.Blockchain.setgov"]], "setgovheight() (defichain.node.blockchain method)": [[2, "defichain.node.Blockchain.setgovheight"]], "unsetgov() (defichain.node.blockchain method)": [[2, "defichain.node.Blockchain.unsetgov"]], "verifychain() (defichain.node.blockchain method)": [[2, "defichain.node.Blockchain.verifychain"]], "verifytxoutproof() (defichain.node.blockchain method)": [[2, "defichain.node.Blockchain.verifytxoutproof"]], "control (class in defichain.node)": [[3, "defichain.node.Control"]], "getmemoryinfo() (defichain.node.control method)": [[3, "defichain.node.Control.getmemoryinfo"]], "getrpcinfo() (defichain.node.control method)": [[3, "defichain.node.Control.getrpcinfo"]], "help() (defichain.node.control method)": [[3, "defichain.node.Control.help"]], "logging() (defichain.node.control method)": [[3, "defichain.node.Control.logging"]], "stop() (defichain.node.control method)": [[3, "defichain.node.Control.stop"]], "uptime() (defichain.node.control method)": [[3, "defichain.node.Control.uptime"]], "generating (class in defichain.node)": [[4, "defichain.node.Generating"]], "generatetoaddress() (defichain.node.generating method)": [[4, "defichain.node.Generating.generatetoaddress"]], "buildaddressamounts (class in defichain.node)": [[5, "defichain.node.BuildAddressAmounts"]], "buildamounts (class in defichain.node)": [[5, "defichain.node.BuildAmounts"]], "add() (defichain.node.buildaddressamounts method)": [[5, "defichain.node.BuildAddressAmounts.add"]], "add() (defichain.node.buildamounts method)": [[5, "defichain.node.BuildAmounts.add"]], "build() (defichain.node.buildaddressamounts method)": [[5, "defichain.node.BuildAddressAmounts.build"]], "build() (defichain.node.buildamounts method)": [[5, "defichain.node.BuildAmounts.build"]], "defichain.node": [[5, "module-defichain.node"]], "loan (class in defichain.node)": [[6, "defichain.node.Loan"]], "createloanscheme() (defichain.node.loan method)": [[6, "defichain.node.Loan.createloanscheme"]], "destroyloanscheme() (defichain.node.loan method)": [[6, "defichain.node.Loan.destroyloanscheme"]], "getcollateraltoken() (defichain.node.loan method)": [[6, "defichain.node.Loan.getcollateraltoken"]], "getinterest() (defichain.node.loan method)": [[6, "defichain.node.Loan.getinterest"]], "getloaninfo() (defichain.node.loan method)": [[6, "defichain.node.Loan.getloaninfo"]], "getloanscheme() (defichain.node.loan method)": [[6, "defichain.node.Loan.getloanscheme"]], "getloantoken() (defichain.node.loan method)": [[6, "defichain.node.Loan.getloantoken"]], "listcollateraltokens() (defichain.node.loan method)": [[6, "defichain.node.Loan.listcollateraltokens"]], "listloanschemes() (defichain.node.loan method)": [[6, "defichain.node.Loan.listloanschemes"]], "listloantokens() (defichain.node.loan method)": [[6, "defichain.node.Loan.listloantokens"]], "paybackloan() (defichain.node.loan method)": [[6, "defichain.node.Loan.paybackloan"]], "setcollateraltoken() (defichain.node.loan method)": [[6, "defichain.node.Loan.setcollateraltoken"]], "setdefaultloanscheme() (defichain.node.loan method)": [[6, "defichain.node.Loan.setdefaultloanscheme"]], "setloantoken() (defichain.node.loan method)": [[6, "defichain.node.Loan.setloantoken"]], "takeloan() (defichain.node.loan method)": [[6, "defichain.node.Loan.takeloan"]], "updateloanscheme() (defichain.node.loan method)": [[6, "defichain.node.Loan.updateloanscheme"]], "updateloantoken() (defichain.node.loan method)": [[6, "defichain.node.Loan.updateloantoken"]], "masternodes (class in defichain.node)": [[7, "defichain.node.Masternodes"]], "createmasternode() (defichain.node.masternodes method)": [[7, "defichain.node.Masternodes.createmasternode"]], "getactivemasternodecount() (defichain.node.masternodes method)": [[7, "defichain.node.Masternodes.getactivemasternodecount"]], "getanchorteams() (defichain.node.masternodes method)": [[7, "defichain.node.Masternodes.getanchorteams"]], "getmasternode() (defichain.node.masternodes method)": [[7, "defichain.node.Masternodes.getmasternode"]], "getmasternodeblocks() (defichain.node.masternodes method)": [[7, "defichain.node.Masternodes.getmasternodeblocks"]], "listanchors() (defichain.node.masternodes method)": [[7, "defichain.node.Masternodes.listanchors"]], "listmasternodes() (defichain.node.masternodes method)": [[7, "defichain.node.Masternodes.listmasternodes"]], "resignmasternode() (defichain.node.masternodes method)": [[7, "defichain.node.Masternodes.resignmasternode"]], "updatemasternode() (defichain.node.masternodes method)": [[7, "defichain.node.Masternodes.updatemasternode"]], "mining (class in defichain.node)": [[8, "defichain.node.Mining"]], "getblocktemplate() (defichain.node.mining method)": [[8, "defichain.node.Mining.getblocktemplate"]], "getmininginfo() (defichain.node.mining method)": [[8, "defichain.node.Mining.getmininginfo"]], "getmintinginfo() (defichain.node.mining method)": [[8, "defichain.node.Mining.getmintinginfo"]], "getnetworkhashps() (defichain.node.mining method)": [[8, "defichain.node.Mining.getnetworkhashps"]], "prioritisetransaction() (defichain.node.mining method)": [[8, "defichain.node.Mining.prioritisetransaction"]], "submitblock() (defichain.node.mining method)": [[8, "defichain.node.Mining.submitblock"]], "submitheader() (defichain.node.mining method)": [[8, "defichain.node.Mining.submitheader"]], "network (class in defichain.node)": [[9, "defichain.node.Network"]], "addnode() (defichain.node.network method)": [[9, "defichain.node.Network.addnode"]], "clearbanned() (defichain.node.network method)": [[9, "defichain.node.Network.clearbanned"]], "disconnectnode() (defichain.node.network method)": [[9, "defichain.node.Network.disconnectnode"]], "getaddednodeinfo() (defichain.node.network method)": [[9, "defichain.node.Network.getaddednodeinfo"]], "getconnectioncount() (defichain.node.network method)": [[9, "defichain.node.Network.getconnectioncount"]], "getnettotals() (defichain.node.network method)": [[9, "defichain.node.Network.getnettotals"]], "getnetworkinfo() (defichain.node.network method)": [[9, "defichain.node.Network.getnetworkinfo"]], "getnodeaddresses() (defichain.node.network method)": [[9, "defichain.node.Network.getnodeaddresses"]], "getpeerinfo() (defichain.node.network method)": [[9, "defichain.node.Network.getpeerinfo"]], "getversioninfo() (defichain.node.network method)": [[9, "defichain.node.Network.getversioninfo"]], "listbanned() (defichain.node.network method)": [[9, "defichain.node.Network.listbanned"]], "ping() (defichain.node.network method)": [[9, "defichain.node.Network.ping"]], "setban() (defichain.node.network method)": [[9, "defichain.node.Network.setban"]], "setnetworkactive() (defichain.node.network method)": [[9, "defichain.node.Network.setnetworkactive"]], "node (class in defichain)": [[10, "defichain.Node"]], "decrypt_wallet() (defichain.node method)": [[10, "defichain.Node.decrypt_wallet"]], "load_wallet() (defichain.node method)": [[10, "defichain.Node.load_wallet"]], "test_connection() (defichain.node method)": [[10, "defichain.Node.test_connection"]], "oracles (class in defichain.node)": [[11, "defichain.node.Oracles"]], "appointoracle() (defichain.node.oracles method)": [[11, "defichain.node.Oracles.appointoracle"]], "getdusdswapblock() (defichain.node.oracles method)": [[11, "defichain.node.Oracles.getdusdswapblock"]], "getfixedintervalprice() (defichain.node.oracles method)": [[11, "defichain.node.Oracles.getfixedintervalprice"]], "getfutureswapblock() (defichain.node.oracles method)": [[11, "defichain.node.Oracles.getfutureswapblock"]], "getoracledata() (defichain.node.oracles method)": [[11, "defichain.node.Oracles.getoracledata"]], "getprice() (defichain.node.oracles method)": [[11, "defichain.node.Oracles.getprice"]], "listfixedintervalprices() (defichain.node.oracles method)": [[11, "defichain.node.Oracles.listfixedintervalprices"]], "listlatestrawprices() (defichain.node.oracles method)": [[11, "defichain.node.Oracles.listlatestrawprices"]], "listoracles() (defichain.node.oracles method)": [[11, "defichain.node.Oracles.listoracles"]], "listprices() (defichain.node.oracles method)": [[11, "defichain.node.Oracles.listprices"]], "removeoracle() (defichain.node.oracles method)": [[11, "defichain.node.Oracles.removeoracle"]], "setoracledata() (defichain.node.oracles method)": [[11, "defichain.node.Oracles.setoracledata"]], "updateoracle() (defichain.node.oracles method)": [[11, "defichain.node.Oracles.updateoracle"]], "poolpair (class in defichain.node)": [[12, "defichain.node.Poolpair"]], "addpoolliquidity() (defichain.node.poolpair method)": [[12, "defichain.node.Poolpair.addpoolliquidity"]], "compositeswap() (defichain.node.poolpair method)": [[12, "defichain.node.Poolpair.compositeswap"]], "createpoolpair() (defichain.node.poolpair method)": [[12, "defichain.node.Poolpair.createpoolpair"]], "getpoolpair() (defichain.node.poolpair method)": [[12, "defichain.node.Poolpair.getpoolpair"]], "listpoolpairs() (defichain.node.poolpair method)": [[12, "defichain.node.Poolpair.listpoolpairs"]], "listpoolshares() (defichain.node.poolpair method)": [[12, "defichain.node.Poolpair.listpoolshares"]], "poolswap() (defichain.node.poolpair method)": [[12, "defichain.node.Poolpair.poolswap"]], "removepoolliquidity() (defichain.node.poolpair method)": [[12, "defichain.node.Poolpair.removepoolliquidity"]], "testpoolswap() (defichain.node.poolpair method)": [[12, "defichain.node.Poolpair.testpoolswap"]], "updatepoolpair() (defichain.node.poolpair method)": [[12, "defichain.node.Poolpair.updatepoolpair"]], "proposals (class in defichain.node)": [[13, "defichain.node.Proposals"]], "creategovcfp() (defichain.node.proposals method)": [[13, "defichain.node.Proposals.creategovcfp"]], "creategovvoc() (defichain.node.proposals method)": [[13, "defichain.node.Proposals.creategovvoc"]], "getgovproposal() (defichain.node.proposals method)": [[13, "defichain.node.Proposals.getgovproposal"]], "listgovproposals() (defichain.node.proposals method)": [[13, "defichain.node.Proposals.listgovproposals"]], "listgovproposalvotes() (defichain.node.proposals method)": [[13, "defichain.node.Proposals.listgovproposalvotes"]], "votegov() (defichain.node.proposals method)": [[13, "defichain.node.Proposals.votegov"]], "rawtransactions (class in defichain.node)": [[15, "defichain.node.Rawtransactions"]], "analyzepsbt() (defichain.node.rawtransactions method)": [[15, "defichain.node.Rawtransactions.analyzepsbt"]], "combinepsbt() (defichain.node.rawtransactions method)": [[15, "defichain.node.Rawtransactions.combinepsbt"]], "combinerawtransaction() (defichain.node.rawtransactions method)": [[15, "defichain.node.Rawtransactions.combinerawtransaction"]], "converttopsbt() (defichain.node.rawtransactions method)": [[15, "defichain.node.Rawtransactions.converttopsbt"]], "createpsbt() (defichain.node.rawtransactions method)": [[15, "defichain.node.Rawtransactions.createpsbt"]], "createrawtransaction() (defichain.node.rawtransactions method)": [[15, "defichain.node.Rawtransactions.createrawtransaction"]], "decodepsbt() (defichain.node.rawtransactions method)": [[15, "defichain.node.Rawtransactions.decodepsbt"]], "decoderawtransaction() (defichain.node.rawtransactions method)": [[15, "defichain.node.Rawtransactions.decoderawtransaction"]], "decodescript() (defichain.node.rawtransactions method)": [[15, "defichain.node.Rawtransactions.decodescript"]], "finalizepsbt() (defichain.node.rawtransactions method)": [[15, "defichain.node.Rawtransactions.finalizepsbt"]], "fundrawtransaction() (defichain.node.rawtransactions method)": [[15, "defichain.node.Rawtransactions.fundrawtransaction"]], "getrawtransaction() (defichain.node.rawtransactions method)": [[15, "defichain.node.Rawtransactions.getrawtransaction"]], "joinpsbts() (defichain.node.rawtransactions method)": [[15, "defichain.node.Rawtransactions.joinpsbts"]], "sendrawtransaction() (defichain.node.rawtransactions method)": [[15, "defichain.node.Rawtransactions.sendrawtransaction"]], "signrawtransactionwithkey() (defichain.node.rawtransactions method)": [[15, "defichain.node.Rawtransactions.signrawtransactionwithkey"]], "testmempoolaccept() (defichain.node.rawtransactions method)": [[15, "defichain.node.Rawtransactions.testmempoolaccept"]], "utxoupdatepsbt() (defichain.node.rawtransactions method)": [[15, "defichain.node.Rawtransactions.utxoupdatepsbt"]], "spv (class in defichain.node)": [[16, "defichain.node.Spv"]], "stats (class in defichain.node)": [[17, "defichain.node.Stats"]], "getrpcstats() (defichain.node.stats method)": [[17, "defichain.node.Stats.getrpcstats"]], "listrpcstats() (defichain.node.stats method)": [[17, "defichain.node.Stats.listrpcstats"]], "tokens (class in defichain.node)": [[18, "defichain.node.Tokens"]], "burntokens() (defichain.node.tokens method)": [[18, "defichain.node.Tokens.burntokens"]], "createtoken() (defichain.node.tokens method)": [[18, "defichain.node.Tokens.createtoken"]], "decodecustomtx() (defichain.node.tokens method)": [[18, "defichain.node.Tokens.decodecustomtx"]], "getcustomtx() (defichain.node.tokens method)": [[18, "defichain.node.Tokens.getcustomtx"]], "gettoken() (defichain.node.tokens method)": [[18, "defichain.node.Tokens.gettoken"]], "listtokens() (defichain.node.tokens method)": [[18, "defichain.node.Tokens.listtokens"]], "minttokens() (defichain.node.tokens method)": [[18, "defichain.node.Tokens.minttokens"]], "updatetoken() (defichain.node.tokens method)": [[18, "defichain.node.Tokens.updatetoken"]], "util (class in defichain.node)": [[19, "defichain.node.Util"]], "createmultisig() (defichain.node.util method)": [[19, "defichain.node.Util.createmultisig"]], "deriveaddresses() (defichain.node.util method)": [[19, "defichain.node.Util.deriveaddresses"]], "estimatesmartfee() (defichain.node.util method)": [[19, "defichain.node.Util.estimatesmartfee"]], "getdescriptorinfo() (defichain.node.util method)": [[19, "defichain.node.Util.getdescriptorinfo"]], "signmessagewithprivkey() (defichain.node.util method)": [[19, "defichain.node.Util.signmessagewithprivkey"]], "validateaddress() (defichain.node.util method)": [[19, "defichain.node.Util.validateaddress"]], "verifymessage() (defichain.node.util method)": [[19, "defichain.node.Util.verifymessage"]], "vault (class in defichain.node)": [[20, "defichain.node.Vault"]], "closevault() (defichain.node.vault method)": [[20, "defichain.node.Vault.closevault"]], "createvault() (defichain.node.vault method)": [[20, "defichain.node.Vault.createvault"]], "deposittovault() (defichain.node.vault method)": [[20, "defichain.node.Vault.deposittovault"]], "estimatecollateral() (defichain.node.vault method)": [[20, "defichain.node.Vault.estimatecollateral"]], "estimateloan() (defichain.node.vault method)": [[20, "defichain.node.Vault.estimateloan"]], "estimatevault() (defichain.node.vault method)": [[20, "defichain.node.Vault.estimatevault"]], "getvault() (defichain.node.vault method)": [[20, "defichain.node.Vault.getvault"]], "listauctionhistory() (defichain.node.vault method)": [[20, "defichain.node.Vault.listauctionhistory"]], "listauctions() (defichain.node.vault method)": [[20, "defichain.node.Vault.listauctions"]], "listvaulthistory() (defichain.node.vault method)": [[20, "defichain.node.Vault.listvaulthistory"]], "listvaults() (defichain.node.vault method)": [[20, "defichain.node.Vault.listvaults"]], "paybackwithcollateral() (defichain.node.vault method)": [[20, "defichain.node.Vault.paybackwithcollateral"]], "placeauctionbid() (defichain.node.vault method)": [[20, "defichain.node.Vault.placeauctionbid"]], "updatevault() (defichain.node.vault method)": [[20, "defichain.node.Vault.updatevault"]], "withdrawfromvault() (defichain.node.vault method)": [[20, "defichain.node.Vault.withdrawfromvault"]], "wallet (class in defichain.node)": [[21, "defichain.node.Wallet"]], "abandontransaction() (defichain.node.wallet method)": [[21, "defichain.node.Wallet.abandontransaction"]], "abortrescan() (defichain.node.wallet method)": [[21, "defichain.node.Wallet.abortrescan"]], "addmultisigaddress() (defichain.node.wallet method)": [[21, "defichain.node.Wallet.addmultisigaddress"]], "backupwallet() (defichain.node.wallet method)": [[21, "defichain.node.Wallet.backupwallet"]], "bumpfee() (defichain.node.wallet method)": [[21, "defichain.node.Wallet.bumpfee"]], "createwallet() (defichain.node.wallet method)": [[21, "defichain.node.Wallet.createwallet"]], "dumpprivkey() (defichain.node.wallet method)": [[21, "defichain.node.Wallet.dumpprivkey"]], "dumpwallet() (defichain.node.wallet method)": [[21, "defichain.node.Wallet.dumpwallet"]], "encryptwallet() (defichain.node.wallet method)": [[21, "defichain.node.Wallet.encryptwallet"]], "getaddressesbylabel() (defichain.node.wallet method)": [[21, "defichain.node.Wallet.getaddressesbylabel"]], "getaddressinfo() (defichain.node.wallet method)": [[21, "defichain.node.Wallet.getaddressinfo"]], "getbalance() (defichain.node.wallet method)": [[21, "defichain.node.Wallet.getbalance"]], "getbalances() (defichain.node.wallet method)": [[21, "defichain.node.Wallet.getbalances"]], "getnewaddress() (defichain.node.wallet method)": [[21, "defichain.node.Wallet.getnewaddress"]], "getrawchangeaddress() (defichain.node.wallet method)": [[21, "defichain.node.Wallet.getrawchangeaddress"]], "getreceivedbyaddress() (defichain.node.wallet method)": [[21, "defichain.node.Wallet.getreceivedbyaddress"]], "getreceivedbylabel() (defichain.node.wallet method)": [[21, "defichain.node.Wallet.getreceivedbylabel"]], "gettransaction() (defichain.node.wallet method)": [[21, "defichain.node.Wallet.gettransaction"]], "getunconfirmedbalance() (defichain.node.wallet method)": [[21, "defichain.node.Wallet.getunconfirmedbalance"]], "getwalletinfo() (defichain.node.wallet method)": [[21, "defichain.node.Wallet.getwalletinfo"]], "importaddress() (defichain.node.wallet method)": [[21, "defichain.node.Wallet.importaddress"]], "importmulti() (defichain.node.wallet method)": [[21, "defichain.node.Wallet.importmulti"]], "importprivkey() (defichain.node.wallet method)": [[21, "defichain.node.Wallet.importprivkey"]], "importprunedfunds() (defichain.node.wallet method)": [[21, "defichain.node.Wallet.importprunedfunds"]], "importpubkey() (defichain.node.wallet method)": [[21, "defichain.node.Wallet.importpubkey"]], "importwallet() (defichain.node.wallet method)": [[21, "defichain.node.Wallet.importwallet"]], "keypoolrefill() (defichain.node.wallet method)": [[21, "defichain.node.Wallet.keypoolrefill"]], "listaddressgroupings() (defichain.node.wallet method)": [[21, "defichain.node.Wallet.listaddressgroupings"]], "listlabels() (defichain.node.wallet method)": [[21, "defichain.node.Wallet.listlabels"]], "listlockunspent() (defichain.node.wallet method)": [[21, "defichain.node.Wallet.listlockunspent"]], "listreceivedbyaddress() (defichain.node.wallet method)": [[21, "defichain.node.Wallet.listreceivedbyaddress"]], "listreceivedbylabel() (defichain.node.wallet method)": [[21, "defichain.node.Wallet.listreceivedbylabel"]], "listsinceblock() (defichain.node.wallet method)": [[21, "defichain.node.Wallet.listsinceblock"]], "listtransactions() (defichain.node.wallet method)": [[21, "defichain.node.Wallet.listtransactions"]], "listunspent() (defichain.node.wallet method)": [[21, "defichain.node.Wallet.listunspent"]], "listwalletdir() (defichain.node.wallet method)": [[21, "defichain.node.Wallet.listwalletdir"]], "listwallets() (defichain.node.wallet method)": [[21, "defichain.node.Wallet.listwallets"]], "loadwallet() (defichain.node.wallet method)": [[21, "defichain.node.Wallet.loadwallet"]], "lockunspent() (defichain.node.wallet method)": [[21, "defichain.node.Wallet.lockunspent"]], "removeprunedfunds() (defichain.node.wallet method)": [[21, "defichain.node.Wallet.removeprunedfunds"]], "rescanblockchain() (defichain.node.wallet method)": [[21, "defichain.node.Wallet.rescanblockchain"]], "sendmany() (defichain.node.wallet method)": [[21, "defichain.node.Wallet.sendmany"]], "sendtoaddress() (defichain.node.wallet method)": [[21, "defichain.node.Wallet.sendtoaddress"]], "sethdseed() (defichain.node.wallet method)": [[21, "defichain.node.Wallet.sethdseed"]], "setlabel() (defichain.node.wallet method)": [[21, "defichain.node.Wallet.setlabel"]], "settxfee() (defichain.node.wallet method)": [[21, "defichain.node.Wallet.settxfee"]], "setwalletflag() (defichain.node.wallet method)": [[21, "defichain.node.Wallet.setwalletflag"]], "signmessage() (defichain.node.wallet method)": [[21, "defichain.node.Wallet.signmessage"]], "signrawtransactionwithwallet() (defichain.node.wallet method)": [[21, "defichain.node.Wallet.signrawtransactionwithwallet"]], "unloadwallet() (defichain.node.wallet method)": [[21, "defichain.node.Wallet.unloadwallet"]], "walletcreatefundedpsbt() (defichain.node.wallet method)": [[21, "defichain.node.Wallet.walletcreatefundedpsbt"]], "walletlock() (defichain.node.wallet method)": [[21, "defichain.node.Wallet.walletlock"]], "walletpassphrase() (defichain.node.wallet method)": [[21, "defichain.node.Wallet.walletpassphrase"]], "walletpassphrasechange() (defichain.node.wallet method)": [[21, "defichain.node.Wallet.walletpassphrasechange"]], "walletprocesspsbt() (defichain.node.wallet method)": [[21, "defichain.node.Wallet.walletprocesspsbt"]], "zmq (class in defichain.node)": [[22, "defichain.node.Zmq"]], "getzmqnotifications() (defichain.node.zmq method)": [[22, "defichain.node.Zmq.getzmqnotifications"]], "address (class in defichain.ocean)": [[23, "defichain.ocean.Address"]], "getaccounthistory() (defichain.ocean.address method)": [[23, "defichain.ocean.Address.getAccountHistory"]], "getaggregation() (defichain.ocean.address method)": [[23, "defichain.ocean.Address.getAggregation"]], "getbalance() (defichain.ocean.address method)": [[23, "defichain.ocean.Address.getBalance"]], "listaccounthistory() (defichain.ocean.address method)": [[23, "defichain.ocean.Address.listAccountHistory"]], "listtoken() (defichain.ocean.address method)": [[23, "defichain.ocean.Address.listToken"]], "listtransaction() (defichain.ocean.address method)": [[23, "defichain.ocean.Address.listTransaction"]], "listtransactionunspent() (defichain.ocean.address method)": [[23, "defichain.ocean.Address.listTransactionUnspent"]], "listvault() (defichain.ocean.address method)": [[23, "defichain.ocean.Address.listVault"]], "blocks (class in defichain.ocean)": [[24, "defichain.ocean.Blocks"]], "get() (defichain.ocean.blocks method)": [[24, "defichain.ocean.Blocks.get"]], "gettransactions() (defichain.ocean.blocks method)": [[24, "defichain.ocean.Blocks.getTransactions"]], "list() (defichain.ocean.blocks method)": [[24, "defichain.ocean.Blocks.list"]], "consortium (class in defichain.ocean)": [[25, "defichain.ocean.Consortium"]], "getassetbreakdown() (defichain.ocean.consortium method)": [[25, "defichain.ocean.Consortium.getAssetBreakdown"]], "getmemberstats() (defichain.ocean.consortium method)": [[25, "defichain.ocean.Consortium.getMemberStats"]], "fee (class in defichain.ocean)": [[26, "defichain.ocean.Fee"]], "estimate() (defichain.ocean.fee method)": [[26, "defichain.ocean.Fee.estimate"]], "governance (class in defichain.ocean)": [[27, "defichain.ocean.Governance"]], "getgovproposal() (defichain.ocean.governance method)": [[27, "defichain.ocean.Governance.getGovProposal"]], "listgovproposalvotes() (defichain.ocean.governance method)": [[27, "defichain.ocean.Governance.listGovProposalVotes"]], "listgovproposals() (defichain.ocean.governance method)": [[27, "defichain.ocean.Governance.listGovProposals"]], "loan (class in defichain.ocean)": [[29, "defichain.ocean.Loan"]], "getcollateraltoken() (defichain.ocean.loan method)": [[29, "defichain.ocean.Loan.getCollateralToken"]], "getloantoken() (defichain.ocean.loan method)": [[29, "defichain.ocean.Loan.getLoanToken"]], "getscheme() (defichain.ocean.loan method)": [[29, "defichain.ocean.Loan.getScheme"]], "getvault() (defichain.ocean.loan method)": [[29, "defichain.ocean.Loan.getVault"]], "listauction() (defichain.ocean.loan method)": [[29, "defichain.ocean.Loan.listAuction"]], "listcollateraltoken() (defichain.ocean.loan method)": [[29, "defichain.ocean.Loan.listCollateralToken"]], "listloantoken() (defichain.ocean.loan method)": [[29, "defichain.ocean.Loan.listLoanToken"]], "listscheme() (defichain.ocean.loan method)": [[29, "defichain.ocean.Loan.listScheme"]], "listvault() (defichain.ocean.loan method)": [[29, "defichain.ocean.Loan.listVault"]], "listvaultauctionhistory() (defichain.ocean.loan method)": [[29, "defichain.ocean.Loan.listVaultAuctionHistory"]], "masternodes (class in defichain.ocean)": [[30, "defichain.ocean.Masternodes"]], "get() (defichain.ocean.masternodes method)": [[30, "defichain.ocean.Masternodes.get"]], "list() (defichain.ocean.masternodes method)": [[30, "defichain.ocean.Masternodes.list"]], "ocean (class in defichain)": [[31, "defichain.Ocean"]], "oracles (class in defichain.ocean)": [[32, "defichain.ocean.Oracles"]], "getoraclebyaddress() (defichain.ocean.oracles method)": [[32, "defichain.ocean.Oracles.getOracleByAddress"]], "getpricefeed() (defichain.ocean.oracles method)": [[32, "defichain.ocean.Oracles.getPriceFeed"]], "list() (defichain.ocean.oracles method)": [[32, "defichain.ocean.Oracles.list"]], "poolpairs (class in defichain.ocean)": [[33, "defichain.ocean.Poolpairs"]], "get() (defichain.ocean.poolpairs method)": [[33, "defichain.ocean.Poolpairs.get"]], "getallpaths() (defichain.ocean.poolpairs method)": [[33, "defichain.ocean.Poolpairs.getAllPaths"]], "getbestpath() (defichain.ocean.poolpairs method)": [[33, "defichain.ocean.Poolpairs.getBestPath"]], "getswappabletokens() (defichain.ocean.poolpairs method)": [[33, "defichain.ocean.Poolpairs.getSwappableTokens"]], "list() (defichain.ocean.poolpairs method)": [[33, "defichain.ocean.Poolpairs.list"]], "listdexprices() (defichain.ocean.poolpairs method)": [[33, "defichain.ocean.Poolpairs.listDexPrices"]], "listpoolswapaggregates() (defichain.ocean.poolpairs method)": [[33, "defichain.ocean.Poolpairs.listPoolSwapAggregates"]], "listpoolswaps() (defichain.ocean.poolpairs method)": [[33, "defichain.ocean.Poolpairs.listPoolSwaps"]], "listpoolswapsverbose() (defichain.ocean.poolpairs method)": [[33, "defichain.ocean.Poolpairs.listPoolSwapsVerbose"]], "prices (class in defichain.ocean)": [[34, "defichain.ocean.Prices"]], "get() (defichain.ocean.prices method)": [[34, "defichain.ocean.Prices.get"]], "getfeed() (defichain.ocean.prices method)": [[34, "defichain.ocean.Prices.getFeed"]], "getfeedactive() (defichain.ocean.prices method)": [[34, "defichain.ocean.Prices.getFeedActive"]], "getfeedwithinterval() (defichain.ocean.prices method)": [[34, "defichain.ocean.Prices.getFeedWithInterval"]], "getoracles() (defichain.ocean.prices method)": [[34, "defichain.ocean.Prices.getOracles"]], "list() (defichain.ocean.prices method)": [[34, "defichain.ocean.Prices.list"]], "rawtx (class in defichain.ocean)": [[35, "defichain.ocean.RawTx"]], "get() (defichain.ocean.rawtx method)": [[35, "defichain.ocean.RawTx.get"]], "send() (defichain.ocean.rawtx method)": [[35, "defichain.ocean.RawTx.send"]], "test() (defichain.ocean.rawtx method)": [[35, "defichain.ocean.RawTx.test"]], "rpc (class in defichain.ocean)": [[36, "defichain.ocean.Rpc"]], "call() (defichain.ocean.rpc method)": [[36, "defichain.ocean.Rpc.call"]], "stats (class in defichain.ocean)": [[37, "defichain.ocean.Stats"]], "get() (defichain.ocean.stats method)": [[37, "defichain.ocean.Stats.get"]], "getburn() (defichain.ocean.stats method)": [[37, "defichain.ocean.Stats.getBurn"]], "getrewarddistribution() (defichain.ocean.stats method)": [[37, "defichain.ocean.Stats.getRewardDistribution"]], "getsupply() (defichain.ocean.stats method)": [[37, "defichain.ocean.Stats.getSupply"]], "tokens (class in defichain.ocean)": [[38, "defichain.ocean.Tokens"]], "get() (defichain.ocean.tokens method)": [[38, "defichain.ocean.Tokens.get"]], "list() (defichain.ocean.tokens method)": [[38, "defichain.ocean.Tokens.list"]], "transactions (class in defichain.ocean)": [[39, "defichain.ocean.Transactions"]], "get() (defichain.ocean.transactions method)": [[39, "defichain.ocean.Transactions.get"]], "getvins() (defichain.ocean.transactions method)": [[39, "defichain.ocean.Transactions.getVins"]], "getvouts() (defichain.ocean.transactions method)": [[39, "defichain.ocean.Transactions.getVouts"]], "account (class in defichain)": [[51, "defichain.Account"]], "derivationerror (class in defichain.exceptions.hdwallet)": [[52, "defichain.exceptions.hdwallet.DerivationError"]], "defichain.exceptions.hdwallet": [[52, "module-defichain.exceptions.hdwallet"]], "defichain.hdwallet.utils": [[54, "module-defichain.hdwallet.utils"]], "entropy_to_mnemonic() (in module defichain.hdwallet.utils)": [[54, "defichain.hdwallet.utils.entropy_to_mnemonic"]], "generate_entropy() (in module defichain.hdwallet.utils)": [[54, "defichain.hdwallet.utils.generate_entropy"]], "generate_mnemonic() (in module defichain.hdwallet.utils)": [[54, "defichain.hdwallet.utils.generate_mnemonic"]], "generate_passphrase() (in module defichain.hdwallet.utils)": [[54, "defichain.hdwallet.utils.generate_passphrase"]], "get_entropy_strength() (in module defichain.hdwallet.utils)": [[54, "defichain.hdwallet.utils.get_entropy_strength"]], "get_mnemonic_language() (in module defichain.hdwallet.utils)": [[54, "defichain.hdwallet.utils.get_mnemonic_language"]], "get_mnemonic_strength() (in module defichain.hdwallet.utils)": [[54, "defichain.hdwallet.utils.get_mnemonic_strength"]], "is_entropy() (in module defichain.hdwallet.utils)": [[54, "defichain.hdwallet.utils.is_entropy"]], "is_mnemonic() (in module defichain.hdwallet.utils)": [[54, "defichain.hdwallet.utils.is_mnemonic"]], "mnemonic_to_entropy() (in module defichain.hdwallet.utils)": [[54, "defichain.hdwallet.utils.mnemonic_to_entropy"]], "wallet (class in defichain)": [[55, "defichain.Wallet"]], "bech32_address() (defichain.wallet method)": [[55, "defichain.Wallet.bech32_address"]], "chain_code() (defichain.wallet method)": [[55, "defichain.Wallet.chain_code"]], "clean_derivation() (defichain.wallet method)": [[55, "defichain.Wallet.clean_derivation"]], "compressed() (defichain.wallet method)": [[55, "defichain.Wallet.compressed"]], "cryptocurrency() (defichain.wallet method)": [[55, "defichain.Wallet.cryptocurrency"]], "decrypt() (defichain.wallet static method)": [[55, "defichain.Wallet.decrypt"]], "default_address() (defichain.wallet method)": [[55, "defichain.Wallet.default_address"]], "dumps() (defichain.wallet method)": [[55, "defichain.Wallet.dumps"]], "encrypt() (defichain.wallet method)": [[55, "defichain.Wallet.encrypt"]], "entropy() (defichain.wallet method)": [[55, "defichain.Wallet.entropy"]], "finger_print() (defichain.wallet method)": [[55, "defichain.Wallet.finger_print"]], "from_entropy() (defichain.wallet method)": [[55, "defichain.Wallet.from_entropy"]], "from_index() (defichain.wallet method)": [[55, "defichain.Wallet.from_index"]], "from_mnemonic() (defichain.wallet method)": [[55, "defichain.Wallet.from_mnemonic"]], "from_path() (defichain.wallet method)": [[55, "defichain.Wallet.from_path"]], "from_private_key() (defichain.wallet method)": [[55, "defichain.Wallet.from_private_key"]], "from_public_key() (defichain.wallet method)": [[55, "defichain.Wallet.from_public_key"]], "from_seed() (defichain.wallet method)": [[55, "defichain.Wallet.from_seed"]], "from_wif() (defichain.wallet method)": [[55, "defichain.Wallet.from_wif"]], "from_xprivate_key() (defichain.wallet method)": [[55, "defichain.Wallet.from_xprivate_key"]], "from_xpublic_key() (defichain.wallet method)": [[55, "defichain.Wallet.from_xpublic_key"]], "get_account() (defichain.wallet method)": [[55, "defichain.Wallet.get_account"]], "hash() (defichain.wallet method)": [[55, "defichain.Wallet.hash"]], "language() (defichain.wallet method)": [[55, "defichain.Wallet.language"]], "legacy_address() (defichain.wallet method)": [[55, "defichain.Wallet.legacy_address"]], "mnemonic() (defichain.wallet method)": [[55, "defichain.Wallet.mnemonic"]], "network() (defichain.wallet method)": [[55, "defichain.Wallet.network"]], "p2pkh_address() (defichain.wallet method)": [[55, "defichain.Wallet.p2pkh_address"]], "p2sh_address() (defichain.wallet method)": [[55, "defichain.Wallet.p2sh_address"]], "p2wpkh_address() (defichain.wallet method)": [[55, "defichain.Wallet.p2wpkh_address"]], "passphrase() (defichain.wallet method)": [[55, "defichain.Wallet.passphrase"]], "path() (defichain.wallet method)": [[55, "defichain.Wallet.path"]], "private_key() (defichain.wallet method)": [[55, "defichain.Wallet.private_key"]], "public_key() (defichain.wallet method)": [[55, "defichain.Wallet.public_key"]], "root_xprivate_key() (defichain.wallet method)": [[55, "defichain.Wallet.root_xprivate_key"]], "root_xpublic_key() (defichain.wallet method)": [[55, "defichain.Wallet.root_xpublic_key"]], "seed() (defichain.wallet method)": [[55, "defichain.Wallet.seed"]], "semantic() (defichain.wallet method)": [[55, "defichain.Wallet.semantic"]], "strength() (defichain.wallet method)": [[55, "defichain.Wallet.strength"]], "symbol() (defichain.wallet method)": [[55, "defichain.Wallet.symbol"]], "uncompressed() (defichain.wallet method)": [[55, "defichain.Wallet.uncompressed"]], "wif() (defichain.wallet method)": [[55, "defichain.Wallet.wif"]], "address (class in defichain.transactions.address)": [[56, "defichain.transactions.address.Address"]], "from_address() (defichain.transactions.address.address static method)": [[56, "defichain.transactions.address.Address.from_address"]], "from_scriptpublickey() (defichain.transactions.address.address static method)": [[56, "defichain.transactions.address.Address.from_scriptPublicKey"]], "get_addresstype() (defichain.transactions.address.address static method)": [[56, "defichain.transactions.address.Address.get_addressType"]], "verify_address() (defichain.transactions.address.address static method)": [[56, "defichain.transactions.address.Address.verify_address"]], "p2pkh (class in defichain.transactions.address)": [[57, "defichain.transactions.address.P2PKH"]], "from_privatekey() (defichain.transactions.address.p2pkh static method)": [[57, "defichain.transactions.address.P2PKH.from_privateKey"]], "from_publickey() (defichain.transactions.address.p2pkh static method)": [[57, "defichain.transactions.address.P2PKH.from_publicKey"]], "from_scriptpublickey() (defichain.transactions.address.p2pkh static method)": [[57, "defichain.transactions.address.P2PKH.from_scriptPublicKey"]], "get_addresstype() (defichain.transactions.address.p2pkh method)": [[57, "defichain.transactions.address.P2PKH.get_addressType"]], "get_bytes_redeemscript() (defichain.transactions.address.p2pkh method)": [[57, "defichain.transactions.address.P2PKH.get_bytes_redeemScript"]], "get_bytes_scriptpublickey() (defichain.transactions.address.p2pkh method)": [[57, "defichain.transactions.address.P2PKH.get_bytes_scriptPublicKey"]], "get_redeemscript() (defichain.transactions.address.p2pkh method)": [[57, "defichain.transactions.address.P2PKH.get_redeemScript"]], "get_scriptpublickey() (defichain.transactions.address.p2pkh method)": [[57, "defichain.transactions.address.P2PKH.get_scriptPublicKey"]], "p2sh (class in defichain.transactions.address)": [[58, "defichain.transactions.address.P2SH"]], "from_privatekey() (defichain.transactions.address.p2sh static method)": [[58, "defichain.transactions.address.P2SH.from_privateKey"]], "from_publickey() (defichain.transactions.address.p2sh static method)": [[58, "defichain.transactions.address.P2SH.from_publicKey"]], "from_scriptpublickey() (defichain.transactions.address.p2sh static method)": [[58, "defichain.transactions.address.P2SH.from_scriptPublicKey"]], "get_addresstype() (defichain.transactions.address.p2sh method)": [[58, "defichain.transactions.address.P2SH.get_addressType"]], "get_bytes_redeemscript() (defichain.transactions.address.p2sh method)": [[58, "defichain.transactions.address.P2SH.get_bytes_redeemScript"]], "get_bytes_scriptpublickey() (defichain.transactions.address.p2sh method)": [[58, "defichain.transactions.address.P2SH.get_bytes_scriptPublicKey"]], "get_redeemscript() (defichain.transactions.address.p2sh method)": [[58, "defichain.transactions.address.P2SH.get_redeemScript"]], "get_scriptpublickey() (defichain.transactions.address.p2sh method)": [[58, "defichain.transactions.address.P2SH.get_scriptPublicKey"]], "p2wpkh (class in defichain.transactions.address)": [[59, "defichain.transactions.address.P2WPKH"]], "from_privatekey() (defichain.transactions.address.p2wpkh static method)": [[59, "defichain.transactions.address.P2WPKH.from_privateKey"]], "from_publickey() (defichain.transactions.address.p2wpkh static method)": [[59, "defichain.transactions.address.P2WPKH.from_publicKey"]], "from_scriptpublickey() (defichain.transactions.address.p2wpkh static method)": [[59, "defichain.transactions.address.P2WPKH.from_scriptPublicKey"]], "get_addresstype() (defichain.transactions.address.p2wpkh method)": [[59, "defichain.transactions.address.P2WPKH.get_addressType"]], "get_bytes_redeemscript() (defichain.transactions.address.p2wpkh method)": [[59, "defichain.transactions.address.P2WPKH.get_bytes_redeemScript"]], "get_bytes_scriptpublickey() (defichain.transactions.address.p2wpkh method)": [[59, "defichain.transactions.address.P2WPKH.get_bytes_scriptPublicKey"]], "get_redeemscript() (defichain.transactions.address.p2wpkh method)": [[59, "defichain.transactions.address.P2WPKH.get_redeemScript"]], "get_scriptpublickey() (defichain.transactions.address.p2wpkh method)": [[59, "defichain.transactions.address.P2WPKH.get_scriptPublicKey"]], "accounttoaccount (class in defichain.transactions.defitx)": [[60, "defichain.transactions.defitx.AccountToAccount"]], "accounttoutxos (class in defichain.transactions.defitx)": [[60, "defichain.transactions.defitx.AccountToUtxos"]], "anyaccounttoaccount (class in defichain.transactions.defitx)": [[60, "defichain.transactions.defitx.AnyAccountToAccount"]], "setfutureswap (class in defichain.transactions.defitx)": [[60, "defichain.transactions.defitx.SetFutureSwap"]], "utxostoaccount (class in defichain.transactions.defitx)": [[60, "defichain.transactions.defitx.UtxosToAccount"]], "createcfp (class in defichain.transactions.defitx)": [[61, "defichain.transactions.defitx.CreateCfp"]], "createvoc (class in defichain.transactions.defitx)": [[61, "defichain.transactions.defitx.CreateVoc"]], "vote (class in defichain.transactions.defitx)": [[61, "defichain.transactions.defitx.Vote"]], "paybackloan (class in defichain.transactions.defitx)": [[63, "defichain.transactions.defitx.PaybackLoan"]], "takeloan (class in defichain.transactions.defitx)": [[63, "defichain.transactions.defitx.TakeLoan"]], "createmasternode (class in defichain.transactions.defitx)": [[64, "defichain.transactions.defitx.CreateMasternode"]], "resignmasternode (class in defichain.transactions.defitx)": [[64, "defichain.transactions.defitx.ResignMasternode"]], "updatemasternode (class in defichain.transactions.defitx)": [[64, "defichain.transactions.defitx.UpdateMasternode"]], "addpoolliquidity (class in defichain.transactions.defitx)": [[65, "defichain.transactions.defitx.AddPoolLiquidity"]], "compositeswap (class in defichain.transactions.defitx)": [[65, "defichain.transactions.defitx.CompositeSwap"]], "poolswap (class in defichain.transactions.defitx)": [[65, "defichain.transactions.defitx.PoolSwap"]], "removepoolliquidity (class in defichain.transactions.defitx)": [[65, "defichain.transactions.defitx.RemovePoolLiquidity"]], "closevault (class in defichain.transactions.defitx)": [[66, "defichain.transactions.defitx.CloseVault"]], "createvault (class in defichain.transactions.defitx)": [[66, "defichain.transactions.defitx.CreateVault"]], "deposittovault (class in defichain.transactions.defitx)": [[66, "defichain.transactions.defitx.DepositToVault"]], "placeauctionbid (class in defichain.transactions.defitx)": [[66, "defichain.transactions.defitx.PlaceAuctionBid"]], "updatevault (class in defichain.transactions.defitx)": [[66, "defichain.transactions.defitx.UpdateVault"]], "withdrawfromvault (class in defichain.transactions.defitx)": [[66, "defichain.transactions.defitx.WithdrawFromVault"]], "privatekey (class in defichain.transactions.keys)": [[68, "defichain.transactions.keys.PrivateKey"]], "publickey (class in defichain.transactions.keys)": [[68, "defichain.transactions.keys.PublicKey"]], "estimate_fee() (in module defichain.transactions.rawtransactions)": [[69, "defichain.transactions.rawtransactions.estimate_fee"]], "sign_legacy_input() (in module defichain.transactions.rawtransactions.sign)": [[71, "defichain.transactions.rawtransactions.sign.sign_legacy_input"]], "sign_segwit_input() (in module defichain.transactions.rawtransactions.sign)": [[71, "defichain.transactions.rawtransactions.sign.sign_segwit_input"]], "transaction (class in defichain.transactions.rawtransactions)": [[72, "defichain.transactions.rawtransactions.Transaction"]], "deserialize() (defichain.transactions.rawtransactions.transaction static method)": [[72, "defichain.transactions.rawtransactions.Transaction.deserialize"]], "sign() (defichain.transactions.rawtransactions.transaction method)": [[72, "defichain.transactions.rawtransactions.Transaction.sign"]], "to_json() (defichain.transactions.rawtransactions.transaction method)": [[72, "defichain.transactions.rawtransactions.Transaction.to_json"]], "verify() (defichain.transactions.rawtransactions.transaction method)": [[72, "defichain.transactions.rawtransactions.Transaction.verify"]], "txcoinbaseinput (class in defichain.transactions.rawtransactions)": [[73, "defichain.transactions.rawtransactions.TxCoinbaseInput"]], "txinput (class in defichain.transactions.rawtransactions)": [[73, "defichain.transactions.rawtransactions.TxInput"]], "txp2pkhinput (class in defichain.transactions.rawtransactions)": [[73, "defichain.transactions.rawtransactions.TxP2PKHInput"]], "txp2shinput (class in defichain.transactions.rawtransactions)": [[73, "defichain.transactions.rawtransactions.TxP2SHInput"]], "txp2wpkhinput (class in defichain.transactions.rawtransactions)": [[73, "defichain.transactions.rawtransactions.TxP2WPKHInput"]], "deserialize() (defichain.transactions.rawtransactions.txcoinbaseinput static method)": [[73, "defichain.transactions.rawtransactions.TxCoinbaseInput.deserialize"]], "deserialize() (defichain.transactions.rawtransactions.txinput static method)": [[73, "defichain.transactions.rawtransactions.TxInput.deserialize"]], "deserialize() (defichain.transactions.rawtransactions.txp2pkhinput static method)": [[73, "defichain.transactions.rawtransactions.TxP2PKHInput.deserialize"]], "deserialize() (defichain.transactions.rawtransactions.txp2shinput static method)": [[73, "defichain.transactions.rawtransactions.TxP2SHInput.deserialize"]], "deserialize() (defichain.transactions.rawtransactions.txp2wpkhinput static method)": [[73, "defichain.transactions.rawtransactions.TxP2WPKHInput.deserialize"]], "to_json() (defichain.transactions.rawtransactions.txcoinbaseinput method)": [[73, "defichain.transactions.rawtransactions.TxCoinbaseInput.to_json"]], "to_json() (defichain.transactions.rawtransactions.txinput method)": [[73, "defichain.transactions.rawtransactions.TxInput.to_json"]], "to_json() (defichain.transactions.rawtransactions.txp2pkhinput method)": [[73, "defichain.transactions.rawtransactions.TxP2PKHInput.to_json"]], "to_json() (defichain.transactions.rawtransactions.txp2shinput method)": [[73, "defichain.transactions.rawtransactions.TxP2SHInput.to_json"]], "to_json() (defichain.transactions.rawtransactions.txp2wpkhinput method)": [[73, "defichain.transactions.rawtransactions.TxP2WPKHInput.to_json"]], "txaddressoutput (class in defichain.transactions.rawtransactions)": [[74, "defichain.transactions.rawtransactions.TxAddressOutput"]], "txcoinbaseoutput (class in defichain.transactions.rawtransactions)": [[74, "defichain.transactions.rawtransactions.TxCoinbaseOutput"]], "txdefioutput (class in defichain.transactions.rawtransactions)": [[74, "defichain.transactions.rawtransactions.TxDefiOutput"]], "txoutput (class in defichain.transactions.rawtransactions)": [[74, "defichain.transactions.rawtransactions.TxOutput"]], "deserialize() (defichain.transactions.rawtransactions.txaddressoutput static method)": [[74, "defichain.transactions.rawtransactions.TxAddressOutput.deserialize"]], "deserialize() (defichain.transactions.rawtransactions.txcoinbaseoutput static method)": [[74, "defichain.transactions.rawtransactions.TxCoinbaseOutput.deserialize"]], "deserialize() (defichain.transactions.rawtransactions.txdefioutput static method)": [[74, "defichain.transactions.rawtransactions.TxDefiOutput.deserialize"]], "deserialize() (defichain.transactions.rawtransactions.txoutput static method)": [[74, "defichain.transactions.rawtransactions.TxOutput.deserialize"]], "to_json() (defichain.transactions.rawtransactions.txaddressoutput method)": [[74, "defichain.transactions.rawtransactions.TxAddressOutput.to_json"]], "to_json() (defichain.transactions.rawtransactions.txcoinbaseoutput method)": [[74, "defichain.transactions.rawtransactions.TxCoinbaseOutput.to_json"]], "to_json() (defichain.transactions.rawtransactions.txdefioutput method)": [[74, "defichain.transactions.rawtransactions.TxDefiOutput.to_json"]], "to_json() (defichain.transactions.rawtransactions.txoutput method)": [[74, "defichain.transactions.rawtransactions.TxOutput.to_json"]], "witness (class in defichain.transactions.rawtransactions)": [[75, "defichain.transactions.rawtransactions.Witness"]], "witnesshash (class in defichain.transactions.rawtransactions)": [[75, "defichain.transactions.rawtransactions.WitnessHash"]], "deserialize() (defichain.transactions.rawtransactions.witness static method)": [[75, "defichain.transactions.rawtransactions.Witness.deserialize"]], "deserialize() (defichain.transactions.rawtransactions.witnesshash static method)": [[75, "defichain.transactions.rawtransactions.WitnessHash.deserialize"]], "verify() (defichain.transactions.rawtransactions.witness method)": [[75, "defichain.transactions.rawtransactions.Witness.verify"]], "verify() (defichain.transactions.rawtransactions.witnesshash method)": [[75, "defichain.transactions.rawtransactions.WitnessHash.verify"]], "remotedatanode (class in defichain.transactions.remotedata)": [[77, "defichain.transactions.remotedata.RemoteDataNode"]], "check_masternode() (defichain.transactions.remotedata.remotedatanode method)": [[77, "defichain.transactions.remotedata.RemoteDataNode.check_masternode"]], "get_unspent() (defichain.transactions.remotedata.remotedatanode method)": [[77, "defichain.transactions.remotedata.RemoteDataNode.get_unspent"]], "send_tx() (defichain.transactions.remotedata.remotedatanode method)": [[77, "defichain.transactions.remotedata.RemoteDataNode.send_tx"]], "test_tx() (defichain.transactions.remotedata.remotedatanode method)": [[77, "defichain.transactions.remotedata.RemoteDataNode.test_tx"]], "remotedataocean (class in defichain.transactions.remotedata)": [[78, "defichain.transactions.remotedata.RemoteDataOcean"]], "check_masternode() (defichain.transactions.remotedata.remotedataocean method)": [[78, "defichain.transactions.remotedata.RemoteDataOcean.check_masternode"]], "get_unspent() (defichain.transactions.remotedata.remotedataocean method)": [[78, "defichain.transactions.remotedata.RemoteDataOcean.get_unspent"]], "send_tx() (defichain.transactions.remotedata.remotedataocean method)": [[78, "defichain.transactions.remotedata.RemoteDataOcean.send_tx"]], "test_tx() (defichain.transactions.remotedata.remotedataocean method)": [[78, "defichain.transactions.remotedata.RemoteDataOcean.test_tx"]], "calculate (class in defichain.transactions.utils)": [[79, "defichain.transactions.utils.Calculate"]], "converter (class in defichain.transactions.utils)": [[79, "defichain.transactions.utils.Converter"]], "token (class in defichain.transactions.utils)": [[79, "defichain.transactions.utils.Token"]], "verify (class in defichain.transactions.utils)": [[79, "defichain.transactions.utils.Verify"]], "float_to_int() (defichain.transactions.utils.converter static method)": [[79, "defichain.transactions.utils.Converter.float_to_int"]], "int_to_float() (defichain.transactions.utils.converter static method)": [[79, "defichain.transactions.utils.Converter.int_to_float"]], "accounts (class in defichain.transactions.builder.modules)": [[80, "defichain.transactions.builder.modules.Accounts"]], "accounttoaccount() (defichain.transactions.builder.modules.accounts method)": [[80, "defichain.transactions.builder.modules.Accounts.accounttoaccount"]], "accounttoutxos() (defichain.transactions.builder.modules.accounts method)": [[80, "defichain.transactions.builder.modules.Accounts.accounttoutxos"]], "utxostoaccount() (defichain.transactions.builder.modules.accounts method)": [[80, "defichain.transactions.builder.modules.Accounts.utxostoaccount"]], "data (class in defichain.transactions.builder.modules)": [[81, "defichain.transactions.builder.modules.Data"]], "hex_data() (defichain.transactions.builder.modules.data method)": [[81, "defichain.transactions.builder.modules.Data.hex_data"]], "str_data() (defichain.transactions.builder.modules.data method)": [[81, "defichain.transactions.builder.modules.Data.str_data"]], "governance (class in defichain.transactions.builder.modules)": [[82, "defichain.transactions.builder.modules.Governance"]], "vote() (defichain.transactions.builder.modules.governance method)": [[82, "defichain.transactions.builder.modules.Governance.vote"]], "loans (class in defichain.transactions.builder.modules)": [[84, "defichain.transactions.builder.modules.Loans"]], "paybackloan() (defichain.transactions.builder.modules.loans method)": [[84, "defichain.transactions.builder.modules.Loans.paybackloan"]], "takeloan() (defichain.transactions.builder.modules.loans method)": [[84, "defichain.transactions.builder.modules.Loans.takeloan"]], "masternode (class in defichain.transactions.builder.modules)": [[85, "defichain.transactions.builder.modules.Masternode"]], "createmasternode() (defichain.transactions.builder.modules.masternode method)": [[85, "defichain.transactions.builder.modules.Masternode.createmasternode"]], "resignmasternode() (defichain.transactions.builder.modules.masternode method)": [[85, "defichain.transactions.builder.modules.Masternode.resignmasternode"]], "updatemasternode() (defichain.transactions.builder.modules.masternode method)": [[85, "defichain.transactions.builder.modules.Masternode.updatemasternode"]], "pool (class in defichain.transactions.builder.modules)": [[86, "defichain.transactions.builder.modules.Pool"]], "addpoolliquidity() (defichain.transactions.builder.modules.pool method)": [[86, "defichain.transactions.builder.modules.Pool.addpoolliquidity"]], "compositeswap() (defichain.transactions.builder.modules.pool method)": [[86, "defichain.transactions.builder.modules.Pool.compositeswap"]], "poolswap() (defichain.transactions.builder.modules.pool method)": [[86, "defichain.transactions.builder.modules.Pool.poolswap"]], "removepoolliquidity() (defichain.transactions.builder.modules.pool method)": [[86, "defichain.transactions.builder.modules.Pool.removepoolliquidity"]], "txbuilder (class in defichain.transactions.builder)": [[87, "defichain.transactions.builder.TxBuilder"]], "get_account() (defichain.transactions.builder.txbuilder method)": [[87, "defichain.transactions.builder.TxBuilder.get_account"]], "get_address() (defichain.transactions.builder.txbuilder method)": [[87, "defichain.transactions.builder.TxBuilder.get_address"]], "get_datasource() (defichain.transactions.builder.txbuilder method)": [[87, "defichain.transactions.builder.TxBuilder.get_dataSource"]], "get_feeperbyte() (defichain.transactions.builder.txbuilder method)": [[87, "defichain.transactions.builder.TxBuilder.get_feePerByte"]], "get_inputs_tx() (defichain.transactions.builder.txbuilder method)": [[87, "defichain.transactions.builder.TxBuilder.get_inputs_tx"]], "send_tx() (defichain.transactions.builder.txbuilder method)": [[87, "defichain.transactions.builder.TxBuilder.send_tx"]], "test_tx() (defichain.transactions.builder.txbuilder method)": [[87, "defichain.transactions.builder.TxBuilder.test_tx"]], "utxo (class in defichain.transactions.builder.modules)": [[88, "defichain.transactions.builder.modules.UTXO"]], "send() (defichain.transactions.builder.modules.utxo method)": [[88, "defichain.transactions.builder.modules.UTXO.send"]], "sendall() (defichain.transactions.builder.modules.utxo method)": [[88, "defichain.transactions.builder.modules.UTXO.sendall"]], "sendmany() (defichain.transactions.builder.modules.utxo method)": [[88, "defichain.transactions.builder.modules.UTXO.sendmany"]], "vault (class in defichain.transactions.builder.modules)": [[89, "defichain.transactions.builder.modules.Vault"]], "createvault() (defichain.transactions.builder.modules.vault method)": [[89, "defichain.transactions.builder.modules.Vault.createvault"]], "deposittovault() (defichain.transactions.builder.modules.vault method)": [[89, "defichain.transactions.builder.modules.Vault.deposittovault"]], "withdrawfromvault() (defichain.transactions.builder.modules.vault method)": [[89, "defichain.transactions.builder.modules.Vault.withdrawfromvault"]], "addresserror (class in defichain.exceptions.transactions)": [[90, "defichain.exceptions.transactions.AddressError"]], "defitxerror (class in defichain.exceptions.transactions)": [[90, "defichain.exceptions.transactions.DefiTxError"]], "deserializeerror (class in defichain.exceptions.transactions)": [[90, "defichain.exceptions.transactions.DeserializeError"]], "inputerror (class in defichain.exceptions.transactions)": [[90, "defichain.exceptions.transactions.InputError"]], "keyerror (class in defichain.exceptions.transactions)": [[90, "defichain.exceptions.transactions.KeyError"]], "notyetsupportederror (class in defichain.exceptions.transactions)": [[90, "defichain.exceptions.transactions.NotYetSupportedError"]], "rawtransactionerror (class in defichain.exceptions.transactions)": [[90, "defichain.exceptions.transactions.RawTransactionError"]], "tokenerror (class in defichain.exceptions.transactions)": [[90, "defichain.exceptions.transactions.TokenError"]], "txbuildererror (class in defichain.exceptions.transactions)": [[90, "defichain.exceptions.transactions.TxBuilderError"]], "verifyerror (class in defichain.exceptions.transactions)": [[90, "defichain.exceptions.transactions.VerifyError"]], "defichain.exceptions.transactions": [[90, "module-defichain.exceptions.transactions"]], "logger (class in defichain.logger)": [[92, "defichain.logger.Logger"]], "defichain.logger": [[92, "module-defichain.logger"]], "mnemonic (class in defichain.mnemonic)": [[93, "defichain.mnemonic.Mnemonic"]], "check() (defichain.mnemonic.mnemonic method)": [[93, "defichain.mnemonic.Mnemonic.check"]], "defichain.mnemonic": [[93, "module-defichain.mnemonic"]], "detect_language() (defichain.mnemonic.mnemonic class method)": [[93, "defichain.mnemonic.Mnemonic.detect_language"]], "generate() (defichain.mnemonic.mnemonic method)": [[93, "defichain.mnemonic.Mnemonic.generate"]], "list_languages() (defichain.mnemonic.mnemonic class method)": [[93, "defichain.mnemonic.Mnemonic.list_languages"]]}})